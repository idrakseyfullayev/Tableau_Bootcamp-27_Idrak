<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='3'>
        <calculation class='tableau' formula='3' />
      </column>
      <column caption='New_Old' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Old&quot;'>
        <calculation class='tableau' formula='&quot;Old&quot;' />
        <members>
          <member value='&quot;New&quot;' />
          <member value='&quot;Old&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='turbo_az' inline='true' name='federated.1e4496c0337o1c10k0hbr1igjoxi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='turbo_az' name='textscan.0qdg2eb1y7e4cq14ddyaw1cthztw'>
            <connection class='textscan' directory='C:/Users/dell/Desktop/Tableau/week3' filename='turbo_az.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0qdg2eb1y7e4cq14ddyaw1cthztw' name='turbo_az.csv' table='[turbo_az#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Qiymet' ordinal='0' />
            <column datatype='string' name='sign' ordinal='1' />
            <column datatype='string' name='Sheher' ordinal='2' />
            <column datatype='string' name='Marka' ordinal='3' />
            <column datatype='string' name='Model' ordinal='4' />
            <column datatype='integer' name='Buraxilish_ili' ordinal='5' />
            <column datatype='string' name='Ban_novu' ordinal='6' />
            <column datatype='string' name='Reng' ordinal='7' />
            <column datatype='real' name='Muherrik_hecm' ordinal='8' />
            <column datatype='integer' name='Muherrik_guc' ordinal='9' />
            <column datatype='string' name='Yanacaq_novu' ordinal='10' />
            <column datatype='integer' name='Yurush' ordinal='11' />
            <column datatype='string' name='Suret_qutusu' ordinal='12' />
            <column datatype='string' name='Oturucu' ordinal='13' />
            <column datatype='string' name='Yeni' ordinal='14' />
            <column datatype='string' name='barter_mumkundurmu' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0qdg2eb1y7e4cq14ddyaw1cthztw' name='turbo_az.csv' table='[turbo_az#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Qiymet' ordinal='0' />
            <column datatype='string' name='sign' ordinal='1' />
            <column datatype='string' name='Sheher' ordinal='2' />
            <column datatype='string' name='Marka' ordinal='3' />
            <column datatype='string' name='Model' ordinal='4' />
            <column datatype='integer' name='Buraxilish_ili' ordinal='5' />
            <column datatype='string' name='Ban_novu' ordinal='6' />
            <column datatype='string' name='Reng' ordinal='7' />
            <column datatype='real' name='Muherrik_hecm' ordinal='8' />
            <column datatype='integer' name='Muherrik_guc' ordinal='9' />
            <column datatype='string' name='Yanacaq_novu' ordinal='10' />
            <column datatype='integer' name='Yurush' ordinal='11' />
            <column datatype='string' name='Suret_qutusu' ordinal='12' />
            <column datatype='string' name='Oturucu' ordinal='13' />
            <column datatype='string' name='Yeni' ordinal='14' />
            <column datatype='string' name='barter_mumkundurmu' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[turbo_az.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Qiymet</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Qiymet]</local-name>
            <parent-name>[turbo_az.csv]</parent-name>
            <remote-alias>Qiymet</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sign</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sign]</local-name>
            <parent-name>[turbo_az.csv]</parent-name>
            <remote-alias>sign</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sheher</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sheher]</local-name>
            <parent-name>[turbo_az.csv]</parent-name>
            <remote-alias>Sheher</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marka</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Marka]</local-name>
            <parent-name>[turbo_az.csv]</parent-name>
            <remote-alias>Marka</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[turbo_az.csv]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Buraxilish_ili</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Buraxilish_ili]</local-name>
            <parent-name>[turbo_az.csv]</parent-name>
            <remote-alias>Buraxilish_ili</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ban_novu</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ban_novu]</local-name>
            <parent-name>[turbo_az.csv]</parent-name>
            <remote-alias>Ban_novu</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Reng</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Reng]</local-name>
            <parent-name>[turbo_az.csv]</parent-name>
            <remote-alias>Reng</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Muherrik_hecm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Muherrik_hecm]</local-name>
            <parent-name>[turbo_az.csv]</parent-name>
            <remote-alias>Muherrik_hecm</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Muherrik_guc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Muherrik_guc]</local-name>
            <parent-name>[turbo_az.csv]</parent-name>
            <remote-alias>Muherrik_guc</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Yanacaq_novu</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Yanacaq_novu]</local-name>
            <parent-name>[turbo_az.csv]</parent-name>
            <remote-alias>Yanacaq_novu</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Yurush</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Yurush]</local-name>
            <parent-name>[turbo_az.csv]</parent-name>
            <remote-alias>Yurush</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Suret_qutusu</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Suret_qutusu]</local-name>
            <parent-name>[turbo_az.csv]</parent-name>
            <remote-alias>Suret_qutusu</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oturucu</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Oturucu]</local-name>
            <parent-name>[turbo_az.csv]</parent-name>
            <remote-alias>Oturucu</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Yeni</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Yeni]</local-name>
            <parent-name>[turbo_az.csv]</parent-name>
            <remote-alias>Yeni</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>barter_mumkundurmu</remote-name>
            <remote-type>129</remote-type>
            <local-name>[barter_mumkundurmu]</local-name>
            <parent-name>[turbo_az.csv]</parent-name>
            <remote-alias>barter_mumkundurmu</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ban novu' datatype='string' name='[Ban_novu]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Buraxilish ili' datatype='integer' name='[Buraxilish_ili]' role='dimension' type='ordinal' />
      <column caption='Yeni_New_Old_' datatype='boolean' name='[Calculation_411516442167836674]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2] = &apos;New&apos; THEN [Yeni] = &apos;Bəli&apos;&#13;&#10;ELSE&#13;&#10;    [Yeni] = &apos;Xeyr&apos;&#13;&#10;END' />
      </column>
      <column caption='Top 1' datatype='boolean' name='[Calculation_411516442179371011]' role='measure' type='nominal'>
        <calculation class='tableau' formula='INDEX() = 1'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Marka]' role='dimension' type='nominal' />
      <column datatype='string' name='[Model]' role='dimension' type='nominal' />
      <column caption='Muherrik guc' datatype='integer' name='[Muherrik_guc]' role='measure' type='quantitative' />
      <column caption='Muherrik hecm' datatype='real' name='[Muherrik_hecm]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Qiymet]' role='measure' type='quantitative' />
      <column datatype='string' name='[Reng]' role='dimension' type='nominal' />
      <column caption='Suret qutusu' datatype='string' name='[Suret_qutusu]' role='dimension' type='nominal' />
      <column caption='Yanacaq novu' datatype='string' name='[Yanacaq_novu]' role='dimension' type='nominal' />
      <column datatype='string' name='[Yeni]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='turbo_az.csv' datatype='table' name='[__tableau_internal_object_id__].[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]' role='measure' type='quantitative' />
      <column caption='Barter Mumkundurmu' datatype='string' name='[barter_mumkundurmu]' role='dimension' type='nominal' />
      <column caption='Sign' datatype='string' name='[sign]' role='dimension' type='nominal' />
      <column-instance column='[Model Set]' derivation='InOut' name='[io:Model Set:nk]' pivot='key' type='nominal' />
      <column-instance column='[Marka]' derivation='None' name='[none:Marka:nk]' pivot='key' type='nominal' />
      <column-instance column='[Reng]' derivation='None' name='[none:Reng:nk]' pivot='key' type='nominal' />
      <column-instance column='[Yeni]' derivation='None' name='[none:Yeni:nk]' pivot='key' type='nominal' />
      <group caption='Model Set' name='[Model Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([Qiymet])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Model]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/dell/AppData/Local/Temp/TableauTemp/#TableauTemp_0r33nnz0eqxo881fmzxng1snvpn9.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/06/2024 01:02:44 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Qiymet</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Qiymet]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Qiymet</remote-alias>
              <ordinal>0</ordinal>
              <family>turbo_az.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>393</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sign</remote-name>
              <remote-type>129</remote-type>
              <local-name>[sign]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sign</remote-alias>
              <ordinal>1</ordinal>
              <family>turbo_az.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sheher</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sheher]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sheher</remote-alias>
              <ordinal>2</ordinal>
              <family>turbo_az.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Marka</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Marka]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Marka</remote-alias>
              <ordinal>3</ordinal>
              <family>turbo_az.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>45</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Model</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Model]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Model</remote-alias>
              <ordinal>4</ordinal>
              <family>turbo_az.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>262</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Buraxilish_ili</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Buraxilish_ili]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Buraxilish_ili</remote-alias>
              <ordinal>5</ordinal>
              <family>turbo_az.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ban_novu</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ban_novu]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ban_novu</remote-alias>
              <ordinal>6</ordinal>
              <family>turbo_az.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Reng</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Reng]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Reng</remote-alias>
              <ordinal>7</ordinal>
              <family>turbo_az.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Muherrik_hecm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Muherrik_hecm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Muherrik_hecm</remote-alias>
              <ordinal>8</ordinal>
              <family>turbo_az.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Muherrik_guc</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Muherrik_guc]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Muherrik_guc</remote-alias>
              <ordinal>9</ordinal>
              <family>turbo_az.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>181</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Yanacaq_novu</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Yanacaq_novu]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Yanacaq_novu</remote-alias>
              <ordinal>10</ordinal>
              <family>turbo_az.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Yurush</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Yurush]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Yurush</remote-alias>
              <ordinal>11</ordinal>
              <family>turbo_az.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>482</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Suret_qutusu</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Suret_qutusu]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Suret_qutusu</remote-alias>
              <ordinal>12</ordinal>
              <family>turbo_az.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Oturucu</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Oturucu]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Oturucu</remote-alias>
              <ordinal>13</ordinal>
              <family>turbo_az.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Yeni</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Yeni]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Yeni</remote-alias>
              <ordinal>14</ordinal>
              <family>turbo_az.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>barter_mumkundurmu</remote-name>
              <remote-type>129</remote-type>
              <local-name>[barter_mumkundurmu]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>barter_mumkundurmu</remote-alias>
              <ordinal>15</ordinal>
              <family>turbo_az.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Marka:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Citroen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mazda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Audi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iveco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suzuki&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cadillac&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Land Rover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Volkswagen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nissan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Daewoo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mercedes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Changan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lexus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Infiniti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rolls-Royce&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bentley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jeep&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tofas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Honda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ravon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chery&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maserati&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GAZ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Opel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Great Wall&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peugeot&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hyundai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Renault&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran Khodro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Skoda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DAF&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mercedes-Maybach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chevrolet&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MAZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BMW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Toyota&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haval&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Porsche&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fiat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mitsubishi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Buick&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LADA (VAZ)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;UAZ&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Model Set:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Yeni:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bəli&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Xeyr&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Reng:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Qara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ağ&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Azerbaijan&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Qiymet' />
        <field-sort-custom-order field='sign' />
        <field-sort-custom-order field='Sheher' />
        <field-sort-custom-order field='Marka' />
        <field-sort-custom-order field='Model' />
        <field-sort-custom-order field='Buraxilish_ili' />
        <field-sort-custom-order field='Ban_novu' />
        <field-sort-custom-order field='Reng' />
        <field-sort-custom-order field='Muherrik_hecm' />
        <field-sort-custom-order field='Muherrik_guc' />
        <field-sort-custom-order field='Yanacaq_novu' />
        <field-sort-custom-order field='Yurush' />
        <field-sort-custom-order field='Suret_qutusu' />
        <field-sort-custom-order field='Oturucu' />
        <field-sort-custom-order field='Yeni' />
        <field-sort-custom-order field='Calculation_411516442164256769' />
        <field-sort-custom-order field='barter_mumkundurmu' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='3'>
          <calculation class='tableau' formula='3' />
        </column>
        <column caption='New_Old' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Old&quot;'>
          <calculation class='tableau' formula='&quot;Old&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='turbo_az.csv' id='turbo_az.csv_3AA2C172AA294F98B86C3314F2296DAA'>
            <properties context=''>
              <relation connection='textscan.0qdg2eb1y7e4cq14ddyaw1cthztw' name='turbo_az.csv' table='[turbo_az#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Qiymet' ordinal='0' />
                  <column datatype='string' name='sign' ordinal='1' />
                  <column datatype='string' name='Sheher' ordinal='2' />
                  <column datatype='string' name='Marka' ordinal='3' />
                  <column datatype='string' name='Model' ordinal='4' />
                  <column datatype='integer' name='Buraxilish_ili' ordinal='5' />
                  <column datatype='string' name='Ban_novu' ordinal='6' />
                  <column datatype='string' name='Reng' ordinal='7' />
                  <column datatype='real' name='Muherrik_hecm' ordinal='8' />
                  <column datatype='integer' name='Muherrik_guc' ordinal='9' />
                  <column datatype='string' name='Yanacaq_novu' ordinal='10' />
                  <column datatype='integer' name='Yurush' ordinal='11' />
                  <column datatype='string' name='Suret_qutusu' ordinal='12' />
                  <column datatype='string' name='Oturucu' ordinal='13' />
                  <column datatype='string' name='Yeni' ordinal='14' />
                  <column datatype='string' name='barter_mumkundurmu' ordinal='15' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='1. Show the relationship between &quot;Yurush&quot; and &quot;Qiymet” by creating Scatter Plotaccording to “Marka”.'>
      <table>
        <view>
          <datasources>
            <datasource caption='turbo_az' name='federated.1e4496c0337o1c10k0hbr1igjoxi' />
          </datasources>
          <datasource-dependencies datasource='federated.1e4496c0337o1c10k0hbr1igjoxi'>
            <column datatype='string' name='[Marka]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Qiymet]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Yurush]' role='measure' type='quantitative' />
            <column-instance column='[Qiymet]' derivation='Avg' name='[avg:Qiymet:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yurush]' derivation='Avg' name='[avg:Yurush:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Marka]' derivation='None' name='[none:Marka:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1e4496c0337o1c10k0hbr1igjoxi].[avg:Qiymet:qk]</rows>
        <cols>[federated.1e4496c0337o1c10k0hbr1igjoxi].[avg:Yurush:qk]</cols>
      </table>
      <simple-id uuid='{30D6546F-1D04-4BB0-8AC3-07F05A3CBC08}' />
    </worksheet>
    <worksheet name='2. Create a dynamic set to show top N Models (with a default value of 3) by &quot;Qiymet&quot;.'>
      <table>
        <view>
          <datasources>
            <datasource caption='turbo_az' name='federated.1e4496c0337o1c10k0hbr1igjoxi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='3'>
              <calculation class='tableau' formula='3' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1e4496c0337o1c10k0hbr1igjoxi'>
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Qiymet]' role='measure' type='quantitative' />
            <column-instance column='[Qiymet]' derivation='Avg' name='[avg:Qiymet:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Model Set]' derivation='InOut' name='[io:Model Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <natural-sort column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[io:Model Set:nk]' direction='DESC' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1e4496c0337o1c10k0hbr1igjoxi].[avg:Qiymet:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[io:Model Set:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk]</rows>
        <cols>[federated.1e4496c0337o1c10k0hbr1igjoxi].[avg:Qiymet:qk]</cols>
      </table>
      <simple-id uuid='{67069A16-8170-486A-B82F-D80A04AA75FD}' />
    </worksheet>
    <worksheet name='2. Create a dynamic set to show top N Models (with a default value of 3) by &quot;Qiymet&quot;_2'>
      <table>
        <view>
          <datasources>
            <datasource caption='turbo_az' name='federated.1e4496c0337o1c10k0hbr1igjoxi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='3'>
              <calculation class='tableau' formula='3' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1e4496c0337o1c10k0hbr1igjoxi'>
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Qiymet]' role='measure' type='quantitative' />
            <column-instance column='[Qiymet]' derivation='Median' name='[med:Qiymet:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MEDIAN([Qiymet])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Model:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1e4496c0337o1c10k0hbr1igjoxi].[med:Qiymet:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk]</rows>
        <cols>[federated.1e4496c0337o1c10k0hbr1igjoxi].[med:Qiymet:qk]</cols>
      </table>
      <simple-id uuid='{3602B830-A4B3-4AA5-B608-9686BAD8CD4A}' />
    </worksheet>
    <worksheet name='3. Compare BMW and Lexus car prices. Then analyze BMW and Lexus car pricedifference between new and old models._1'>
      <table>
        <view>
          <datasources>
            <datasource caption='turbo_az' name='federated.1e4496c0337o1c10k0hbr1igjoxi' />
          </datasources>
          <datasource-dependencies datasource='federated.1e4496c0337o1c10k0hbr1igjoxi'>
            <column datatype='string' name='[Marka]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Qiymet]' role='measure' type='quantitative' />
            <column-instance column='[Qiymet]' derivation='Avg' name='[avg:Qiymet:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Marka]' derivation='None' name='[none:Marka:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Marka:nk]' member='&quot;BMW&quot;' />
              <groupfilter function='member' level='[none:Marka:nk]' member='&quot;Lexus&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1424309015274048' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1e4496c0337o1c10k0hbr1igjoxi].[avg:Qiymet:qk]</rows>
        <cols>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</cols>
      </table>
      <simple-id uuid='{9ED39F0A-CF39-4ACD-B662-5DC9C102ADB3}' />
    </worksheet>
    <worksheet name='3. Compare BMW and Lexus car prices. Then analyze BMW and Lexus car pricedifference between new and old models._2'>
      <table>
        <view>
          <datasources>
            <datasource caption='turbo_az' name='federated.1e4496c0337o1c10k0hbr1igjoxi' />
          </datasources>
          <datasource-dependencies datasource='federated.1e4496c0337o1c10k0hbr1igjoxi'>
            <column datatype='string' name='[Marka]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Qiymet]' role='measure' type='quantitative' />
            <column datatype='string' name='[Yeni]' role='dimension' type='nominal' />
            <column-instance column='[Qiymet]' derivation='Avg' name='[avg:Qiymet:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Marka]' derivation='None' name='[none:Marka:nk]' pivot='key' type='nominal' />
            <column-instance column='[Yeni]' derivation='None' name='[none:Yeni:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Marka:nk]' member='&quot;BMW&quot;' />
              <groupfilter function='member' level='[none:Marka:nk]' member='&quot;Lexus&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Yeni:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1424309015274048' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1e4496c0337o1c10k0hbr1igjoxi].[avg:Qiymet:qk]</rows>
        <cols>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</cols>
      </table>
      <simple-id uuid='{1F7E63A3-C239-4878-BB3D-854179AA8CD1}' />
    </worksheet>
    <worksheet name='3. Compare BMW and Lexus car prices. Then analyze BMW and Lexus car pricedifference between new and old models._3'>
      <table>
        <view>
          <datasources>
            <datasource caption='turbo_az' name='federated.1e4496c0337o1c10k0hbr1igjoxi' />
          </datasources>
          <datasource-dependencies datasource='federated.1e4496c0337o1c10k0hbr1igjoxi'>
            <column datatype='string' name='[Marka]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Qiymet]' role='measure' type='quantitative' />
            <column datatype='string' name='[Yeni]' role='dimension' type='nominal' />
            <column-instance column='[Qiymet]' derivation='Avg' name='[avg:Qiymet:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Marka]' derivation='None' name='[none:Marka:nk]' pivot='key' type='nominal' />
            <column-instance column='[Yeni]' derivation='None' name='[none:Yeni:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Marka:nk]' member='&quot;BMW&quot;' />
              <groupfilter function='member' level='[none:Marka:nk]' member='&quot;Lexus&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Yeni:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1424309015274048' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1e4496c0337o1c10k0hbr1igjoxi].[avg:Qiymet:qk]</rows>
        <cols>([federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Yeni:nk] / [federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk])</cols>
      </table>
      <simple-id uuid='{6D93EFAC-FE80-4AE0-BD3E-FB3E99FFB180}' />
    </worksheet>
    <worksheet name='3. Compare BMW and Lexus car prices. Then analyze BMW and Lexus car pricedifference between new and old models._4'>
      <table>
        <view>
          <datasources>
            <datasource caption='turbo_az' name='federated.1e4496c0337o1c10k0hbr1igjoxi' />
          </datasources>
          <datasource-dependencies datasource='federated.1e4496c0337o1c10k0hbr1igjoxi'>
            <column datatype='string' name='[Marka]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Qiymet]' role='measure' type='quantitative' />
            <column datatype='string' name='[Yeni]' role='dimension' type='nominal' />
            <column-instance column='[Qiymet]' derivation='Avg' name='[avg:Qiymet:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Marka]' derivation='None' name='[none:Marka:nk]' pivot='key' type='nominal' />
            <column-instance column='[Yeni]' derivation='None' name='[none:Yeni:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Marka:nk]' member='&quot;BMW&quot;' />
              <groupfilter function='member' level='[none:Marka:nk]' member='&quot;Lexus&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Yeni:nk]'>
            <groupfilter function='member' level='[none:Yeni:nk]' member='&quot;Xeyr&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</column>
            <column>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Yeni:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Yeni:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1424309015274048' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1e4496c0337o1c10k0hbr1igjoxi].[avg:Qiymet:qk]</rows>
        <cols>([federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Yeni:nk] / [federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk])</cols>
      </table>
      <simple-id uuid='{531DB47A-8F86-49CE-BF0A-2BDAA91758C5}' />
    </worksheet>
    <worksheet name='3. Compare BMW and Lexus car prices. Then analyze BMW and Lexus car pricedifference between new and old models._5'>
      <table>
        <view>
          <datasources>
            <datasource caption='turbo_az' name='federated.1e4496c0337o1c10k0hbr1igjoxi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='New_Old' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Old&quot;'>
              <calculation class='tableau' formula='&quot;Old&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1e4496c0337o1c10k0hbr1igjoxi'>
            <column datatype='string' name='[Marka]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Qiymet]' role='measure' type='quantitative' />
            <column datatype='string' name='[Yeni]' role='dimension' type='nominal' />
            <column-instance column='[Qiymet]' derivation='Avg' name='[avg:Qiymet:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Marka]' derivation='None' name='[none:Marka:nk]' pivot='key' type='nominal' />
            <column-instance column='[Yeni]' derivation='None' name='[none:Yeni:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Marka:nk]' member='&quot;BMW&quot;' />
              <groupfilter function='member' level='[none:Marka:nk]' member='&quot;Lexus&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Yeni:nk]'>
            <groupfilter expression='IF [Parameters].[Parameter 2] = &apos;New&apos; THEN [Yeni] = &apos;Bəli&apos;&#13;&#10;ELSE&#13;&#10;    [Yeni] = &apos;Xeyr&apos;&#13;&#10;END' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Yeni:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Yeni:nk]</column>
            <column>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1424309015274048' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1e4496c0337o1c10k0hbr1igjoxi].[avg:Qiymet:qk]</rows>
        <cols>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</cols>
      </table>
      <simple-id uuid='{47428594-DE9D-4C74-9F82-3F2EF5D90A18}' />
    </worksheet>
    <worksheet name='3. Compare BMW and Lexus car prices. Then analyze BMW and Lexus car pricedifference between new and old models._6'>
      <table>
        <view>
          <datasources>
            <datasource caption='turbo_az' name='federated.1e4496c0337o1c10k0hbr1igjoxi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='New_Old' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Old&quot;'>
              <calculation class='tableau' formula='&quot;Old&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1e4496c0337o1c10k0hbr1igjoxi'>
            <column caption='Yeni_New_Old_' datatype='boolean' name='[Calculation_411516442167836674]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] = &apos;New&apos; THEN [Yeni] = &apos;Bəli&apos;&#13;&#10;ELSE&#13;&#10;    [Yeni] = &apos;Xeyr&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Marka]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Qiymet]' role='measure' type='quantitative' />
            <column datatype='string' name='[Yeni]' role='dimension' type='nominal' />
            <column-instance column='[Qiymet]' derivation='Avg' name='[avg:Qiymet:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_411516442167836674]' derivation='None' name='[none:Calculation_411516442167836674:nk]' pivot='key' type='nominal' />
            <column-instance column='[Marka]' derivation='None' name='[none:Marka:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Calculation_411516442167836674:nk]'>
            <groupfilter function='member' level='[none:Calculation_411516442167836674:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Marka:nk]' member='&quot;BMW&quot;' />
              <groupfilter function='member' level='[none:Marka:nk]' member='&quot;Lexus&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</column>
            <column>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Calculation_411516442167836674:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1424309015274048' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1e4496c0337o1c10k0hbr1igjoxi].[avg:Qiymet:qk]</rows>
        <cols>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</cols>
      </table>
      <simple-id uuid='{C3D1A60D-4D6E-43EB-8985-80BA2309D8C0}' />
    </worksheet>
    <worksheet name='4. Murad, who wants to sell his car, thinks that black cars are more expensive. Describein a visual way whether this idea is true or not. Is this idea true for the three mostexpensive models?_1'>
      <table>
        <view>
          <datasources>
            <datasource caption='turbo_az' name='federated.1e4496c0337o1c10k0hbr1igjoxi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='3'>
              <calculation class='tableau' formula='3' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1e4496c0337o1c10k0hbr1igjoxi'>
            <column datatype='integer' name='[Qiymet]' role='measure' type='quantitative' />
            <column datatype='string' name='[Reng]' role='dimension' type='nominal' />
            <column-instance column='[Qiymet]' derivation='Avg' name='[avg:Qiymet:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Reng]' derivation='None' name='[none:Reng:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Reng:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Qiymet])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Reng:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Reng:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1e4496c0337o1c10k0hbr1igjoxi].[avg:Qiymet:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Reng:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1e4496c0337o1c10k0hbr1igjoxi].[avg:Qiymet:qk]</rows>
        <cols>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Reng:nk]</cols>
      </table>
      <simple-id uuid='{0B6FD202-243C-4086-8269-FE386EB46C4C}' />
    </worksheet>
    <worksheet name='4. Murad, who wants to sell his car, thinks that black cars are more expensive. Describein a visual way whether this idea is true or not. Is this idea true for the three mostexpensive models?_2'>
      <table>
        <view>
          <datasources>
            <datasource caption='turbo_az' name='federated.1e4496c0337o1c10k0hbr1igjoxi' />
          </datasources>
          <datasource-dependencies datasource='federated.1e4496c0337o1c10k0hbr1igjoxi'>
            <column caption='Top 1' datatype='boolean' name='[Calculation_411516442179371011]' role='measure' type='nominal'>
              <calculation class='tableau' formula='INDEX() = 1'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Qiymet]' role='measure' type='quantitative' />
            <column datatype='string' name='[Reng]' role='dimension' type='nominal' />
            <column-instance column='[Qiymet]' derivation='Avg' name='[avg:Qiymet:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Reng]' derivation='None' name='[none:Reng:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_411516442179371011]' derivation='User' name='[usr:Calculation_411516442179371011:nk:3]' pivot='key' type='nominal'>
              <table-calc ordering-type='RowInPane' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk]'>
            <groupfilter count='4' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Qiymet])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Model:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[usr:Calculation_411516442179371011:nk:3]'>
            <groupfilter function='member' level='[usr:Calculation_411516442179371011:nk:3]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk]' direction='DESC' measure-to-sort-by='[federated.1e4496c0337o1c10k0hbr1igjoxi].[avg:Qiymet:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk]</column>
            <column>[federated.1e4496c0337o1c10k0hbr1igjoxi].[usr:Calculation_411516442179371011:nk:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Reng:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1e4496c0337o1c10k0hbr1igjoxi].[avg:Qiymet:qk]</rows>
        <cols>([federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk] / [federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Reng:nk])</cols>
      </table>
      <simple-id uuid='{AA11E040-632B-48FE-BE1B-8CBF5FC48102}' />
    </worksheet>
    <worksheet name='4. Murad, who wants to sell his car, thinks that black cars are more expensive. Describein a visual way whether this idea is true or not. Is this idea true for the three mostexpensive models?_3'>
      <table>
        <view>
          <datasources>
            <datasource caption='turbo_az' name='federated.1e4496c0337o1c10k0hbr1igjoxi' />
          </datasources>
          <datasource-dependencies datasource='federated.1e4496c0337o1c10k0hbr1igjoxi'>
            <column caption='Top 1' datatype='boolean' name='[Calculation_411516442179371011]' role='measure' type='nominal'>
              <calculation class='tableau' formula='INDEX() = 1'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Marka]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Qiymet]' role='measure' type='quantitative' />
            <column datatype='string' name='[Reng]' role='dimension' type='nominal' />
            <column-instance column='[Qiymet]' derivation='Avg' name='[avg:Qiymet:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Marka]' derivation='None' name='[none:Marka:nk]' pivot='key' type='nominal' />
            <column-instance column='[Reng]' derivation='None' name='[none:Reng:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_411516442179371011]' derivation='User' name='[usr:Calculation_411516442179371011:nk:3]' pivot='key' type='nominal'>
              <table-calc ordering-type='RowInPane' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]'>
            <groupfilter count='3' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Qiymet])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Marka:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1e4496c0337o1c10k0hbr1igjoxi].[usr:Calculation_411516442179371011:nk:3]'>
            <groupfilter function='member' level='[usr:Calculation_411516442179371011:nk:3]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Reng:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1e4496c0337o1c10k0hbr1igjoxi].[avg:Qiymet:qk]' shelf='columns' />
            <shelf-sort-v2 dimension-to-sort='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]' direction='DESC' measure-to-sort-by='[federated.1e4496c0337o1c10k0hbr1igjoxi].[avg:Qiymet:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</column>
            <column>[federated.1e4496c0337o1c10k0hbr1igjoxi].[usr:Calculation_411516442179371011:nk:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1e4496c0337o1c10k0hbr1igjoxi].[avg:Qiymet:qk]</rows>
        <cols>([federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk] / [federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Reng:nk])</cols>
      </table>
      <simple-id uuid='{FBF584EC-840B-45B8-871F-72DC03357C93}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='1. Show the relationship between &quot;Yurush&quot; and &quot;Qiymet” by creating Scatter Plotaccording to “Marka”.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E56D4794-33F7-4E27-8340-3C7323FC42BB}' />
    </window>
    <window class='worksheet' name='2. Create a dynamic set to show top N Models (with a default value of 3) by &quot;Qiymet&quot;.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1e4496c0337o1c10k0hbr1igjoxi].[io:Model Set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[io:Model Set:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7914C545-7071-49D4-8266-28B84562ED0F}' />
    </window>
    <window class='worksheet' name='2. Create a dynamic set to show top N Models (with a default value of 3) by &quot;Qiymet&quot;_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[io:Model Set:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E98E6A26-B312-4F8C-BC00-1B823C5E81B6}' />
    </window>
    <window class='worksheet' name='3. Compare BMW and Lexus car prices. Then analyze BMW and Lexus car pricedifference between new and old models._1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Buraxilish_ili:ok]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8313ACB7-EAEA-4907-9D91-CFA9219E7CEA}' />
    </window>
    <window class='worksheet' name='3. Compare BMW and Lexus car prices. Then analyze BMW and Lexus car pricedifference between new and old models._2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Yeni:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Buraxilish_ili:ok]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Yeni:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AA1E972E-4E22-431F-ADA3-23622CEA475D}' />
    </window>
    <window class='worksheet' name='3. Compare BMW and Lexus car prices. Then analyze BMW and Lexus car pricedifference between new and old models._3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Yeni:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Buraxilish_ili:ok]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Yeni:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{260EF67E-42CE-4E52-B917-BAB474677B96}' />
    </window>
    <window class='worksheet' name='3. Compare BMW and Lexus car prices. Then analyze BMW and Lexus car pricedifference between new and old models._4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Yeni:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Yeni:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Buraxilish_ili:ok]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Yeni:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{29382FA0-7727-4C79-A490-4A00252442A5}' />
    </window>
    <window class='worksheet' name='3. Compare BMW and Lexus car prices. Then analyze BMW and Lexus car pricedifference between new and old models._5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Buraxilish_ili:ok]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Yeni:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BEDEA5EB-DAF9-4E83-A811-6F85CAD4017F}' />
    </window>
    <window class='worksheet' name='3. Compare BMW and Lexus car prices. Then analyze BMW and Lexus car pricedifference between new and old models._6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Buraxilish_ili:ok]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Calculation_411516442167836674:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Yeni:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DABEA46B-8169-4A05-AF60-C247D4E0D658}' />
    </window>
    <window class='worksheet' name='4. Murad, who wants to sell his car, thinks that black cars are more expensive. Describein a visual way whether this idea is true or not. Is this idea true for the three mostexpensive models?_1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Reng:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA61A5FE-B5C4-4ECC-9522-9D5CE6B1D185}' />
    </window>
    <window class='worksheet' name='4. Murad, who wants to sell his car, thinks that black cars are more expensive. Describein a visual way whether this idea is true or not. Is this idea true for the three mostexpensive models?_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Reng:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Reng:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[usr:Calculation_411516442179371011:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1C8AE504-A253-4C39-A675-459D9A9AD1C9}' />
    </window>
    <window class='worksheet' maximized='true' name='4. Murad, who wants to sell his car, thinks that black cars are more expensive. Describein a visual way whether this idea is true or not. Is this idea true for the three mostexpensive models?_3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Marka:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Model:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[none:Reng:nk]</field>
            <field>[federated.1e4496c0337o1c10k0hbr1igjoxi].[usr:Calculation_411516442179371011:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0E201D92-78F3-4C81-93F6-5DA051582DD6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1. Show the relationship between &quot;Yurush&quot; and &quot;Qiymet” by creating Scatter Plotaccording to “Marka”.' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2. Create a dynamic set to show top N Models (with a default value of 3) by &quot;Qiymet&quot;.' width='192'>
      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
    </thumbnail>
    <thumbnail height='139' name='2. Create a dynamic set to show top N Models (with a default value of 3) by &quot;Qiymet&quot;_2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACLCAYAAAA3Q5aoAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAPOklEQVR4nO3de1BUZ5rH8W88aWwkXpCWaS5eIBChjQqrwZDCka2kzJA4JauZeJkkg2ET
      jI4xJnE2qzNaUtmpyZrKxZgYzJC4uhocTQo3xo6pmNEJxhkN0qgBEbwsamgBQUTotruO7h/N
      pUGiQlCWfp9PFVX06dN93j51fn3e7j7P+95x9erVqwihqD493QAhepIEQChNAiCUJgEQSpMA
      CKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0C
      IJQmARBKkwAIpUkAhNIkAEJpEgChNAmAUJoEQChNAiCUJgHoZRobG3u6Cb1afX19m9sSAKE0
      CYBQ2p093QDReVOX5PR0E3yGnAGE0iQAQmlqB0C3kf1HK3avRc59q8lYtImj3usd3cQ7u2pu
      USNsZGfbbtFzixtROwBaDJYBxznpbF1UWtKHieOqKPuhddkPZVWERQ7u0ibs1kwyrc0Rs2PN
      bhs40bPUDgBGIu52cvJU8+2TlF6K4KHxQyg/Vte0rI5jZQOJjujaFswpy1iWYv7pTRW3hPLf
      ApkjQjld9gPEhEJVKfbQGMwj7LD3JHpyHJp+kuN+I7m/aX1bdjakpXDh/Xf55FAk6VnpRBza
      yHvr/86pehf4mRgzfT5zk0PR8JwBPg9ZRrrZSubyXM4CuftzAUh4Lov0OOBSKbv+vJ3PDp7G
      wSBGzVrE8xMlNLeD8gEgeiSB249RNyWUvmVl9I18EIyDsVz+nFLiiCk/gSPiAYwtD7hE/oaN
      aAkLeWN+MAbAaUriyRWPEx5gAHctX2dtoyg5jdHe2zGnsCwrHmt2AfHpKbQ5vCurcD2ezp/m
      hGBoOED22gLsE9utI24JCYAWxT13buWknoxWApaZGjCQ4eYajtohqLScwRHTvB5Qx4Ckl/hV
      VEDLEgNn+WLVOxSeqscFQBipdhh9s0dw5AOkjA3x/D9gKEMDq7vlpYkbkwAwkOHDzlNQfhIu
      RfBA01t9RPRdbDtqZ9Cxfox80Hv9MKK9Dn6oYtdfDhKd9ipzQoxogC07k4rb9wLET6D4h2CP
      CEs45Xl5nv5/88Lokfgd/5rjfe4hSrveo9247jARHGhA052cP5FH/onrrH7uOGUXdcCN291d
      r0B0lQQAYEQEd+bto2/ksNZlxiiizu3he/NwBl73waH88yQ3/714HhkLXmHN3r6EDf2xdc3E
      T7wD69J5ZMxbzJZj3fYKRBfdcfXq1as93Qhx8xobG5n16v/0dDN8hpwBhNIkAEJp0gXqZRob
      G+nXr19PN6PXqq+vp3///i235QwglCYBEEqTAAilSQCE0uRSiF5IaoK7j5wBhNIkAEJpPtMF
      cp/exdq1n/F9pQP8g4lKTOWpx8Zhan8hW0MZ1nUfseNQNS6//oz4xfP8+6Oea4Ds1kyW5571
      WjmB57LSietog3W7eev3n+A3eyXzEo1ed9jIzljDkYkLef0JC96bd/7jPV78sJBxzYUwAO5K
      DuRks3n/KepdGv7Bo3j4N2mktLniVNwqvhEAvYjNH5QwdsFK5gcb0J0VHNn5N4qrxtG2sKqG
      3Ws+4OT9L7BybgjGKw2cqXW13Ft1ri/TX81i8pAbb7KuoIjg9Nlc+LYQZ+IEvCNAQiqT7Qcp
      0S1YWhLgpDDfRdKkMBwtK9r5cuWbFMWnsfSNWAINOs7zx/hr0Q8QFd31/SFumm90gWrOUB4+
      gcRgAwCaMYSxU2dwTVVh+Tf8td80nk4KwagBhgDCgwOb7qzjfLWJ4Js4+KGOAltfLKPjiSef
      Qmf7+0OIH2XnYIneushZSL4rjn8KbF2kF33FdzFzWZASS6ABQMMYFEvKRDn4bxffCMCQMYyv
      /gsrN+dx4rwT/UdWqztRStiE8W3frVvUUGMMvbkyRGcRRX73EqMZsVhcHDl67RbN8aOwHyxp
      aYuzMB9XXDyDvNY5d+I8MfERXLfcQNxSvhEAzExe8hqvzEgiMkjDeeYA61a8xe52Q/k4HAau
      OCuod3oOS3dtMVsyX8Mz5E8E037bXIfrpuHMAbKXvcU3dbTjZN+f92L5tafbMzB5JqE71mFr
      nwFzCk+H7OLjIh10Gxvz45mb3Lay4LLrcgevRcYJup18JADeDASE38eTU/pxvLztPeaIIbid
      /ehv9LznGgJjmXjfZU6Vd/wcjyY2XvMcOAspKCrl499lkJGRQUbGcnL/9whHSq49CwyOt1B7
      sAT34Xwux8dfc+YZFhlEYcHJHz1jiVvPNwJQtZet1mIqGzw1hu6GE1h3nsXUfiyr6ETCvlvP
      rlOebpK7tphvCkzcGwMc3soqazHnnTqg46zI49Pdg4ht1x13FuZz7uGlZGVltfy9t3AcxV7d
      nRaD47HUHmDz/svEx1/b8dJGp3D/0ffJyjuDp+k6zgo757tjn4ib4hvfAvWPIOxiDu8sLaPS
      oePXfwQJsxYwe1i79bQIpqZPZNP7r7DgtAOt/wiSnn6eCUbAMplfnNnAW6+843kO0xgeeSbN
      c18LnaNHGvn5v7R9Ys3ycxJy/9buWx+AwcRb7HxSksxjHX3w0EJJWfgM1nVZLN1UiUPX8A+O
      InH6hO7YK+ImSD1ALyMlkd3LN7pAQnSRBEAoTbpAvYyURP40UhIphBcJgFCaBEAoTQIglOYb
      P4QpRkoiu4+cAYTSJABCaZ3qAtmyM1izv+mG5k/wqFSem5tMqM9d0G7HmrmcNtWRTRK8yxk7
      83wdTY0kelwnPwN41ci6ayn+bA1vbw3jtRm+VsFkJmVZFikAdiuZn4ewrPNHvegFut4FMgQS
      O20aY0+Xyby3otfqtm+B6q4zVagt+21KRwRQZi3kVL2Of3Qqv1s0mVANyr96gw+2ey5j1vyH
      MunZRcywBAB2rKu3Umu8wP6Dp3FoJibNnsXPvs/ls4OncflFM+2Vl3nIDNBAmXUdH+04RLXu
      T/C4GSxMS8Skgd2aTUH8TIbveZO1e67w8LJlpLi+4o0PtlNW6UDX/Bk66VkWzbBw0+Mw2LLJ
      rHi0df7fNmcJG56ZVC/w/rufcCgynax0MziO88W7S8k/VI3uP5TEJ+cye5wJDWgos7Luox0c
      qnZ5LsOeI6NC3C5dD4C7luLPPqUk+glmc6OpQiupcj1O2qtzCDE0cCB7LYVVkwk1Q/+RqbyQ
      NJwgo4buLGbLh3upskxmCIDTyYAHn+NPc4IwnNvOf7z7D4alz2flvwbC4f/i7QI7D6WY0Yu+
      YE+/afzhrfkYNTe1f/+Ij7+xMC95IKBz+vNsSkMfJ/OdexigAbUjSX0hieFBRjTdSfGWD9lb
      Zbmp0SBuyqV8NmzUSFj4BvODDYAd6EvMtD/w5HwjV2ptbH49m90R/8aD/WzkrD/J2N+uZG6I
      AXfFPj5ck4NtSTpxHRcvi27UyQDsZ01G06dgv/6MSJjFgqaqk+tPFRrJAylj8UwEOoChQwNp
      ngjUr/4QWWtXed6NAUggBjwBCBzF+NggTylhaDhhkeEkRTYNqzAkmMAznn9LbXns3/Ml+zd5
      NTUhAZLjgIu4RqYxP8nUWnzuV8+hrLWsKqvE0VTGldCy0W5QN4Ckl35Fmzdx/3BGNM0iqQXG
      8diUPDaWA5qNswmppId4jnYtJInUhK/5shTiRnf05KI7df1DcBtdnSr0MFty3aS8uJLYQM87
      pTXz8841CXC7Avnl8jeZEtrRvYHcHWVqM/LC4S25uFNeZGVsIAaaZnPv9FavIyyaG/VgGhsb
      wL87Nyq6opt+B+jkVKHNdBeugCDMdxnA3cCZwm/5vrbzW4+ONbF705ecah7toeEMB2zXVLo3
      bxSXK4Ag810YcNNwppBvO7tRTcNVdxF387a+2HfjLwJ0B87mut9Tu1i/x8S4GCA6jrD9ueRV
      ONGbapFz94cR52tfrP0/1U0fgj1Thf5x8TyqdX+GJv6a8UPhhoUGWhxTYt9kxcLNODQTYx6Z
      TPjAzifAOOE3PH1qFasXf9I0vGAUidPncF/HGyVuSixvrljIZoeGacwjTA4fSKe2apnMz3f+
      JwszHGimkSQl3k3wues/5K4+JWQvnodn5MZR/PLZZ5v6+HHMfKqCdasXs8HrQ7D0/28PKYjp
      ZaQmuHvJpRBCaRIAoTTpAvUyUhP800hNsBBe5AzQyzQ2NvZ0E3yKVIT1QtIF6rr2XUjpAgml
      SQCE0iQAQmkSAKE0+RZIKE3OAEJpEgChNAmAUJoEQChNAiCUJpdC9GINZdtYs3onpQ4N05jp
      zPcapc+WnQ3prfXbzsPreK0wgSVPWDD0WItvIbuVzOW5eA/m1zqKXwNl29awemepp/LQa8ge
      CUBv5bSRs/4s9y95m5eDHBzbtpqs7ZGsmNp+bligwcbGT/2Y8XsfPfgBqs7Rd/qrZHUwto3T
      lsP6s/ez5O2XCXIcY9vqLLZHrmDqMOkC9VrOgjyqJ80kKdgA2gDumZpKdOF3nLxmzQZsOTsJ
      fGoGMT43hmuruvPVmII7GtfGSUFeNZNmJuHZVfcwNTWawu88e0oC0EtduADRkYNbF2gjiTVX
      U9NuuvqG/I3sCHycqRE+fPQDNTVGQjscefgCF4im7a6KxVxdg450gXot1+U++LcZV0hD0+xU
      VIFnCOqmQcyME5j3egS+ffjDpYtF5C7PIBfQ/IOJSp5FRqqFAFxc7uPfdggmTUOzV1CFBKDX
      8ut7BYfDe4mOrptp7QV4BjGL3reazC1HuXd2jE+HYHTae2Slef53N5zBlrOWD755iRcm+tH3
      ioO2u0pHNwczBOkC9VqDBkHpiZrWBXoJxXYTg9sd5QGJc5jl2Mw6W8PtbWAPMgSEc9+jiTQe
      LwcGMYhS2u6qYuymwWhIAHotY3wSpj055FW6Qb/IsW25lI4dT8Q1awYQl/YMP9vxEft8NgOH
      2brKSvF5JzqgOyvI+3Q3g2KjASPxSSb25OTh2VXH2JZbytjxnj0lV4P2Ym1+B0iYzaKmIeHh
      2t8B9B+svL4Bnnw5xQdn9NG5eOxLNmzYyfeVDnQ/E2MemUNaSlTTkPdtfwdImL2ItETPeLES
      AKE06QIJpUkAhNIkAEJpEgChNAmAUJoEQChNAiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFCa
      BEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJp
      EgChNAmAUJoEQCjt/wDDTkOOj4TGIQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='3. Compare BMW and Lexus car prices. Then analyze BMW and Lexus car pricedifference between new and old models._1' width='183'>
      iVBORw0KGgoAAAANSUhEUgAAALcAAADACAYAAABGSfLmAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAANQ0lEQVR4nO3de1SU54HH8W8c7gRbEJHgFa94SWrXQYTjJaYJxtUtniZHvLQR5UQqkaxJ
      c9JdaTWY6tas1ebExpCUCtlisJpUNqdaTNo0akAuHvESjVnvaxOlgBtZBhAm7B94mRGSsA0v
      DA+/z1/yXp/X+Z73PPPKjHc1Nzc3I2KgXl09ABGrKG4xluIWYyluMZbiFmMpbjGW4hZjKW4x
      luIWYyluMZbiFmMpbjGW4hZjKe5u6kLOQux2O/Yf7abWdUXtbn5kt2O3LyTnwv//uPtW21n4
      9+zogRR3dzZjFrNKijnUdHtR06Fizi1ezKyuG5XHUNzdmdc0vvPAQYqP3F50pPgosZPu7box
      eRDF3a15MSFmHPsOnrjx8wkOFt1HzLfct6p6N4N58VNapjFT4nki6wS1QM5CO6v3XaNk03ym
      2Fez746jX9v3PLNnr+bP1U3AKbYumcX0WDt2eyzTH11FQYX1V/h1KO5uLjAmjgGFpVwAuFBK
      yfA4JnjdsVHEd/nZzj9RVlbGwfxleG1Zz66/tqw6nbWKbRGrKDiYwVSXXa7te54FLzTx7LYM
      Hgjxgjo/Jjz9a/6wv4yysvfZGHeY5zILO+ci/053/jVId9PHziR+TlnVIu4uO0jo/RsI5JDb
      Jt5NR3llydN8cL6GRgBG8Q835+nTnmRD4lC3EE699AgPMJondmxlau+bB/Gh8u10nll2lOq6
      G8tmuUz2PZDu3N3eYKLjLlFYXEFxIcTFBN6x/hCZK3LwTd7O+2VllJVtdHuzOXz40FZ3uFFp
      v+N3ab34zXO5nL3Rb1X+Gp49PokXCw5SVlbGm2mjLLymjqG4DTBm0lSOf/ArPqichL3PnWsb
      qK8LpE/4N/FpcnBufxGnv/KINoYueoEVAa/w09fP0gTU1zsgtC/9fLy4XnGcwqOfWnEpHUpx
      m2DCAzxY9AeOToxmcKuVE1m4vD9vp8YR+1AKWz/xI7RdB+3HI+vXM3z7Mp7fd43+/5TMIxc2
      Ej9pCnOfe4e6kL4dfRUd7i59tYOYSnduMZbiFmMpbjGW4hZjKW4XDoejq4cgHUhxi7EUtxhL
      cYuxFLcYS3GLsRS3GEtxi7EUtxhLcYuxFLcYS3GLsRS3GEtxi7EUtxhLcYuxFLcYS984Je2W
      sDKvq4cAQP66ee3azuPjrj29h+ytuzlaeR2foCE8/OS/MmsQgJPKomw2bSuh0unPwGlLeSpx
      DC3ft1ROVhYkJ4+/cZR6jmWv58jElXx/jHdXXYp0Ms+Ou/ovbHntHJNW/Ds/vMePz2svcfX6
      jXWX9/Lqe8EsWvsyI/2rOPDaL8gpziA1xq/VYWrLc3nLJ5GfKOwexaPn3Bf3v0fA95Yw+R4/
      bIB34ADCglvWnSssZdCcBEb2toF3GJPnxVNTepj6Ow9SW05eQTCPJUZh6+TxS9fy4Lg/4+x/
      9SfG3vpODPDZ1RCGDXXJNWQ0Y72qqHbbqpZDubsJnptApMrucTx4WlJHnXcdl7b+G28cOU/N
      dRv+A2P5wQ8XMCG0iYYGf/zduu+FreIKFUAEQMkWUkrALyaVDW2U/UWfdK+pqbHgWqQjtfc1
      8uC4AXyJfHgJjy4Ows/WyNWTu3gp6y9E/vg7+PrWUVcP3Ar8c5xh/Qi7+ePEZWQmj6Bo8xp2
      fDSOBVHugQcEBLQ6m8PhICgoyMLrkY7Q3tfIg6cl4UT2baQ+IAg/G4A3waOnEN1wnovAN4Kr
      OXPWeXvz6pN82NSHELdjBBK7eD5127Mpd/svv6Qn8OC4YURsf8pe/xPn651AI1dP7udw6Dii
      gMi4aC7uyufja05orOBA3l6Cor9Nqxl64HiSHu/H7q1FqO+exaOnJbbIBJKnbOOVf0njv+ts
      BA2ZzJInY1oCDo9n6fRsNqWnUun0Z8SM5Sxr4zEggC1iJknDNrB5z2CemRmhpyY9hL6f24XD
      4WhzLi4tutu/UHr0tETk61DcYizFLcZS3GIsxS3GUtxiLMUtxlLcYizFLcZS3GIsxS3GUtxi
      LMUtxlLcYizFLcZS3GIsxS3GUtxiLMUtxlLcYizFLcZS3GIsxS3GUtxiLMUtxlLcYizFLcZS
      3GIsxS3GUtxiLMUtxlLcYizFLcZS3GIsxS3GUtxiLMUtxlLcYizFLcZS3GIsxS3GUtxiLMUt
      xlLcYizFLcby6uoBfLlyslK2UOKypP+cDFbNDAecVBZls2lbCZVOfwZOW8pTiWMIvLlfFiQn
      j7+xVz3HstdzZOJKvj/Gu7MvQrqIZ8f9twoqY5eTmXRv63WX9/Lqe8EsWvsyI/2rOPDaL8gp
      ziA1xq/VprXlubzlk8hPFHaP4tnTkqpKbP36trnqXGEpg+YkMLK3DbzDmDwvnprSw9TfuWFt
      OXkFwTyWGIXN8gGLJ/HouOuvVhN8T3ib6z67GsKwoS65hoxmrFcV1W5b1XIodzfBcxOIVNk9
      jkdPS2pqrlGSndIy5/YJYsi3vseixXFE2BpoaPDH320G0gtbxRUqgAiAki2klIBfTCob2ijb
      4XB8wTlrOvw6pGO19zXy6Lj7xq8kM77lz876Kj5+dyuv7OzLmsQR+PrWUVcP3Ar8c5xh/Qi7
      +ePEZWQmj6Bo8xp2fDSOBVHugQcEBLQ6n8PhICgoyKKrkY7S3tfIo6clrmx+fRg9+0EGnznH
      34BvBFdz5qzz9gbVJ/mwqQ8hbnsFErt4PnXbsymv7dzxStfz4Lgv8+6v/4PSS7U0AjRe5eRb
      u7k4Noq+QGRcNBd35fPxNSc0VnAgby9B0d+m1bOSwPEkPd6P3VuLUN89iwdPS8KZ9t0o8rJW
      8/r5Gq7b/BkY+wPSFgy6sTqepdOz2ZSeSqXTnxEzlrOsjceAALaImSQN28DmPYN5ZmaEnpr0
      EHc1Nzc3d/UgPIXD4WhzLi4tElbmdfUQAMhfN69d23nwtETk61HcYizFLcZS3GIsxS3GUtxi
      LMUtxlLcYizFLcZS3GIsxS3GUtxiLMUtxlLcYizFLcZS3GIsxS3GUtxiLMUtxlLcYizFLcZS
      3GIsxS3GUtxiLMUtxlLcYizFLcZS3GIsxS3GUtxiLMUtxlLcYizFLcZS3GIsxS3GUtxiLMUt
      xlLcYizFLcZS3GIsxS3GUtxiLMUtxlLcYizFLcbqJnFfZu+6VFLW7OHyrWVOKouySE9LISV1
      BT/bfoLaW+vKycoqd9m/nmPZGfz2RGMnjlm6WreIu7ZoJ2X3/SMTXBde3sur7wWzaO3LZL64
      kvurcsgprm97//Jc3vJJZP4Y704Zr3gGz4+79hC5HwwhaeYAbC6LzxWWMmhOAiN728A7jMnz
      4qkpPUyrvGvLySsI5rHEKLf9xXweHreTj/LfJfSRmUTcUeZnV0MYNtRlYchoxnpVUe22VS2H
      cncTPDeBSJXd43h19QC+jPNcPn/0m0taqzIbaGjwx9/PdVkvbBVXqAAiAEq2kFICfjGpbGij
      bIfD0eY5a2pqOmbwYpn2vkYeHPdl9ubX83BaZBvTCV98feuoqwduBf45zrB+hN38ceIyMpNH
      ULR5DTs+GseCKPejBAQEtDqqw+EgKCioIy9CLNDe18hz4z72R94+WYQz9X23xSUppczJWEVU
      cDXHzzqJHXMj2uqTfNjUhwfdtg4kdvF8TmzIpvyZZMYHdtbgxRN4btz3JvFyZpLLgnKy1nzK
      rFUzCQeIi+aN3+Tz8YAERvpXcSBvL0HRGfjdeZzA8SQ9fon1W4sYsTwW9d1zePgbyi8RHs/S
      6VfJSU8l5Z/XcbD/4yyKaZU2ALaImSQN28fmPZ/g7ORhSte5q7m5ubmrB+EpHA5Hm3NxaZGw
      Mq+rhwBA/rp57dqu+965Rb6C4hZjKW4xlkVxn2LX2l2ccl1UV84bmwq4YM0JRVqxKO4rHP79
      Ya64LvKu5nhuoeKWTtPBz7lPsWvtTj7kE47yCZVr17L/5qqKcv48ajZLO/aEIl+o8+bcQ2az
      ccNCBnfaCaWn6+A79yjmpKczh2I2FRcSl/4UMR17ApF2s+jOHUPaLwexY84U7PbV7ANqC55l
      xs9LaLLmhCKtWPaG8s11v8L3iaeZcWNJ4OT7Gbf3fY5Yc0KRVix7FHiifAozHupze94TeDd3
      X/tfl885iljLorjDiRj0Vz699Sywiep3Ctg/aqjeUEqnsehXXkcyf8VgHkt5gToaOfLoQ1w5
      70P8xh8rbuk0lv0+d++pP2Wn/RzlhWf4H/wJvy+acWE+Vp1OpBVLP6zgFRCJ/cFIK08h8oUs
      i/va0e1kvX0a94/hjuXR9DmMsuqkIi4sekN5iMwVv6Swwpqji7SHRXfuBurr4kl7MZ2p1pxA
      5CtZdOeeyIyE0xw7Yc3RRdrDsjl36EB/3nxiFgVBrt8XMp30/9Tvm0jnsCjuEnI315HwUiYL
      h7h+It2H3tacUKQVi+L+JiGhQxg9fgChnvvNKGI4i9IbzrT407zxTiX3Rbsu96F3aG/0TznS
      GSyK+yA7cs5QwMMUuC2fxcayDD1BkU5hUdxTySgrI8Oag4u0i0WPAq9z/bo1RxZpr/8Do+6H
      pOO8nfAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='3. Compare BMW and Lexus car prices. Then analyze BMW and Lexus car pricedifference between new and old models._2' width='190'>
      iVBORw0KGgoAAAANSUhEUgAAAL4AAADACAYAAAC6XNksAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAOkElEQVR4nO3ce1jVdYLH8XceQY4EBSIg5V0RL1P2iNweL/msi+NYwU49YZqp8SRquZuu
      0zNBk+nz6I67jtazloMjidNSuGUrlTbY3Qzl4or3S17SmlIELNhzQTixf4B6jtCExRmOfj+v
      vzi/y/f3+z28PXzPV/SmxsbGRkQM06mjb0CkIyh8MZLCFyMpfDGSwhcjKXwxksIXIyl8MZLC
      FyMpfDGSwhcjKXwxksIXIyn8G852FsXGEht7Ly8e8txz6MV7iY2NJXbR9p829OkNTI1dxE88
      26co/BvSICZNCqao9LTbttOUFkUzc+agDrsrX6Lwb1D9/iEZdpVRdWlDVRm7gpNIuLkj78p3
      KPwbVe+RJH1VRLGt6aWtuIiahFjCPA46yvpHJzEuMZbY2ETGPfAshRXNu7YvInbqBk6e3MST
      9yQydcNpz/EbTpKXPo7pLx/jInB0/aNMGpdIbGwsieMe4NnLA/kmhX/DGkLCmAMU724AGthd
      /CVjEnt7HuIIYMSCdWz5tIyysk9YmbSH57KLruyv+ZClvz/J/S9/Qt50t3MbTpKXkc62MTnk
      PBqNPw4CRixg3ZZPKSsr45OVSex5LpsifFfnjr4B8Z474xPILN4LY6D4+FgmRQM73Q7w86fy
      7SwWztlHtaN526SGK/tttzN1xW8YHew+6hYWJGzh5l+tYOv0fs0B+eFf+TZZC+ew78pANOC7
      9I5/A+s8Ip5h23dx6NAuyocnMOSq/VUFS3jqQAIvFO6irKyMTfOu+uDbI5r+wVedxCRWfriS
      scX/xvLtNZcGYslTB0h4oZBdZWWUbZqHr3+EVvg3ssB4km4vYuPGEgbE39lit9Nph7DuRPh3
      5mLFAYr2fdO2cYPH8Ltl49n13HI+rAGcTuyE0T3Cn84XKzhQtI82jtRhFP4NrRt3jw9my5Yw
      4ke0nNXedm86959eSXLCaB587j0cod3bPHLnEfNZM/0rFs3bwMmIe0m//zQrkxMY/eBzvOcI
      pe0jdYyb9N+LiIn0ji9GUvhiJIUvRlL4YiSF30Z2u72jb0HakcIXIyl8MZLCFyMpfDGSwhcj
      +fSvJddXlJKfs5GSL2q56B/EoPGzyUgZQCAA5eRkrKHE7fjbUhfz7MRIwEXlzlxWvVpCpctK
      z7GzmJ825Mp5OZCePrz5LCf7c5ezNy6Th4f4/V2fTzqOD4e/n/w1B+k7LYvJ/ULo5PyGHetW
      U3BkKVNigPMVVCY+QfaMX7Q89ew21n4UwvSlLxFtrWLHn/7AhuLFzI0PaHGorTyPN/3TeEbR
      G8WHpzpDmPLMDEb1C8EPsAT0YFRibxzO5t1VlVgiWv8dwFNFpfRKTSE62AJ+4YyanExt6R6c
      Vx9oKye/MIRH0mKwePFJxPf4cPgWLO412o5T8JmVuJiml84L1YT0iGz1zO8uhNK/n9vJoYMZ
      2rmKao+jbOzO20rIgyn0VfXG8eGpziUuao69w7p34L6MaQxonq3U1tZQkpvRNMf3D6LPnb9m
      +swkoix11NVZsXrMajphqThHBRAFULKGjBIIiJ/Lilaq/6G/pa2trW3XJ5OO4+Ph1/Plu2t5
      iwlkLLj0obZJ9+RMspObvnY5qzj2/nr++EZ3lqQNpEsXR9OU6HL83+MKjyD80su4OWSnD2Tn
      6iW8fmQYU2I84+/atWuLO7Hb7QQFBbXv40mH8eGpDlR//DIfhE9j9kTP6K9mCejG4HvG0/vE
      Kc4Dt4RUc+Kky22gwxxs6Eaox1mBJM58CMfGXMptXrl98WE+HP4R/rJ/APeNCG7lg+dZ3l/3
      CqVf2agHqL/A4Te3cmZoDN2BvkkjObO5gGM1LqivYEf+NoJG3kWLNZ3A4cx4LIKt63ei9s3i
      u//08Pw2lj2ziav+G6PLa/Uea/wWKz0TpzF7ygjCLHD1Ov7ACU8wx33932Md38XX767gFaax
      cGLUD67u2O32VqdAcn3y3fB9jMK/sfjwVEfEe3x8VUeuJymZ+R19CwAULJv8o8foHV+MpPDF
      SApfjKTwxUgKX4yk8MVICl+MpPDFSApfjKTwxUgKX4yk8MVICl+MpPDFSApfjKTwxUgKX4yk
      8MVICl+MpPDFSApfjKTwxUgKX4yk8MVICl+MpPDFSApfjKTwxUgKX4yk8MVICl+MpPDFSApf
      jKTwxUgKX4yk8MVICl+MpPDFSApfjKTwxUgKX4yk8MVICl+MpPDFSApfjKTwxUgKX4yk8MVI
      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
      I4u0h/8HyRcmhGFTYnUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='3. Compare BMW and Lexus car prices. Then analyze BMW and Lexus car pricedifference between new and old models._3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAASrUlEQVR4nO3dW3BU933A8e85Z+8X7a5WdySQQNyFMGBzMWCwTZy6CZ7GlGTqxEk6mU46
      04dOZ9KX9qGPnU47fesknSTTTC6NSRy7trGNbWQHAwKsgGwkQEgCdL+srrta7X3P6QOObRLs
      oPVqpeX8PjMeS6vVXz8t+93ds+esVjEMw0AIE1IURVGXegghlpIEIExNAhCmVpQB6LqObLqI
      fCjKACYnJ4nFYks9hrgPFGUAQuSLBCBMTQJYYrGZIS523gAgE4/wwZUuMnru2zdGpJPvf/81
      wtnbn8fDo5w9+Rr9M7dPyIaHeOvtMwxMzX/mOpn0NNcu3yKl5zxKUZAAlpiaidLy/IvcnNcZ
      vXaa314c5E9f/ec498IvuTr5BycbOgNtF/Dt2E6JdvukyOgV3njhf3m5tY8sOkMX3+X4idf5
      Xd/UZ/6EdLyP1/+vlVgmx1+sSFiWegCzc5Q3cnS/h5ePn6VsrIc9X/0uamKKd956k55plQNf
      Okyjc4I337rGfDJEzNPI0Se34vbX4nffuZaRDnOmW2PfswGUT5xesvUA/lvnCccraB+xsnNt
      AIDZgQ5OvHOeuUwJXzh6hGC0l87hFHOTw9Su8wKQjIxysqOPPdvrOdvSws3JBFv2H2bPxsr7
      4tbzfvgdipyFlXuPol74bwZr9rK9ysmlk8/TNpCglGF+9pM3mY328+57w2zZvZPw2dP0Jme5
      cuosY4k7V4pOjZHwlFDpsN35BbWCYHmMob4xkm4npXYbYJDKGvhLK/HHO/mfl95neuwKv/jJ
      i7gamqn224mEbvD8L38NwTrUrI7N66e6NMPrP32RkXjBLqBFJQEsA6rNx9o129iyqQaLAqGR
      EQyHC29NE08e3IwNBY+vkpoVVfjtVrJ3fYxkMDXUhbO6CZum/MHXFKp9AXr6ruB21WG3KJBN
      09l6mr65DF63nXgsgYHGqq37eGh9DQ6rSjY1x+R0gkCpn9CNNi5dC2H3uFGScbL3ybaBBLAM
      KICqWbGot6+4G5qbiI8OMz07S2Runuy9LGLMc+3iIE07GlH/8PoPrF1byZXWNjxr1330j55O
      JYjHY6Q/KkrFZrOhKAqgEKh9gGee3sXJ515gMp4mFo+TTN1fGwVKMR4NGgqFcLvduN3uP33m
      YmAYRCYnwBugxGFFT8cZHx0hHM9SUlpFpV9lYipLeYWb8PgUjooAidA0jvIqXBYAg+Tw7/hB
      S5i/ffYQ9k8EkE5EmI4aVPptjIxN469aQTYSIuvwYU9HGAmFcbmd6DYfZa4M4biFsqAHsjEm
      QgmC5R6mxifxlJYwNTqGbndiM6wEayqwF/nNp6IoigRwPzAMOt86xi3/Tg7vXL3U0xQNCeB+
      YRhksxlQNTS1yG+WC0hRFEWeBr0fKAqaxbrUUxQlubkQpiYBCFOTh0ALZBg6+ofH6iiK8tF/
      d57n46+biWEYGIbx8e9tGHCXy2c5kQAWKHLlJD99b5yADXBU8+SXDxB03Pn4e6TjEiFvNU2l
      MJQsoaHCszTDFpqeouP8WTzr99AQ0HnvzEXWbN9Nudf2p793iUgAC+biwNNfZ4s3w9XT55nL
      pHBE5ohEk1gcbkoDJZ84r4LVoi3ZpIWmaDY2Na/l3KUrEEyi1W6h1GMlHYswFZ7H6vIR8GjE
      kipulwU9mSSlqBhZHSUTI6Y7CPpcBZ1ZAliwOK2v/oYeuwV3zRoOkKbrWgcT4SSxWJx1Ox/D
      9+E5E+Nd9LKD2lLnkk5cOApWbx0Nweuc6nHzta8EUBJRujrbGYukUHSFDTuauHF5mAcPbGOi
      p5OMr4LQrevMzSYpWbudPRLAcudgx6NPstGTovf9DkYTtZT4SsGWITo5xvDgCCVmub7fjR5n
      OpyhhChj0Qz++VHaL7ajuwIoqpWatJ+Gilv0DUySiCRYU+9juMfBQ48fIOAq/FO5EkAODEPH
      QEXLxIklogx23cBZVkY8mcTn9qLo0aUecUkYhs5U71WSZQ9waFOM8xc7eWBTGYGVG9i192Es
      mSiGTcOpVdF9qRV7xUN47Qo2rx+v3bIkG8sSwALZy8oYbj3JECqlqzbzcHUtDQ+nONXaibt2
      I9s31pAMGSh2DzZ9JXXG8t0AzLtsmlnVT/OqCuwWaFx5A9UZZPeGas6904I1UMOuXZU4nQGU
      qIV1j65AUxPUVJeh3u0IvgKQQyFEgSVoO/EG8dpt7G9ayVI+QSrHAglTu+uxQLquMz09vRTz
      3LP5+XnS6TTx+H3ysiSxZP4oAEVRsNvtSzHLPYvH49hstmU/p1j+7hqA1+tdilnuWTwex+Vy
      yUMg8bnJwXDC1CQAYWoSgDA1CUCYmgQgTE0CEKYmAQhTk4PhCuT64CQXr4/mdc3N9eVsbazK
      65pmIwEUSM/gNMfevpLXNY8e3CQBfE7yEEiYmgQgTE0CEKYmAQhTkwCEqUkAwtQkAGFqEoAw
      NQlAmJoEIExNAhCmJgEIU5MAhKlJAMLUJABhahKAMDUJQJiaBCBMTQIQpiYBCFOTAISpSQDC
      1CQAYWoSgDA1CUCYmgQgTE0CEKYmAQhTkwCEqUkAwtQkAGFqEoAwNQlAmJoEIExNAhCmJgEI
      U1vkN8nLMNB1mZ7uHqr3fI1N5ZCJ3+S5H7eQ9dpw1TXzlUc2cqu9lfPXBgmsbObg3mbG+q9T
      WtqA353gvbYu1j+4m4BDWdxRhSktcgA6qj1IU2OEkeztU4zwFFX7n+bQ1iAAiYkebsYDHH1m
      P70Xf0vfyBxqKoWeSdLb/gGuhu345covFskiB2CjtmEVc70DH50Sn55keCBJa8JF/doNOMIG
      VavKcFisVFWvZCg2iy0xTVvrENbq1Txa40UBdF1H13X48ONMJkMqlVrc8fMom80uyprFdBks
      RwV/n2Dnyp3ss8+Sjs9w4b12Hl4TJJM1ANANHUVRQXMQDNqZic2RyoLzwykVRfno/4qioGla
      ocfP2e9nz/eaxXQZLEcFDiDDVGiGQE09Xt1Db98V7D4L45dHma+tZKj/Jo7Vj0B2mtUbVpMc
      7+DS9XH2bK5CVT/eXv/9P3wx/eN/cv58rllMl8FytMgBTHPi568ylkqSVW4y+cCj7K+303L8
      GLNZJ027D+Ar97O9boqXjv2KFVv201TjZtwowWa3E9y0k8gH7UzMBan0Whd3VGFKimEYxlIP
      sVChUAi3243b7V7qUe7Z8dZufnj8Ul7XPHpwE994ojmva5qJoiiK7AcQpiYBCFOTAISpSQDC
      1CQAYWoSgDA1CUCYmgQgTE0CEKYmAQhTkwCEqUkAwtQkAGFqEoAwNQlAmJoEIExNAhCmJgEI
      U5MAhKlJAMLUJABhahKAMDUJQJiaBCBMTQIQpiYBCFPLIQCdyYF+JqIJAKZHBxifjeV5LCEK
      Y4EBZJgeHeDUSy/x27YP6Onp4cyJE1zun1qc6YRYZAv869BJetvOcK7jMvpEmAGfC5t/FU/V
      lS3OdEIssgUG4GbnU89QvWIlZ3tCrN6xj7LsOE6LbEqI4pTT+wMkImP0jw6RuDzIBms3/akg
      Fc21+Z5NiEWXQwAGkekUVXWVWDGYi8zlfyohCiSHxy4qzQd3kR4ZoKP1GJdiVWxdU53/yYQo
      gBzuARQs/nqOPPPXhCMJHCV+Suz5H0yIQsghAJ3Bi6/xk+Pvo9ktgI9D3/gau1aV5304IRZb
      TtsAM6MxHvyLr7OvsQJQcbiceR9MiELIIQCVFfUlvPDyr+kpcQE+HjnyFNtqS/M+nBCLLYcA
      stzqnmDbE09zaPMKQMHmdOR9MCEKIad7gLIKO223btGlzQF26tY3UumVh0Gi+OS0C9dRtYYq
      JcyNGze4caOf2Xg633MJURA57QnW7G5Wb3qQxnWrcNstKPmeSogCySkAiwUGPniXt07MsmXv
      IbZtbKDM70GTEkSRyWlPcGntZr5w+M/YvT5Ay69+yo9+9GPOdE2g538+IRZVTs8C9Z57heff
      7mbd7sf43r8cQZ3r5r3OUbIby+UlZqKoLDCABDfbb5Ipq+fgoTpcTivjg8NUNWzki0/Y0e7y
      HYZhYOg6iqqhKB9/bgCqqoIC6Aa6YaAoKooKGLe/V1FA1w0URUFR5PGVyL8FBqATm5kjrczT
      +btrJAEoYV+wkgqv6y7nT9HVdo7+gT4q932LbVWQDvfxyqtnmDcsNDywj70bSvng9Dt0DE3j
      DNTz+KG9jN3soKJiHQHnLO+cu8mD+/bil10NYhEsMAAXm/ZvZSIUwvdkA1aHh8rKINlolCTw
      x8fEqVSv2UKFDwYAyDLU0c26Lx5lvX2WlrZbzPnnmfE08FfPPElf5zmGR2bQAD0do+NqD6u3
      78TnkFt/sTgWFICRnKHl1z/jVPcMFgso2SzB2kb0MPzl975JzV2W9wdLmZv5/ZZBmnC6hPoy
      BzajBJ9uMBs1CFb4sGoaAX85A7E5tOgob13opGrLbpoDDhQgm82SzWbhw49TqRSadrcHXctT
      JpNZlDUTiUTe1zWTBQVw6/1zTPp28c//tA2LpmBkM1x46Tlmt+yn6p5WsBF0RrgxPE+Te5YZ
      BZpKVLr7pkiuqCIUGsZa9gDoFRx4fBvR0et0DJbRvNKPqqq3txkATdOwWq3Y7cVzHLZmyX+s
      mqYV1WWwHC0ogNKKcvpbTnF5bTWN5W6ioW7OdE/w53srP+XZn2lO/PxVhiOTzFtuMvnQYxxs
      auLyay9yNWNj866DeCu91Paf5tgv2gnUNXFgq4+xPhtOt48V27fReradUOBhKr3WO1Yutg1j
      ZRF2FxbbZbAcKYZhGPd+9iwT3W385vWzRBJZNKePg1/+KttWBwr69GcoFMLtduN2uwv4Uz+f
      463d/PD4pbyuefTgJr7xRHNe1zQTRVGUBW4Ea5Sv28V3G3fefnpSVVHUxbhtE6IwcnpJpKIq
      aLLHS9wHPvfVuPf821y4PpqPWYQouJxeEml8uOcWoHzNZgKOkjyPJURh5HQ06ETPeZ5//SzR
      lAEoeMrrOXzkK9SV5LScEEsmp78OPXx1gPr9h/nOd77DtsYK/MoEb7R0kv9dPUIsrpy2ASzW
      eaamU9gcdoxwFCMYxBqOyuHQoujkEIBG0+Nfwt1/iv/89/+gy9LArsY1rNu1NrfHU0IsoZw2
      gufms+z4whEe9XvxeD1YFGiUPZKiCOUUQDR0kzfffI+JpMpDhw6zt3k1LqsEIIpPTi+JrN64
      j29/92848uhGTv7wvzh5dTj/kwlRADn9bdChyy0ce/kClrKVPPHss2xukHeIEcUpp2eBvNUb
      eerIU2yoUGk/dYbeyUi+5xKiIBZ0DxCd6ufC6bNc7OgiaijMdM3z9L/+Iztq5B5AFKcF3QOM
      Xn+XYy+eY83DT/P3//B3PLapkaqaMpzW4nlllhCftKB7gLW7n+HfGnbyzhtv84PWYQavjDP8
      SiOexx6mzn+3F8ULsbwtbCNY1QhUr+fpb68jFY8yGZpgZGCURFoOghDFKcedtwo2p5eaVV5q
      Vq3O70RCFJC8rEWYmgQgTE0CEKYmAQhTkwCEqUkAwtQkAGFqEoAwNQlAmNp9+TLe9p5RXj3X
      k9c1d2+q5dCDstf7fnNfBhCaidHWNZLXNWvKvHldTywP8hBImJoEIExNAhCmJgEIU5MAhKlJ
      AMLUJABhahKAMDUJQJiaBCBMTQIQpnZfHgskipOhZzGi4/ldVLWgeio+9csSgFg2jPkJ5n/8
      RF7XVEtX4/7Wy5/+9bz+NCGKjAQgTK3gD4H0bJj20+3MAbbgKnZtric+2cf7XYME65tYvzLA
      7PQUTqcfp1NltL+PkpoG3PIWTGIRFPweIBvpZyheQkNDAysrAxjxcS603yRYU8Xo1fP0T6UY
      GxtiPpogPHCZaxM6VrmfEouk4PcA2ZkZAut3s2qVHYBwXxfu+tVsbGzApyWZmppCA1Lz03Te
      mOPBR5qxaXLrLxZHwQNIK056Tz1H31krFet2sKNUweW0AmBTrKQyCZyRYV5/9yJ1Ow7gsdy+
      8mcyGbLZLADZbJZkMomq3v2uIZ1J533uTCZDPB7P+fvT6eU307KTTOZ9SV3XP/MyKnAABo4V
      W/nmNx+C1DQtLZfJVFQwOxNDr9OJxiPYbPVQsoIvH97OzasdDIbrWOm3Y7FYsFhuj6tpGna7
      HafTedefYrVY8z65xWL51J93L6zW5TfTcqNn7OT7nSZUVf3My6jAAWQJ9V7mcv8keiZFxldP
      xYpaBnrP8MrxLtA87DlQymT/CJrdx+79zbScbsOzdzdBl+yyEPlX4GuVhZr1W3FVhskYGp4S
      H6pVZcf+g8zOxbC7fXhcGv7GjWiaFUVzsm+vB80uW8FicRT8ZlXRbASC5XcO4XBT5nB/9LnN
      Zv/oY4fLU7DZhPnITaswNQlAmJoEIExNAhCmJgEIU/t/fOwf8keocbcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='3. Compare BMW and Lexus car prices. Then analyze BMW and Lexus car pricedifference between new and old models._4' width='183'>
      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
      f6pPxE0objGW4hZjKW4xluIWYyluMZbiFmMpbjGW4hZjKW4xluIWYyluMZbiFmMpbjGW4hZj
      KW4xluIWYyluMZbiFmMpbjGW4hZjKW4xluIWYyluMZbiFmMpbjGW4hZjKW4xluIWYyluMZbi
      FmMpbjGW4hZjKW4xluIWYyluMZbiFmMpbjGW4hZjKW4xluIWYyluMZbiFmMpbjGW4hZjKW4x
      1j0Sdza750Vhnb2T7LJtDnKSY5k51Yo1ajpz1mdiL9uXQWxshtPtCzm6Opp/ZF6rwTlLbbsn
      4rYnb8T22DOEOG/M3s2Kz/wZN3cpMe+/Qc/cOOJSCm9++4y1bK4/ktEd6tXIfMU9uH/c9nTW
      HniU8QMewcNpc1ZSGsFDBtPGzwPqNaH7qEgK0g5RKW97But2+fPCyHblbi/mc/O4HZyI38ND
      wwYQVKHMixcCaNnCaWNAezp65pJX7ig76Wt34D9iMM1Vdp3jWdsT+CmOrHg+8RrB1EplXuHK
      FW+8vZy33Y/H+XOcB4IAUpdhTQWv0CgW3KTsS5cu3XTMgoKC6pm8uExVnyM3jjub3fGF/Hpq
      85ssJxrQoMFlLhcCZYH/B0eTpjQp/bHbZGImtiZ5yWw2nOjEmHbl76Vhw4Y3HdXX17e6HoBx
      3OVlX9XnyH3jPvoJW48n44jaX25zqjWNIdFv0c4/j2OnHIR1KIk27zhfFjWib7mjfQibMJrM
      BavJmDGRLj41NXlxB+4bd+fxLI0Z77Qhg9jZPzLwrQEEAoR35cOV8Xz9yGDaeOfyxbrd+HaN
      xqvi/fh0YfxL3zN/VTKtXw5Dfdcdbn5B+RMCI5nU6wJxM6OwTpvHwYdfYlxopbQB8AgawPiW
      CSzZeRZHDU9Tas99xcXFxbU9CXdhs9mwWCy1PQ23VbCoU21PAQDfV45V6bh798wtchuKW4yl
      uMVYiluMpbjFWIpbjKW4xViKW4yluMVYiluMpbjFWIpbjKW4xViKW4yluMVYiluMpbjFWIpb
      jKW4xVguivsrtszdwlfOmy5n8OGiXZxxzYAilbgo7nMc+t9DnHPeVC+PY2uTFLfUmGr+3pKv
      2DJ3I19yliOcJWfuXBJLd53PYF/bQUyq3gFFbqnm1tyPDmLhgrE0q7EBpa6r5jN3W4bMnMkQ
      UliUkkT4zFcIrd4BRKrMRWfuUKa+F8yGIRFYLLNIAOy7Xqf/O6kUuWZAkUpcdkG5ad5faDDl
      VfqXbPHp3pNOu/dz2DUDilTiso8CMzMi6N+v0Y11j88DPJD/b6e/WyPiWi6KO5Cg4B/4seyz
      wCLyPt1FYtsWuqCUGuOirzBuw+jpzXjB+i6Xucbh4f04d7o+kQv/oLilxrjs+7n9erzJRksW
      GUnf8C+8CXysK52a1HfVcCKVuPTL5z0bNsfSt7krhxC5JZfFnX9kPbFbT1L+zyp1ZPjMIbR1
      1aAiTv4fiV4nh3jktxoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='3. Compare BMW and Lexus car prices. Then analyze BMW and Lexus car pricedifference between new and old models._5' width='183'>
      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
      E8G2Y9BlhgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='3. Compare BMW and Lexus car prices. Then analyze BMW and Lexus car pricedifference between new and old models._6' width='183'>
      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
      SF39F9WTwGM6PRw5AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='4. Murad, who wants to sell his car, thinks that black cars are more expensive. Describein a visual way whether this idea is true or not. Is this idea true for the three mostexpensive models?_1' width='192'>
      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
      Svt/TpJEcSz/8L8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='4. Murad, who wants to sell his car, thinks that black cars are more expensive. Describein a visual way whether this idea is true or not. Is this idea true for the three mostexpensive models?_2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='4. Murad, who wants to sell his car, thinks that black cars are more expensive. Describein a visual way whether this idea is true or not. Is this idea true for the three mostexpensive models?_3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAen0lEQVR4nO3dV3Qc153n8W9VdW50o5FzAyAABgSSACNIg0lUIKlgybIsyXKQ7fHsSj7j
      2T2zcZ5md4/PHh9bDivPrLwzDmOPLDnIkiVZoihSDGBOAAEQBJEIgMipc+7qfSApCSJoiQSo
      brDv5wkodFf9u1G/qrpVt25JsVgshiAkIUmSJDneRQhCPIkACElNBEBIaiIAQlITARCS2h0f
      gLGxMVwuV7zLEBLUHR+AaDSKqqrxLkNIUHd8AAThLxEBSHKxaJhgOBrvMuJGBCCewi56Ws5y
      5twlPFeP0iIhD93NRzjdMUgw8skO3RyDHXSPeW+hgAiD777A997qnDk55KWvo4kjR45w9NgJ
      WruH8IVV7sQuAyIA8eTt4aXn/pkX/vUFWiavrOyeiQu89Nz3+PEf3mHa98m2zOf3/oyXjg3e
      /PKDoxw9H6O+OnfmdPdlXvvNr/nToZO0nj3CH3/1G947P4J6ByZABCDuCqlbbaajcwIA/0gn
      Ifs67Nbbv2TfUA99KfkszTRd/0dTEVsffoKv/9XTbCsPc7a5m8gdmABNvAsQIHfJCqbPtDK9
      roGepg5Ka5fTN+SEaICWt/4f//KnZjxRFXvdo/y7p+9l5KVn+KV/B1XOJpR1j1GiAtEAI+f+
      zM9/3829f/N1rG2v88s/7mPYFSNz+d188ysPUpqmR7q2UDVAd8cgufmLsJm1Ny7u2jovgRpy
      03To9/zu9ROMRXWsuOspvni/jRf/+nmmV9uZbGlhjDr+1/PfInO0iZd/8RuO97kxaqKkbfwa
      /+mxDaTobu93ebPEHiABWNOKMWr6GRvv5sLEUmoKr/1bFKx5S9iwaRMN6xYzfvpNLoxCTI0y
      PjRK1SPP8MVNS9BGfFw89DteeLWbTV/7CnWZGkzZxazZsIWGNRVMdJyjc9QxY5lRv5NLky6y
      C+0YFOn6ovyDNL75Cr/65b9x4JKRtasWE5i8yO4/H8G0eC3rqnK4cPBV2oYCxJCpvOebfPfH
      /436UB8Xx1ycevs9xgp38oN//BHfvH8FxrD/9n+Rt0AEIAGYrDZ0eomhEweZLKslV7kyPRyc
      4Mjed5iMpVFQZCfNqHKt83rB8i2srshAIwOyglGvJxiMoNXK4B7hyN4jXAobsRcWkG4x8NHm
      tNc5isMJhYWZs68EioH0bBv9ZxoJFNSypiybSGiacDQVe0kJZZUbePxLT7AkS4MsGbDZrGj1
      OvSyDJEA09MKxUvsGDUSsiIjz5KxRCACkABks41ik55De1qoWJn3/j9FjfhwOYJkFJWRl6Yn
      Gv7gPXqjEeXaLxo9Rese5utbDPzht7sZcXkYcwZJL7STm5WCHL2+MT3V14zLuhJ7+g2OgnUZ
      VK7ZyjN/920yBvbweuN5FHMxmVkqnqiOInshVoNCdLYzVboUiuwyHcfO0NVzif7LY/jC178s
      EYgAxJMunRWbVpClmClfXk5x7Vbq8gyYMouprVyMzWanYdsaLh1+neOXDazfWk9uCqRXbKSu
      6IOGa075GlaWZFJ21xd5uNjFeXcW922vZur4Ho50h6lZt4bCVOOHFuyn++xF8uoqSZlty6xP
      pWp5FYVWIxmLVvPU4/cRHuwlZCnioUcfwdB/mJdefoXT3ZPElHSWbVpNngHAwpKGtRSYzFRv
      uZuVlmH+8LtXOd7pRGPQISXgXkC60+8IGx4exmg0YrPZ4l1K4pg+wf/+QStf+PuvUaq/HQsI
      M9RyiNfePsyYN0xUyWLTZx9lS3UemgQKgSRJkjgLlITG206jX3cf9tuy8gNoyCpfzSNfrCAY
      BZ3RSprNwmxt7XgTewAhaYl7ghPY5OQk4XCCthxvwOFwEAwG413GTREBSFAul4voLGdvEpnb
      7V5woRUBEJKaCICQ1EQAhKSWVKdBJzuO8eruPUwEDOhSsqjZsJXPVBdh0My2HZjmwK+OUP6l
      XRT0HeBXlxfxpY1FH7OEaf70w+c5H9Ijy3rs1RvYvmUVmYZb3c6ojHQ08sqbF9j4xOdZkZcK
      QHhgPz/4tyZWPfx17lpiucV535hrYIBeh4PymhrM8zRPR9Nr/N89HcgxkPVmyuruY1dDGTfT
      N87vcCDbbOiBaDjE6d2vkLHlccpSbr2upApATE1l1c4nqCxbRHSqm3cOdzFuz6IofZbuwMRQ
      I1dvAompn7ArcIy08u08c389KREf7Yff4HT7Iu6tzbj1mnUZVBfo6Bt3Xw1AkJ6WcSpWFKHe
      pjPYsViM+T47HlNT2PTFb7Eh30jUP8q+351gpKEM+03Mo7exEdP991NybZ7R6Jxv0kmqALxP
      kjFmZJNvHCUUjRINOOk43cjJC4MY8mpoaFhD/qwb1ijT3WfYc/gcLjWV5RsbqK3IYbbOxLLG
      RH6Fnf4uL5DGVPdxdu9vxafPZs2WLSwvTP3E5doW5THSM4J/eSFG7xDng/ksyx9lAACVkfMH
      2Xu0i5DFzrZ7NlOscdAxHsLgvcSpLg+rttxL+vRJ/rSvmaAun3s3VzPYdozWQT+Zy+q5e+1i
      jHjpPHOEY639eP1aClfUURGLMd1/lv0HzzIVTWXtjp3U5My2sbgJqop/egyPNYNUIOy6zPGD
      h2gfVVm0sp76FaVEPF20He9jbOoyk1EzdZsb0Had5N1Tp1EHB8kqrmPHhuoPzdNL07tvcLrf
      Q2rpGu7bWMbE5T4U2yIKM/X4x4a47I1QZC/GqMwsJ8kCEMXn9jIxNkZkopvLqkyJQctw93F6
      PVlsf2g93kvNnDt5DvOmkuvfHpqkpdtJae0m8lJN6Cxm1ICLcXcQRW/CmgLRoJvJ8XH8ER+d
      J3tJr61FnWrjnZNe1u56BEuwn/feO0bek/eSpVy/iFmZSlme0kr7dC2loyNYyoowB8YAUB0t
      HO/SUduwGcXbw8EjXTxZb2Co/SQD4VLu3rqJVG8rb5x2s/GhR7FGIkyeO4Y7p4ZNZTIjra00
      j+Vgd7bTNW1h24OfIzp8maEIxNRpzp4eoGRVA9Wym/a9jWQ9fg+5t3RE52L/r5+nEQ2pBYup
      37gec9RJ67lulJwqtlRAd2c3fTlpZEjjDE1I1G7dheLpouPiBOvqt7JxMohh+3bsWgNG7ftd
      Bpk+20iftZKGzTrcnSc53F9CTchLz+AAWTY7w+MD+ORSdLPUnWQB8NJ79jjnjuzHqRZx/6M7
      yTDKdHnc2MrqKMi0EJTKGGvrwu0vuf7tOhtlOToOtzcxmppJUfky5HAHbxztIa1kBZvWl+Ae
      bmH3KxcYH1VZ98gX2G7X423rR7d4LWW5GUAay62/ps8NWZ/44rSGoqps9p3rRjYo2O0WuHzl
      L77+btr7ppma7ADAmJtDEAPRlFLuWllHnlXLaPckacsWU5KRjiTBubd8dA0cY0C+skYs9kbw
      xSRKli2nMMuM0+9h2uEATw9NbZdIc04BYEotJhoEjLPV+HGsbHnqW2zIMxBwD3F870kGzFUM
      DHRy2SVh0MlA2pVwac0UlhezKD8Lj8OPbdSJzpSCyWDAZLNh5Uob4IogvRe7ueQfYupqV4ui
      kjB5pXlcPD7ExHQq7gkvaauyZ+2KkWQBsFK1aSflOWYuNnXidzkIZ+ai1enwjA7jKzHhmRzF
      GzJimK11FlExF9dwr72K6b422vr7KFi/maeXbr76gilsJRtouLuK6a4OLk2O4grnYUpLx3+i
      l+mqNMzBIbpdKVTf5EqkZC7F+t6b9BcvZa3ZQuTqdJ01leyCYh7aVYtNCTE57kGDE5PVgkF7
      5eDMkm5mumMM75ICDJEwKWaFiuUPsGVxJqp/gqmgCXd/gPHRcYIFenzuKbwBGfQ2CgpKWP/w
      DuxWGffkBHzSvdaNSDI6vQl92I1H0mGx5lBbt561izMITjvwG41EPLO/VVUdOJ1RVMuH12QN
      qTYLxVV3s7M6Bzk0zYTHiGS2UmFq40y7B6NSzDLz7B2RkioAkqKgKAq6lFxqVuvpOtXEKUlL
      XWkll/fv5ac/eg199jI2b9tMmi6KVq+9cp5Y1qDXKECE8QtH2Hv8Aj45jdrNd2OZERQJjVaD
      ordSsnQ5xr52zh4+zYp1y1mXt48Xn/8hAV0ayxvuoUgf5vLZk1w2lrC22MTpc22k2lewOG/m
      KQ1ZVtAoMopiJTtHz3TMijVFg0OjRatI6ArXs7L9D/zr8/uIKhbK197FjkotGkV5/xy3sbCG
      dRPv8fMfPUdYX8iuhhJ6D77ED14PY0grYNOuB6kotNP1zm6ePxQgNb2ERTXlSPpiVi9t4c2f
      /xivqqWkehPbttno3H8Qz5KN1Kb7OHy4m6K6FdhtfznRssZP44s/oVGNoWjNFNdtY1daFvaq
      PP685yUOvR7GkrOUbTs2kS4paK6emZMkGY32Suqy7am8+NMfcryinke21aLR6VAkLUUNm2j5
      zW/5P7tDKNYcPnPfZ8nNNJK7vIzwL49R/IVN6G/QEU90hktQvb295OXlYTAY4l3KJzYwMEBa
      WhopKXM4LzkvVHyOMfo7W2j3FPHA1qWzbulFZzjhjhUJeHEEbaxbs+gvHuYk1SGQkCxkrLll
      rM8t+9hX3jAAHo9n3i+GxEModOVsgaLMtfX26QqHw3i93gXVuzIUCuHz+RbUenPDALjd7gXX
      HXc2gUCASCSy4D5LOBzG4/EsqOCGQiG8Xu/7G52F4IYByMvL+zTruG0WaiM4HA6Tk5MjGsG3
      mWgEC0lNBEBIaiIAQlITARCSmgiAkNREAISkJgIgJDURACGpiQAISU0EQEhqSdsb9GBzH8/9
      9mi8ywDgd//webSahdPn506StAGIxWABdVoUbhNxCCQkNREAIamJAAhJTQRASGoiAEJSEwEQ
      klp8T4P6Btl/4BwZK7ZQk29EDXvpOHGQ1qEAWUvXsqmmAJkY/uHzvHukjajFzpq1K8m3KYyN
      jiLLaWRlmfBPDnJpKkxxSQkmbQI+ilBIWHHbA8RiIXpPnWbMOUTvZAiI4ew6TNOUjeUry/E1
      7+XcZIyYt4+9jT3kV9VSrBvjWHMPoUiE6ekJHI4gathPV0cL0yEDOnEtSbhJ8dkDxKK4+tpo
      l0qpL4tyFoAgXW0O6nbdwxIjlBoneaVlkMLMfrSLq6ldUoK8yMzw2914wtceVKEy2XuWoVAp
      n6lMrIcwCwtDXAIQCbjoHXJTVrYSw1j31al+/HI2pVeHmJSzczAfm8Rt1pOeowMk0FnJVgM4
      UME7xtmW80T0Vhoe3MC1sU9VVSUSiby/LFVVCYfD1z2+MxJJnPF2gsEQanTmzvha3ZK0cFId
      jUZn/a4TWVwC4BztxKUpZGmOBe/YtakSciw244kfklaLIgVmDrSk0aBFIqwzk1uUgmesC4c/
      RtHVBEiSNGMsnWu/f3R8HVlOnPb/lfpm1iNJErIsL6hxgW70XSeyuATg0plGjnZGOLYfIt4p
      XMYpsg33YdUN0zPsJz1bg+N8J/78Ddhs05zpcxAsyEdxD3JJ1bNYkvFpzeTZ7RSsSGP/4QOk
      bd1IgVU3awBkWUajmflRZTlx/kkajYLmI53hrn2Oj9adyGRZnvW7TmRxqXTVI/+RVVd/nmx6
      lcPKVtZXpOLRl/PWod1MWbV4nbBqZyZWnUp25zH27LmMHPBgsa/GqP1gZTGml1NTMc2F1k5S
      Vy3Fok+cFVtIfHGPakrJWlZLV547ZSpYQcPqFIZdEawrSyi1AGSxZuMaOnpGiBmXYS8uQKNI
      FBSUIEkmJFlDfmk1ijOAVl44x8tCYoh7APS2fPKv/iwrenIXVZI74xUSWmse1StnDtVosXww
      1KFitJJvtN7uUoU7UOK0BAUhDkQAhKQmAiAkNREAIamJAAhJTQRASGoiAEJSEwEQkpoIgJDU
      RACEpCYCICQ1EQAhqYkACElNBEBIaiIAQlITARCSmgiAkNREAISkJgIgJDURACGpiQAISU0E
      QEhqIgBCUhMBEJKaCICQ1EQAhKQmAiAkNREAIamJAAhJTQRASGoiAEJSEwEQkpoIgJDURACE
      pCYCICQ1EQAhqYkACElNBEBIaiIAQlITARCSmgiAkNREAISkJgIgJDURACGpiQAISU0EQEhq
      IgBCUhMBEJKaJh4LVaNhfG43/nAUSdZgslgx6hSIRfG7nHhDKlqThVSzHokY0ZAPh9NHTKPH
      YklBp4FwKAxo0OlkouEQwUgMvV6PIkvx+EjCAhWXAPidlziy5wTD/hCqrCO/YhUbVy9Fmb7A
      7ndOMh1Wkc1F7HjgbnI0LtqPHuRkzzgxycCi1Zv5TGUGPT0XUBQ75WUWhjpO0ulNZ23dMlLE
      Pk24CXEJgM6Uzep7HiY11UjIcZmTJ5oZ95cTbmrBtu6z3F+qZ+jY6xzrcrLd2kFHMJfPPbkD
      ZaqVN08N4K+wvT+vkHuQiwMRyuvLMGvF1l+4OXEJgNZgxSoH8bsm6LvYhs9YRqbZR4s7nSVl
      NrQy5NcupfnAGM7cKHllhaToFOScUorkZtxqFGIRgn4H7UdOY6naSWGqHgmIxWLXLS8Wi80y
      /frXxcvs9d14eiJbaDXHJQAQYrD9CAcaO9BX1LGmOhu9FCEiGTBcPYSRdDpwu/Flyeh0MiCB
      rKAL+PHEYuAepnH/QSJ5lXwhy4RydeMfi8UIh8PvLykajRIOhwkEAjMr+NBr4i0QCBDVKDOm
      RaNRgsFgnCq6NZFIhFAodN13ncjiFAA9xSu28eWaTTjHLnHu/DkwrsKgTjIdhHQ9qNNTBDML
      SNUP0OcKAzEI+5jSmSiWZCasRdz18Hr0zhOcPt3FZ+orSFFAlmX0ev37S1IUBZ1Oh9FonFGB
      Tqv7lD/zjRmNRrQfCYCiKBgMBgwGQ5yqunkajQa9Xn/dd53I4tJkdPe3c2HYSViV0GgkfK4p
      AmEDRUUqZ0/24vVN0nToApnleaQVpDHRepFhT4DRzjYmNCZMyrWVRaGgZgOZ6iUu9kygLqBd
      r5AY4rIHkDQqF/e+zFtjLjQp+azfvoPF2Tok23bsb7/CT3/qo2T9Lh4q1iGzjF3rXLz4s38i
      ll3J3fdUYtQpmExmZFmDordQU1XOic5+pvNtZJjjtFMTFiQptpBaLLdgeHgYo9GIzWabMf1A
      Ux/P/fZonKqa6ff/4/PXHQL19vaSl5e3oA6BBgYGSEtLIyUlJd6lfCKSJEnirLmQ1G4pAD6f
      j4sXL+L1eue7HkH4VN1SANrb23nyySdpbm6e73oE4VMlDoGEpDbnAITDYYaHh/H7/fNRjyB8
      quYcgO7ubh544AEaGxvnox5B+FSJQyAhqc1rAEZHR3n88cfZt2/ffM5WEG6beQ1AOBymq6sL
      l8s1n7MVhNvmlvoN5Ofn8+yzz2K32zEajTz77LOUl5djtVp59tlnqaysnO86BeG2uKUA5OXl
      8fTTT7//+41+FoREJxrBQlITARCSmgiAkNTmHADHcDPv/bkJF4AapOfMYY419ROae22CcNvN
      4e6RAKNdl2hpO8KRwzFiuSq2WID2o6dQF1lYudI+f1UKwm0yhwB46T7ZyP4zTVzqg9Bb0xhj
      oE0rZnt1MYlzx60g3NgcAmCj7oHHyKkq4tB7bmp2rqYgzYICmCwpiBF6hIVgDm0ABUOKlcLi
      StINp/j+3/yEtoCP5n1/4N0zg0Tnr0ZBuG3m3Ah2jncx5ExjZUUROp2OdKMF//gkiTPqjiDc
      2JwDIMka9HoNsgwhj5OBkRGiZhPKx79VEOJuzgHIyKuirEhh0NvBK899n+PuHNbWlolGsLAg
      zHkQHdmYTsND/57qDeO4gjLpublY9eL6mrAwzDkAatDNhVMHaO51XG34prB4/Xpqy3PRzrk8
      Qbi95rypHu8/yEs/e4dhb4hQKEQoFCYavaPH2hLuIHPeA2i1WSxbt5mGr3yOQv3Hv14QEsmc
      A2BKySQ8/SLPf6eDVIME2KjbsZOtK8XVYCHxzTkALkcXE+5yHnxqFwVGGVCwpGfEa9x1Qbgp
      c15PdbpMCoqnyM7NI8cAIKFoNaIrhLAgzDkA0egUrYde49CFc1j1AOnUP/wI96xZhGgSCIlu
      zgFILVjLM/+z4kP9/zVY0jPEKVBhQZhzAMJBByODU6SWlmLPSUUjntMrLCBzPwQKeRhoPU7j
      qQMo5gLWbt5MdWkWBkUEQUh8cw6AOX0p9z1VyOT4KIP9F9j3wj/wC1MVX/2rp1hVaBWNYSGh
      zflKcCTo5FJ7MycO7eaVV/YTq36Qb9yTxos//CNj81GhINxGc94DeKbaOfDWMaQlK/nGf/8a
      JVkmZMbwDnQk0KOoBWF2cwiAi/PvdaFfnklNfT2KzYRj4AJNA3qy7EWs+Vy9uBgmJLy5jQrR
      OYipxMLxt95g4P3pGWz8/GPsXFcmBh26DaZcfqY98X8Se3FOKhpl4f+H5xCAbLZ+8wEA1n1v
      y8w/qeqVh1ZLogk839463slv3zsf7zL42X99kAyrKd5lzNmcjlKirn7eff11TlwcIawxUFqz
      jfvvW0WkpRXXksUssS6M58UKyesWA6DiGzjLz//5N4zbali5fgN6KcDA2Tf57oHXCJLJF/7z
      IpZY57dYQZhvtxgAD2f3NWHb/DX+eusyNFcPdWJ338OJV39Pl24FdXm2j5mHIMTfLbZijBSV
      Gmk7uIdTPROEo0A0xOW2w+xv6Se1IEfcCyAsCLe4B9BSsPZePjf1Mv/ynb/jBVVBIgb6NBoe
      /ioN1dliWBRhQbjlRrBiyGDVZ5+h9oFv4PMGUJExppjRis5wwgIy92FRFB0pVnHAIyxM83yx
      NkbsWv8HSRId4YSEN8+X8kL0nDrIwePd4gEZwoIwz3sAGWNKGjbV+Be3/rFoiInLF2nvHCSg
      mFlUWcuiHDNE/FxqOUXneIi00hpWV2QjEyMw3s2xpm6i5lxqapaSZVGYmpxEkqykpxsIOMYY
      dEbIL8jHqBH7HeGTm/MeQI2G8DidOJ1OnE4f5vxSFlfk/MVbIt3TXTSdGUSfnkO6MczFMycY
      8YKn7wQnekNkZJgYOr6XCw7AP8ShxjZkWyY6VzdHz/URjoYZHx9mctJPLBKk92IzQw4VcQ+O
      cLPmvAdwD5/jhe98n1a/EQ0qPq8bVbax5om/5T88VDPrAlLSKti8czEanYLqHaet9TyBcJCR
      5hGqtz9KlUWiMs3D663D5Kb3EC6qYmtdGXIgizfe7ccbzrs6pxiOwVb6nDnUby1AKxIg3KQ5
      ByAY8JK95HG++62HyI25OfbuW4x6fRzbd5yhh2qY7UlhsqJFp8SIeMc43z5A1Gwnx+pjkBzs
      VgUJ0BUWYmqawGXQkZVtRJYkZFM6+XTiiKkQmKajs58WVWXlzgdJ1VzZmamqSjT6weM5VFUl
      EokQCs1slUSjkbl+9HkTCoeJqTMfKXLjutVPs7QbCoevr+1GNSeyOQdAkqI4XYNMOyPkWGIE
      xsaZtGWS5Z/Ae8N3xfCPX6K5axhzZjGViwowyNNX/zJj5te3Ja5Nk2S0Oj1h7xShyEdfIl33
      +0enkUDnqCRmq+/q3677LJ9GRR9P4vra4EbfdeKacwDS86upLDzKT/7+28gaUFPKefKBFPYs
      NZN/g/eE3eNc6B4ko6yWRVmmq8fuZizyCINTYTJsMr7ePvw5tVhTHLQMe4gUqMj+cS7H9JRL
      CiP6VBZVVpNt7KOx8Shp29eTbVSQZRlZ/qBpI8syiqKg1c5slShK4lyr1mo1aDUz65FlGY1G
      c13dH/5s8aTRzl7bbN91Ipv7hTBDJtu//F9Ys2OAEadMXmkhFo1Eff2NrwM4pjrp7JyiSDmP
      ow8UUxqlpSWUrSjkz/v24c3XM9bnYcXOHNL0KubdJzl4dBLFNYImZzkm7bWVRcKaX02V4zht
      zV1YVlVg0ibGCiIsDHMfG3TsLO+81kFOfQNrKwswfIK7hEzmHIoKQwQ8HgC0kpGICqlFq6j3
      tdA7EaJ8wzYWpwLksqFhOWda+4jlVrJ8STFaRSInpwBJMiHJWgpLq1AnfMRi4i5k4ebMOQDG
      lEJKCzs5+Psf8ZLbRP29D3FPfQ3ZVt0N9wDmzHLqt5bPWo69au1HGs4S+vQS6jeVzJialpb1
      wbvM6Swyp8/tgwhJae6D45pzWL3jMWoatnPx9D5efvlXeCJf5au7VmKcjwoF4TaacwD8zl4O
      vbGX88OThCUjRRu3sb6mSNwPICwIcw5AKOQgQDZrttZjL8gGxzh+WUUFcU+AkPBuOQAxNUrQ
      58LpNJBn19N66EX+cU8bUvFKHn36q5QUZn38TAQhzm4xAEEGzh1l35EmRiadRHVW0nPTKUjd
      xJd+9G1qtGLbLywMtxgAP72nD/DOoWHueuzL3L1lFYW2bv7p0AF0YuUXFpBbDICVDU/8Lfb1
      zex/422+8/bPMaab8DhsLL00TG52BlbTjU+DCkKiuMUAyGhNqZRWbaK0qoEv+Zz0XDjFkUNn
      aPzFSwQfeoS7aovFI5KEhDcPN8RIaEw2Ftdtp6J2GwGng4BiEAPjCgvCvK6nkiRjtKWLC2DC
      giF6jglJTQRASGr/HwgywkJqPMHKAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
