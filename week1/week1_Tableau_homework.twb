<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Mobile Data' inline='true' name='federated.0s2qu2k1krd9m713cd1181spd353' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Mobile Data' name='excel-direct.13sszbx06fs3iz19zq0550vw0mwt'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/dell/Desktop/Tableau/week1/Mobile Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[SalesData].[Segment_id]' />
              <expression op='[Segment_id].[Segment_id]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[SalesData].[Region_id]' />
                <expression op='[Region_id].[Region_id]' />
              </expression>
            </clause>
            <relation join='left' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[SalesData].[City_Id]' />
                  <expression op='[City_name].[City_id]' />
                </expression>
              </clause>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Country_name].[Country_id]' />
                    <expression op='[SalesData].[Country_id]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.13sszbx06fs3iz19zq0550vw0mwt' name='Country_name' table='[Country_name$]' type='table'>
                  <columns gridOrigin='A1:B53:no:A1:B53:0' header='yes' outcome='2'>
                    <column datatype='integer' name='Country_id' ordinal='0' />
                    <column datatype='string' name='Country_name' ordinal='1' />
                  </columns>
                </relation>
                <relation connection='excel-direct.13sszbx06fs3iz19zq0550vw0mwt' name='SalesData' table='[SalesData$]' type='table'>
                  <columns gridOrigin='A1:G1057:no:A1:G1057:0' header='yes' outcome='2'>
                    <column datatype='date' name='Date' ordinal='0' />
                    <column datatype='integer' name='Country_id' ordinal='1' />
                    <column datatype='integer' name='City_Id' ordinal='2' />
                    <column datatype='integer' name='Region_id' ordinal='3' />
                    <column datatype='integer' name='Segment_id' ordinal='4' />
                    <column datatype='real' name='Sales' ordinal='5' />
                    <column datatype='real' name='Profit' ordinal='6' />
                  </columns>
                </relation>
              </relation>
              <relation connection='excel-direct.13sszbx06fs3iz19zq0550vw0mwt' name='City_name' table='[City_name$]' type='table'>
                <columns gridOrigin='A1:B66:no:A1:B66:0' header='yes' outcome='2'>
                  <column datatype='integer' name='City_id' ordinal='0' />
                  <column datatype='string' name='City_name' ordinal='1' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.13sszbx06fs3iz19zq0550vw0mwt' name='Region_id' table='[Region_id$]' type='table'>
              <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='2'>
                <column datatype='integer' name='Region_id' ordinal='0' />
                <column datatype='string' name='Region' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.13sszbx06fs3iz19zq0550vw0mwt' name='Segment_id' table='[Segment_id$]' type='table'>
            <columns gridOrigin='A1:B4:no:A1:B4:0' header='yes' outcome='6'>
              <column datatype='integer' name='Segment_id' ordinal='0' />
              <column datatype='string' name='Segment' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[SalesData].[Segment_id]' />
              <expression op='[Segment_id].[Segment_id]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[SalesData].[Region_id]' />
                <expression op='[Region_id].[Region_id]' />
              </expression>
            </clause>
            <relation join='left' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[SalesData].[City_Id]' />
                  <expression op='[City_name].[City_id]' />
                </expression>
              </clause>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Country_name].[Country_id]' />
                    <expression op='[SalesData].[Country_id]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.13sszbx06fs3iz19zq0550vw0mwt' name='Country_name' table='[Country_name$]' type='table'>
                  <columns gridOrigin='A1:B53:no:A1:B53:0' header='yes' outcome='2'>
                    <column datatype='integer' name='Country_id' ordinal='0' />
                    <column datatype='string' name='Country_name' ordinal='1' />
                  </columns>
                </relation>
                <relation connection='excel-direct.13sszbx06fs3iz19zq0550vw0mwt' name='SalesData' table='[SalesData$]' type='table'>
                  <columns gridOrigin='A1:G1057:no:A1:G1057:0' header='yes' outcome='2'>
                    <column datatype='date' name='Date' ordinal='0' />
                    <column datatype='integer' name='Country_id' ordinal='1' />
                    <column datatype='integer' name='City_Id' ordinal='2' />
                    <column datatype='integer' name='Region_id' ordinal='3' />
                    <column datatype='integer' name='Segment_id' ordinal='4' />
                    <column datatype='real' name='Sales' ordinal='5' />
                    <column datatype='real' name='Profit' ordinal='6' />
                  </columns>
                </relation>
              </relation>
              <relation connection='excel-direct.13sszbx06fs3iz19zq0550vw0mwt' name='City_name' table='[City_name$]' type='table'>
                <columns gridOrigin='A1:B66:no:A1:B66:0' header='yes' outcome='2'>
                  <column datatype='integer' name='City_id' ordinal='0' />
                  <column datatype='string' name='City_name' ordinal='1' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.13sszbx06fs3iz19zq0550vw0mwt' name='Region_id' table='[Region_id$]' type='table'>
              <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='2'>
                <column datatype='integer' name='Region_id' ordinal='0' />
                <column datatype='string' name='Region' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.13sszbx06fs3iz19zq0550vw0mwt' name='Segment_id' table='[Segment_id$]' type='table'>
            <columns gridOrigin='A1:B4:no:A1:B4:0' header='yes' outcome='6'>
              <column datatype='integer' name='Segment_id' ordinal='0' />
              <column datatype='string' name='Segment' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[City_Id]' value='[SalesData].[City_Id]' />
          <map key='[City_id]' value='[City_name].[City_id]' />
          <map key='[City_name]' value='[City_name].[City_name]' />
          <map key='[Country_id (SalesData)]' value='[SalesData].[Country_id]' />
          <map key='[Country_id]' value='[Country_name].[Country_id]' />
          <map key='[Country_name]' value='[Country_name].[Country_name]' />
          <map key='[Date]' value='[SalesData].[Date]' />
          <map key='[Profit]' value='[SalesData].[Profit]' />
          <map key='[Region]' value='[Region_id].[Region]' />
          <map key='[Region_id (Region!id)]' value='[Region_id].[Region_id]' />
          <map key='[Region_id]' value='[SalesData].[Region_id]' />
          <map key='[Sales]' value='[SalesData].[Sales]' />
          <map key='[Segment]' value='[Segment_id].[Segment]' />
          <map key='[Segment_id (Segment!id)]' value='[Segment_id].[Segment_id]' />
          <map key='[Segment_id]' value='[SalesData].[Segment_id]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Country_name]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B53:no:A1:B53:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SalesData]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G1057:no:A1:G1057:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[City_name]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B66:no:A1:B66:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Region_id]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B6:no:A1:B6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Segment_id]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B4:no:A1:B4:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Country_id]</local-name>
            <parent-name>[Country_name]</parent-name>
            <remote-alias>Country_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country_name]</local-name>
            <parent-name>[Country_name]</parent-name>
            <remote-alias>Country_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[SalesData]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Country_id (SalesData)]</local-name>
            <parent-name>[SalesData]</parent-name>
            <remote-alias>Country_id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[City_Id]</local-name>
            <parent-name>[SalesData]</parent-name>
            <remote-alias>City_Id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Region_id]</local-name>
            <parent-name>[SalesData]</parent-name>
            <remote-alias>Region_id</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Segment_id]</local-name>
            <parent-name>[SalesData]</parent-name>
            <remote-alias>Segment_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[SalesData]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[SalesData]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[City_id]</local-name>
            <parent-name>[City_name]</parent-name>
            <remote-alias>City_id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City_name]</local-name>
            <parent-name>[City_name]</parent-name>
            <remote-alias>City_name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Region_id (Region!id)]</local-name>
            <parent-name>[Region_id]</parent-name>
            <remote-alias>Region_id</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Region_id]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Segment_id (Segment!id)]</local-name>
            <parent-name>[Segment_id]</parent-name>
            <remote-alias>Segment_id</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Segment_id]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='City Id' datatype='integer' name='[City_Id]' role='dimension' type='ordinal' />
      <column caption='City id' datatype='integer' name='[City_id]' role='dimension' type='ordinal' />
      <column caption='City name' datatype='string' name='[City_name]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country id (SalesData)' datatype='integer' name='[Country_id (SalesData)]' role='dimension' type='ordinal' />
      <column caption='Country id' datatype='integer' name='[Country_id]' role='dimension' type='ordinal' />
      <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column caption='Region id (Region!id)' datatype='integer' name='[Region_id (Region!id)]' role='dimension' type='ordinal' />
      <column caption='Region id' datatype='integer' name='[Region_id]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column caption='Segment id (Segment!id)' datatype='integer' name='[Segment_id (Segment!id)]' role='dimension' type='ordinal' />
      <column caption='Segment id' datatype='integer' name='[Segment_id]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Country_name' datatype='table' name='[__tableau_internal_object_id__].[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]' role='measure' type='quantitative' />
      <column-instance column='[City_name]' derivation='None' name='[none:City_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcrk:sum:Sales:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcrk:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Segment:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='Country_name, City name' />
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/dell/AppData/Local/Temp/TableauTemp/#TableauTemp_18cgbfh1bfm2hf10olb7r1oqagwd.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/31/2024 10:14:48 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[City_Id]' value='[Extract].[City_Id]' />
            <map key='[City_id]' value='[Extract].[City_id1]' />
            <map key='[City_name]' value='[Extract].[City_name]' />
            <map key='[Country_id (SalesData)]' value='[Extract].[Country_id]' />
            <map key='[Country_id]' value='[Extract].[Country_id1]' />
            <map key='[Country_name]' value='[Extract].[Country_name]' />
            <map key='[Date]' value='[Extract].[Date]' />
            <map key='[Profit]' value='[Extract].[Profit]' />
            <map key='[Region]' value='[Extract].[Region]' />
            <map key='[Region_id (Region!id)]' value='[Extract].[Region_id]' />
            <map key='[Region_id]' value='[Extract].[Region_id1]' />
            <map key='[Sales]' value='[Extract].[Sales]' />
            <map key='[Segment]' value='[Extract].[Segment]' />
            <map key='[Segment_id (Segment!id)]' value='[Extract].[Segment_id]' />
            <map key='[Segment_id]' value='[Extract].[Segment_id1]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country_id1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Country_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country_id1</remote-alias>
              <ordinal>0</ordinal>
              <family>Country_name</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country_name</remote-alias>
              <ordinal>1</ordinal>
              <family>Country_name</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>2</ordinal>
              <family>SalesData</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>666</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Country_id (SalesData)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country_id</remote-alias>
              <ordinal>3</ordinal>
              <family>SalesData</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City_Id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[City_Id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City_Id</remote-alias>
              <ordinal>4</ordinal>
              <family>SalesData</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>65</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region_id1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Region_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region_id1</remote-alias>
              <ordinal>5</ordinal>
              <family>SalesData</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment_id1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Segment_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment_id1</remote-alias>
              <ordinal>6</ordinal>
              <family>SalesData</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>7</ordinal>
              <family>SalesData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>8</ordinal>
              <family>SalesData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>944</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City_id1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[City_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City_id1</remote-alias>
              <ordinal>9</ordinal>
              <family>City_name</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>65</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City_name</remote-alias>
              <ordinal>10</ordinal>
              <family>City_name</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>65</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Region_id (Region!id)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region_id</remote-alias>
              <ordinal>11</ordinal>
              <family>Region_id</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>12</ordinal>
              <family>Region_id</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Segment_id (Segment!id)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment_id</remote-alias>
              <ordinal>13</ordinal>
              <family>Segment_id</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>14</ordinal>
              <family>Segment_id</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country!name_5A76AED1DCE4491D8FE0604D75D0637A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Eastern&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Western&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Southern&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Northern&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Middle&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0s2qu2k1krd9m713cd1181spd353].[pcto:sum:Sales:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0s2qu2k1krd9m713cd1181spd353].[pcdf:sum:Sales:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0s2qu2k1krd9m713cd1181spd353].[pcdf:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0s2qu2k1krd9m713cd1181spd353].[pcrk:sum:Sales:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0s2qu2k1krd9m713cd1181spd353].[pcrk:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0s2qu2k1krd9m713cd1181spd353].[pcto:sum:Sales:qk:4]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0s2qu2k1krd9m713cd1181spd353].[pcto:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0s2qu2k1krd9m713cd1181spd353].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0s2qu2k1krd9m713cd1181spd353].[usr:Calculation2:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0s2qu2k1krd9m713cd1181spd353].[usr:Calculation3:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0s2qu2k1krd9m713cd1181spd353].[usr:Calculation4:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0s2qu2k1krd9m713cd1181spd353].[usr:Calculation5:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0s2qu2k1krd9m713cd1181spd353].[usr:Calculation6:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2013</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2016</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2015</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2014</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City_name:nk]' palette='tableau-20' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Abidjan&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Algiers&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Bangui&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Antananarivo&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Abuja&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Khartoum&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Asmara&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Accra&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Bamako&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Addis Ababa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Azerbaijan&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Country_name' id='Country!name_5A76AED1DCE4491D8FE0604D75D0637A'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[SalesData].[Segment_id]' />
                    <expression op='[Segment_id].[Segment_id]' />
                  </expression>
                </clause>
                <relation join='left' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[SalesData].[Region_id]' />
                      <expression op='[Region_id].[Region_id]' />
                    </expression>
                  </clause>
                  <relation join='left' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[SalesData].[City_Id]' />
                        <expression op='[City_name].[City_id]' />
                      </expression>
                    </clause>
                    <relation join='left' type='join'>
                      <clause type='join'>
                        <expression op='='>
                          <expression op='[Country_name].[Country_id]' />
                          <expression op='[SalesData].[Country_id]' />
                        </expression>
                      </clause>
                      <relation connection='excel-direct.13sszbx06fs3iz19zq0550vw0mwt' name='Country_name' table='[Country_name$]' type='table'>
                        <columns gridOrigin='A1:B53:no:A1:B53:0' header='yes' outcome='2'>
                          <column datatype='integer' name='Country_id' ordinal='0' />
                          <column datatype='string' name='Country_name' ordinal='1' />
                        </columns>
                      </relation>
                      <relation connection='excel-direct.13sszbx06fs3iz19zq0550vw0mwt' name='SalesData' table='[SalesData$]' type='table'>
                        <columns gridOrigin='A1:G1057:no:A1:G1057:0' header='yes' outcome='2'>
                          <column datatype='date' name='Date' ordinal='0' />
                          <column datatype='integer' name='Country_id' ordinal='1' />
                          <column datatype='integer' name='City_Id' ordinal='2' />
                          <column datatype='integer' name='Region_id' ordinal='3' />
                          <column datatype='integer' name='Segment_id' ordinal='4' />
                          <column datatype='real' name='Sales' ordinal='5' />
                          <column datatype='real' name='Profit' ordinal='6' />
                        </columns>
                      </relation>
                    </relation>
                    <relation connection='excel-direct.13sszbx06fs3iz19zq0550vw0mwt' name='City_name' table='[City_name$]' type='table'>
                      <columns gridOrigin='A1:B66:no:A1:B66:0' header='yes' outcome='2'>
                        <column datatype='integer' name='City_id' ordinal='0' />
                        <column datatype='string' name='City_name' ordinal='1' />
                      </columns>
                    </relation>
                  </relation>
                  <relation connection='excel-direct.13sszbx06fs3iz19zq0550vw0mwt' name='Region_id' table='[Region_id$]' type='table'>
                    <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='2'>
                      <column datatype='integer' name='Region_id' ordinal='0' />
                      <column datatype='string' name='Region' ordinal='1' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='excel-direct.13sszbx06fs3iz19zq0550vw0mwt' name='Segment_id' table='[Segment_id$]' type='table'>
                  <columns gridOrigin='A1:B4:no:A1:B4:0' header='yes' outcome='6'>
                    <column datatype='integer' name='Segment_id' ordinal='0' />
                    <column datatype='string' name='Segment' ordinal='1' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='1. Specify the year in which sales are highest, indicating the pace of sales by years.'>
      <layout-options>
        <title>
          <formatted-text>
            <run>1. Specify the year in which sales are highest, indicating the pace of sales by years.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mobile Data' name='federated.0s2qu2k1krd9m713cd1181spd353' />
          </datasources>
          <datasource-dependencies datasource='federated.0s2qu2k1krd9m713cd1181spd353'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <computed-sort column='[federated.0s2qu2k1krd9m713cd1181spd353].[yr:Date:ok]' direction='DESC' using='[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk] + [federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk])</rows>
        <cols>[federated.0s2qu2k1krd9m713cd1181spd353].[yr:Date:ok]</cols>
      </table>
      <simple-id uuid='{6199EF69-1E74-478B-B4D8-EEDAB8866815}' />
    </worksheet>
    <worksheet name='2. Show proportion of each segment in total sales.'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2. Show proportion of each segment in total sales.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mobile Data' name='federated.0s2qu2k1krd9m713cd1181spd353' />
          </datasources>
          <datasource-dependencies datasource='federated.0s2qu2k1krd9m713cd1181spd353'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0s2qu2k1krd9m713cd1181spd353].[pcto:sum:Sales:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Segment:nk]' />
              <wedge-size column='[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]' />
              <text column='[federated.0s2qu2k1krd9m713cd1181spd353].[pcto:sum:Sales:qk]' />
              <text column='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Segment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4EB73AD8-B9BB-4B6A-ADA4-C36F63C4374E}' />
    </worksheet>
    <worksheet name='3. Show segments’ proportions in total sales for each region.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>3. Show segments’ proportions in total sales for each region.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mobile Data' name='federated.0s2qu2k1krd9m713cd1181spd353' />
          </datasources>
          <datasource-dependencies datasource='federated.0s2qu2k1krd9m713cd1181spd353'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Region:nk]' />
              <text column='[federated.0s2qu2k1krd9m713cd1181spd353].[pcto:sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0s2qu2k1krd9m713cd1181spd353].[none:Region:nk] * [federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk])</rows>
        <cols>[federated.0s2qu2k1krd9m713cd1181spd353].[none:Segment:nk]</cols>
      </table>
      <simple-id uuid='{F1E9910B-295D-40C5-BF99-290600F00B1C}' />
    </worksheet>
    <worksheet name='3. Show segments’ proportions in total sales for each region.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>3. Show segments’ proportions in total sales for each region.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mobile Data' name='federated.0s2qu2k1krd9m713cd1181spd353' />
          </datasources>
          <datasource-dependencies datasource='federated.0s2qu2k1krd9m713cd1181spd353'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Segment:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Region:nk]' />
              <text column='[federated.0s2qu2k1krd9m713cd1181spd353].[pcto:sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]</rows>
        <cols>([federated.0s2qu2k1krd9m713cd1181spd353].[none:Region:nk] / [federated.0s2qu2k1krd9m713cd1181spd353].[none:Segment:nk])</cols>
      </table>
      <simple-id uuid='{41148D27-B01A-4C32-A91F-77BF5C1FCDDA}' />
    </worksheet>
    <worksheet name='4. Indicate the highest selling segment; Find the top 5 best-selling countries in that segment and rankthem according to their sales.'>
      <layout-options>
        <title>
          <formatted-text>
            <run>4. Indicate the highest selling segment; Find the top 5 best-selling countries in that segment and rank them according to their sales.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mobile Data' name='federated.0s2qu2k1krd9m713cd1181spd353' />
          </datasources>
          <datasource-dependencies datasource='federated.0s2qu2k1krd9m713cd1181spd353'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Country_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Segment:nk]'>
            <groupfilter count='1' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Segment:nk]' direction='DESC' measure-to-sort-by='[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]' shelf='columns' />
            <shelf-sort-v2 dimension-to-sort='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Country_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0s2qu2k1krd9m713cd1181spd353].[none:Segment:nk]</column>
            <column>[federated.0s2qu2k1krd9m713cd1181spd353].[none:Country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]</rows>
        <cols>([federated.0s2qu2k1krd9m713cd1181spd353].[none:Segment:nk] / [federated.0s2qu2k1krd9m713cd1181spd353].[none:Country_name:nk])</cols>
      </table>
      <simple-id uuid='{BC1288E9-8C30-44D8-8664-1AC8CC698C24}' />
    </worksheet>
    <worksheet name='5. Use the treemap to see which countries are selling the most and show their shares of sales.'>
      <layout-options>
        <title>
          <formatted-text>
            <run>5. Use the treemap to see which countries are selling the most and show their shares of sales.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mobile Data' name='federated.0s2qu2k1krd9m713cd1181spd353' />
          </datasources>
          <datasource-dependencies datasource='federated.0s2qu2k1krd9m713cd1181spd353'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]' />
              <size column='[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]' />
              <text column='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Country_name:nk]' />
              <text column='[federated.0s2qu2k1krd9m713cd1181spd353].[pcto:sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7784ADE4-C235-4B50-8E18-44095A08EECF}' />
    </worksheet>
    <worksheet name='6. Show the dynamics of total sales by years for the 5 best-selling countries. Has sales increased for these5 countries?'>
      <layout-options>
        <title>
          <formatted-text>
            <run>6. Show the dynamics of total sales by years for the 5 best-selling countries. Has sales increased for these 5 countries?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mobile Data' name='federated.0s2qu2k1krd9m713cd1181spd353' />
          </datasources>
          <datasource-dependencies datasource='federated.0s2qu2k1krd9m713cd1181spd353'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Country_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Country_name:nk]' direction='DESC' measure-to-sort-by='[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0s2qu2k1krd9m713cd1181spd353].[none:Country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Country_name:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk] + [federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk])</rows>
        <cols>([federated.0s2qu2k1krd9m713cd1181spd353].[none:Country_name:nk] / [federated.0s2qu2k1krd9m713cd1181spd353].[yr:Date:ok])</cols>
      </table>
      <simple-id uuid='{5081662E-C36A-4366-8520-0478A7AA7A0E}' />
    </worksheet>
    <worksheet name='7. Make a graph showing 10 best-selling cities in 2016 and their sales for the same year. Rank the citiesaccording to their sales.'>
      <layout-options>
        <title>
          <formatted-text>
            <run>7. Make a graph showing 10 best-selling cities in 2016 and their sales for the same year. Rank the cities according to their sales.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Mobile Data' name='federated.0s2qu2k1krd9m713cd1181spd353' />
          </datasources>
          <datasource-dependencies datasource='federated.0s2qu2k1krd9m713cd1181spd353'>
            <column caption='City Id' datatype='integer' name='[City_Id]' role='dimension' type='ordinal' />
            <column caption='City name' datatype='string' name='[City_name]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City_name]' derivation='None' name='[none:City_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s2qu2k1krd9m713cd1181spd353].[none:City_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([City_Id])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0s2qu2k1krd9m713cd1181spd353].[yr:Date:ok]'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2016' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0s2qu2k1krd9m713cd1181spd353].[none:City_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0s2qu2k1krd9m713cd1181spd353].[yr:Date:ok]</column>
            <column>[federated.0s2qu2k1krd9m713cd1181spd353].[none:City_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0s2qu2k1krd9m713cd1181spd353].[none:City_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]</rows>
        <cols>([federated.0s2qu2k1krd9m713cd1181spd353].[yr:Date:ok] / [federated.0s2qu2k1krd9m713cd1181spd353].[none:City_name:nk])</cols>
      </table>
      <simple-id uuid='{D8DB92F8-7DCD-4596-A2BF-864D46653E52}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='1. Specify the year in which sales are highest, indicating the pace of sales by years.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s2qu2k1krd9m713cd1181spd353].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D6BA9764-70D0-445F-9382-5D94F2455D23}' />
    </window>
    <window class='worksheet' name='2. Show proportion of each segment in total sales.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0s2qu2k1krd9m713cd1181spd353].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E5EFD721-352C-417F-87A9-F27F6274ACD5}' />
    </window>
    <window class='worksheet' name='3. Show segments’ proportions in total sales for each region.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0s2qu2k1krd9m713cd1181spd353].[none:Region:nk]</field>
            <field>[federated.0s2qu2k1krd9m713cd1181spd353].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{147EACDE-C68D-4556-A3EB-67AE97DCEB14}' />
    </window>
    <window class='worksheet' name='3. Show segments’ proportions in total sales for each region.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0s2qu2k1krd9m713cd1181spd353].[none:Region:nk]</field>
            <field>[federated.0s2qu2k1krd9m713cd1181spd353].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3DB5173F-CC52-4C7E-B1D0-92FB7120B995}' />
    </window>
    <window class='worksheet' name='4. Indicate the highest selling segment; Find the top 5 best-selling countries in that segment and rankthem according to their sales.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s2qu2k1krd9m713cd1181spd353].[none:Country_name:nk]</field>
            <field>[federated.0s2qu2k1krd9m713cd1181spd353].[none:Region:nk]</field>
            <field>[federated.0s2qu2k1krd9m713cd1181spd353].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2F6DF8A-1AE8-46F1-9437-1526EE157A68}' />
    </window>
    <window class='worksheet' name='5. Use the treemap to see which countries are selling the most and show their shares of sales.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s2qu2k1krd9m713cd1181spd353].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6AE3C110-25FA-4B80-AF64-0A795A945E20}' />
    </window>
    <window class='worksheet' name='6. Show the dynamics of total sales by years for the 5 best-selling countries. Has sales increased for these5 countries?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0s2qu2k1krd9m713cd1181spd353].[none:Country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0s2qu2k1krd9m713cd1181spd353].[none:Country_name:nk]</field>
            <field>[federated.0s2qu2k1krd9m713cd1181spd353].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE00E5C7-87B5-475D-9D95-53B9B29353D8}' />
    </window>
    <window class='worksheet' maximized='true' name='7. Make a graph showing 10 best-selling cities in 2016 and their sales for the same year. Rank the citiesaccording to their sales.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0s2qu2k1krd9m713cd1181spd353].[none:City_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s2qu2k1krd9m713cd1181spd353].[none:City_name:nk]</field>
            <field>[federated.0s2qu2k1krd9m713cd1181spd353].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F8DCBCCA-A9BD-4F40-93E6-6A809BA89A68}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1. Specify the year in which sales are highest, indicating the pace of sales by years.' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2. Show proportion of each segment in total sales.' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3. Show segments’ proportions in total sales for each region.1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3. Show segments’ proportions in total sales for each region.2' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='4. Indicate the highest selling segment; Find the top 5 best-selling countries in that segment and rankthem according to their sales.' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARiUlEQVR4nO3dW3AU153H8W/P/ab7SEIgEMICgYSNwZib2ZBsCHY2NiZOcCpZJ5tskt11
      Kk9blcpb9mmrdl+8lapsJVWxs+VUOU5iEtvZYFaxscFBgG2BFLC4WCAkdEXXkebe05d9EJEj
      E8uSrWYkn//nRZrb+Z+emd+c09M93Zpt2zZCKEjTNM2V704IkU8SAKE0CYBQ2qIKwNDQUL67
      IBSzqAKg63q+uyAUs6gCIGanpyZJZs18d+NjRQIwT7ap8/aJI/z4xz/hd83tDlQwSMRT3PLl
      tJ3jTNPzdMTeDYCZjdH066f58U+fYTSWmHMFM5cllZbRFiQA85Ye7eZIWz/f+NY/smFZGLDR
      M2lS6QymZWMZOVKpFOlMBtOyyGbTpFMpslmdVCqFbpjYtkUmnSKdyWJZFtlsdupyViend/KT
      /3qOiXR2RgiM+BAdmTIaKn3T1zUf+jnxVbv45mP7KQ65Sd9sw7Zt9FwObv61bZNsJjPVj1yO
      /guv8cz/NpPRcxi6Ti6nk9V1srqBjUVOz2HbNrZlks1OPU7PmdimQSqVJJXJTtW4eVvmZv8z
      ujF1fSZNKpXBWgKbmDz57sBS4y8op8Y3yo9+8gyf/fzn0Ycu8OShE5CNU/upA7jPH+HCpI/c
      eD+fOvhPHHn2h9xRU8n5a24ay5MMFO/hC5tMjp66TDqjc9/evbzywm9YWVvFmY4UX90X5fLV
      Vpper+PhvfcRuPkKDfd3U1y1Gt9f9KV1IM5XDtTgC/o4/9pzvHzuBpgme/cf4PVTLXz3K/v5
      2TPP8M2H7+Hf/+MId9R56M+tZGOoi3PtSV5dWYzefJjOkmq2b6jitdOTfO/bW3jqmXN87VsH
      MHrb+NEvX2ZVSYBBfx3/smcFh461MdgzxBe/+02O/ug/8VSu5mpPksbaIO8kyvnXgxv51Qt/
      xM5MUrvvG9y/sQItL6/U3MgIME/uYBEHv/09vvPlPfzih/9NW9sxLg1MYnkDaPFergxX8PXv
      /AONVRFsoGD5eh59bD8VkZV8+WsH8I7HOPvG63SPTuJyB3Fh4C+s5qGDX2J1BFbv3MHG+u08
      /Jl33/xg0HWpg9oN62b0pcCyGNOnpkRXuvv5/Fcf55FddbRf6L6l36UrGvnSVw5QlIX67VvY
      et8+/m7nelweL3seeoxdO/exNtjPieNvsWbXNsKeqbdtWe1dHPziI/iNYQa6LjE4Gmeyv5vB
      hEGwZAX7H9lPbUk1n3v0C5S5c1w5d5y3+yYxfWF8hs5iHwMkAPOUHLvOr5/+GS/+oZnIqtXU
      N2ynxAfR8gqKSqqo9Pdw6BcvcKkv9r5trG9spCAQoaIiSsDnfs+txWiZdppebyFrTF1jTA5w
      JVPB2grfjHt+7qFP8NLP/4dfPPscxeEALx16msNvXqW+oZbQeCfPPn+YzsH4LfVDhVFuXGrm
      1daraFqAYMCDpmns27OOF94cZkvtX3xqT/9jEx8ZxV9azfLygvf9VF9efw/RgJvyigoKAp5F
      /ekPoC2mfYF6e3uprq7OdzdmZVsmickJ0rpJqLCYiN9NPDZOOmcRLorQcfJlWq8NEJsM8Pf/
      /BhBK0Mk5CeRyBEJe0ikDMJBD5OxCXK2i8LCAnRdJxwOkkqkCBVESE+OkbG8lBQV4NKg9/zr
      tE1EeXB3w3s7Q2JinFQOigvDJOJx8AYpLgyTTUyQyNr4/D4Kwz4SKYNIyEsyqRMK+0lMxDA9
      QQKahScUwetKcPxXz9IZuofHHtyMV9OwDJ2UbhEOeEimswS9GqOxFH6fl0AkgpFJEQgGSaem
      2kymMoTDAZKxGOmcRaS4hKBv8YZA0zRNArCgLCZGbjAWz1JQWkFZUWhBXvyOs8dwrdzBHeWB
      BWjt/ej0d9+gePkKQl41JgYSAKE02RtUKE8CIJQmAVgEbMsgPhEjNjGBbljz+urQMgwMy/oI
      xW2yWXW3CksAFoF0/AbHX36VMy1v8kpzK7OtlunxQTquj01fHrtyhd5kctb2+3quY9iQmxzk
      nd7RmTdaOidOt3yk/i9lsiV4MdA8rNl4Lw31K2g+9Sa2ZdN18TRv92TYet9OgqleTrZcpKxu
      M3ev9OL3+7D1SU68dpz+gSybD6yg9eRxRowwO3fcyUhXJ33Xu0gXrmZTVOelP5ykdM0m9m6p
      IRCIkBjp5uTpP+EpW8PubWvzvfR5JQFYDOwcHW0nuX6tCG9pNVbsMsfO9BItNjnWfIE7Cwfw
      RWtYVVlCLtVF/xDErl5kzY7PsK73KikmGcrkiA++w9l3IniGRtmwYw/drecI1m5n2zad9Zu2
      Yt14m764h7Koht/vZ6TrDB2ra/O99HklAVgMNC+rN2xCywzjrVqGneujvO4u9ty9Aj1r4nXX
      UDh6g5bTrezeWgLY5GwXYb+XhK5jmwYNd22iZKsXw2XRkbYojfgZCvhA09Cz2RnTqoHuLpZv
      3EZl92nSei5/y70IyDrAIuD2BohWlHPnvTsIJgdJFNazytXD0VeO0TueJjnaQ9v5K5SvWkXA
      X0y0OETD+lU0N/2eS8NpQsFyrref57UTLUxkNMrKigCNorJSPEA0DE3H3kB3F1JeGCC6rJKO
      llPEtGJKwj6WVZbn+ynIG9kQJpQlG8KE8m5ZBxgaGsrbb3Pj8Ti9vb15qS3UJFMgoSyZAgnl
      SQCE0iQAQmkSAKE0CYBQmgRAKG1R7wt0uP1Fjl15xbH2v//pHxCNqLsbgFjkAZjIxOib6HGs
      fcMyHGtbLA0yBRJKkwAIpUkAhNIkAEJpEgChNAmAUJoEQCht4bcD2BYjA10k3VFqKgvJxEe4
      dOkqWc3HHfXr0fQMZWXFZMZvkPSXUxZ67+HBhbh9FnwEyI730Ts5Rm/X1MGbRof7MT1FrFyx
      nJAPOjt7sM0MLefe4ZZD4wtxmy34COAvXcndpQHeeisFTJ3ZMJ0rImdq+LxurHSMMydPUrF+
      BxGfG9u2sW4e2s+2bQzj3a2ztv0RDvk3B6Zpzqgn1OP4rhDly9eQHhhnoPsCCWM92BY5Q8c0
      p36JOesvMhfNjzXFx9WCB8DIJhmbGGVyMsNYLEpqPEa4qBRNn0A3DFyhUrZtWcupEy3ESnZQ
      HPROz8M0TcPjebdLmsvZdXS32z2jnlDPgr/Dcolxrl4ZJRBI0js4RnF5lLH+bvTAchrWVFFb
      W43mDnDv5nVk5KTPIs8W/OMvWFbNzl0zj+yweVvF9P/RaCkA3sJKqha6uBDzJNsBhNIkAEJp
      EgChNAmAUJoEQChNAiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAil
      SQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAmAUJoEQChNAiCU
      JgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmlzCsCTTz7J
      U089NacGcxM3ONn8fxx94xoAsb7L/O63h3jh8FHGMllaWy9g2zaXW45zPaZ/+J4LsQDmFIBM
      JkMmk5lTg+5QMXdv3USha6rpgb5B7t13gPvuWkZ/zwiGYZAe6mDEU0N1kffD91yIBeCZz52b
      mpro7Ozk8ccff9/7uLx+QngAHbCwLT/hsActU4QZT2KMdvLbyzqfeeQgLk3DsiwMwwDANE2y
      2ex0W6ZpfqiFmitd12fUE+qZVwBisRiDg4PEYjFGRkaoq6v7gEe4cLkzTExkcU8M4/ZX4Slb
      wxe3FXKqrZ2yHY14XC58Ph8Abrcbv98//Wi32z3vBZoPn883o55Qz4daCT579ixPPPHEX70t
      PnCZ373wKu3tzRx/4xIVNTW0//El/tSdYdXKUkKhIP6SGjZEs3QOpbA/UveF+GjmNALcf//9
      APj9fhobGykvL6eoqOiv3regqp79B+pnXPfAQ7XT/zc2rgVg2bp7WPahuizEwplTANauXXvL
      dZWVlQvemcXm+fZzmLYzY9SySAG7V69xpG0xd/NaB7D//GawbdA0NE1zok+LRktfD4ZlOdJ2
      fbRCArAIzCsAIx2tjIcraT/yPHrdJzn4yY2yJU0safN6/15ru8T1y6cZrliD3d7BpFO9EuI2
      mVcA1t1bz8VzQ2xbu5LI+hoiTvVKiNtkXlOgoup1bL9HpzIaJRhy4+y39EI4b14jwNWTr/Dy
      0ZN0jw9x5uW3SDrVKyFuk3kFwDJd+APQfeEiE26PjABiyZvXFKhu1x522l4GYgZ7H9hJ0Kle
      CXGbzCkAtp2krbl1asrjL2RZJSRGR8lVFSL7c4qlbI4jgE0mmWRSz5A1bDweN4anVPbjEUve
      nNYBNC3CzvvvZ5kxwfWuQQoqihkfT/Lx3g4sVDCvleBIUYSq6kJaTr/B5YvdyJ70Yqmb10rw
      2k8+zB22zciNQQJFFYSd6pUQt8mcRgDbtjnfdhbd1uhvb+bFw3+gc2hSpkBiyZvjFOgGb57s
      xmXFOPJKG7t230nbsRZSzvZNCMfNMQABjOQ1mp77JVrdbtZVR9EsU74FEkveHNcBinjk0c/S
      MZhm1513YqQHuPdvtxJytm9COG5OAdA0jfKaDZTX3LwitIrGMgd7JcRtIr9nEUqTAAilzWs7
      gLh9bMsCh36PjKahOXzMpaVCArBIJV87xthPn3Skbf+G9VT+2w8caXupkSmQUJoEQChNAiCU
      JgEQSpOVYHELKzWGNd7lWPvu0lq0YIlj7c+HBEDcwrx+isyR7zvWfuDBJ/Cu3edY+/MhUyCh
      NBkBxKLzm+MXGBxz5qhT4aCXrz9w9/RlCYBYdE5f6OOdnlFH2i4tCM4IgEyBhNIkAEJpEgCh
      NAmAUJoEQChNAiCUJgEQSpMACKVJAITSHN8SbNs21s3ftrpcU3nTtD+fc/jjf65hsbg5PgIM
      XWvjt786xOGmo/SOTdLSch7bhvZTr9IzkXO6vBCzcnwEyFga2z/9EKsqQ4DOYCck+t4mXthA
      Q5GcX0bkl+MB8Fs5mk800eoPsXnXTozRTl68nGXvI4/i0jQsy8IwDABM0ySbffesA6ZpOto3
      Xddn1LudLMuatXbu5nOSj9pmztmR2cgZWLPUt506HAxgY89YdscDECxbzef2byHW8za9gyN4
      ytbwpd3l/PGtVsr+ZjNelwufzweA2+3G7/dPP9bt8LFrfD7fjHq3k8vlmrV2zuPcS/OBtb1e
      nPzo8Xg9eGepr7mcm5lraDOW3fF1gFxymGNNv6etK8ma1cspKirAE17GphofXcMpOcK0yCvH
      R4DoqgYeWNUwfbl0XS0AZas3IsfXFfkm2wGE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAI
      pUkAhNIkAEJpEgChNAmAUJoEQChNAiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIg
      lCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAmA
      UJoEQCjN8QBYuRRXL56n4/oQFhbj4xOATXZiiPG0syfCFuKDOB6A3o5zDKddjHWdo2s4yZUr
      3dhmljNtl3BpTlcXYnYOnyfYJhE3qb+nAdd4mOujI1iZSc69eZqStVsp9Dt7JnghPshtWAfQ
      0DTQNA3btsDUicWTuN2y+iHyz+F3oUYgaNF1pYeuq1cJFEdxhaN84tOf4saFM8SzBrazHRBi
      Vo5/DNfU340r3gul9dRVRaipWYHmDrJ9Sx2TKcPp8kLMyuF1AHD7I9y1ddf05YqKMgB8RVVU
      O11ciA9wSwBGRkbI5XL56AuJRIKBgYHpy6V2lG3R+xyrNzkWx06+/+31gTCmbTlSuxxtxrK+
      V9bvI719myO1s+XlWLPUNvUwxsoHHakN4MkEcc9Sf0NVgPJQiSO1Q37PjOdds217xjTcsize
      c9Vt09/fz/Lly/NS+8/L7Xbn55upXC6H1+tVrnY+63s8Hu2WEcDlyt+3M5qm5e0NqGkalmXl
      rb5pmkrWznf9/wdWaowNZuvuSQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='5. Use the treemap to see which countries are selling the most and show their shares of sales.' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='6. Show the dynamics of total sales by years for the 5 best-selling countries. Has sales increased for these5 countries?' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='7. Make a graph showing 10 best-selling cities in 2016 and their sales for the same year. Rank the citiesaccording to their sales.' width='192'>
      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
      Kg3TrhghbGXf7NDuFg4cPkp6dY664kFtpBkZu0zPviN0h7yYpolp3iuCaZprs0Ibhm7XEB5g
      fSXj63TdaEqm+YhMxdCbcsJlmibGOpnNWremaT1i3TYp01p/3WqW9dSv5PYVAJPI/DQlJcT+
      3f1El/K0hwNUSmVMQFUUVPXeMJWv/l1tzmnIVzO+TlWbcxXjUZmKsvnPcysy1/v6M2fyiOf5
      DMu1rQB6OceNkTHauvooFau0tbkZ2HOEXPQu87EOdvW1oSoKlmWhKAqadu+6gqo059WYr2R8
      ndHE0q2XyRZkNm1jVNiCzEesW+XpK2BbATRfG6fPvI1hgury4PN50BSNzvaj1E15s0k8n2y9
      Q0yo9WHTpbjxrlNcIbaavDQLR5MCCEeTAghHkwIIR5MCCEeTAghHkwIIR5MCCEeTAghHkwII
      R5MCCEeTAghHkwIIR5MCCEeTAghHkwIIR5MCCEeTAghHkwIIR5MCCEeTAghHkwIIR5MCCEeT
      AghHs68ARoP5yVt8fP4mDSAWWyKbrRKbu81ismRbjBB2sq8Aikpn/066/G5MoF6vUMlGmU8r
      9LX7bYsRwk72zditaoRCQdYmXq7m+eTiNMfe+X08moJhGJimiWVZ6LpOrXbvnk7rTXn9rEzD
      XMv4umZlGqaxbqbSqONpRqZhoK/7POtNSATjOVu3LtPkaWffbN49wlpaOfPOGWbnpyh2niDo
      1dA0DcuycLlceL1eAMxGc6YqVzV1LePrFHdz7lajqdq6mbibsfnfm6VZWyfT7W7Oxqg9Yt26
      t2LdPsOM1LYVwKyXuXrpU6KZGtFSnX37tuP3hjm6TyeWLRLolXsLi+ePbQVQPX5ePf29hzyy
      nSG7QoSwmbwNKhxNCiAcTQogHE0KIBxNCiAcTQogHE0KIBxNCiAcTQogHE0KIBxNCiAcTQog
      HE0KIBxNCiAcTQogHE0KIBxNCiAcTQogHE0KIBxNCiAczcYCWNTKOSKrMWoNk3q9hq6bGLUK
      5bpuX4wQNrJvWpRGhZvXboBLYyFRZkd7A19LP/GlO7TvOoLf07wpiIR4WrbtAerlKi3d2zl1
      6lu0VPLU9RpTY9fRW3fS2+azK0YIW9lWgIdPemWhN+TwRzy/bCuA299CNbHMpcufU/O34XF5
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
