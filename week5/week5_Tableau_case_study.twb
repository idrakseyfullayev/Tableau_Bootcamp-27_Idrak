<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (sample-superstore-subset-excel)' inline='true' name='federated.1reb8q41q7a2p718p1ttw1nj3jwv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='sample-superstore-subset-excel' name='excel-direct.18275nl1ku0sc91522m1g1s7zqsf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/dell/Desktop/Tableau/week5/sample-superstore-subset-excel.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.18275nl1ku0sc91522m1g1s7zqsf' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X9427:no:A1:X9427:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order Priority' ordinal='1' />
            <column datatype='real' name='Discount' ordinal='2' />
            <column datatype='real' name='Unit Price' ordinal='3' />
            <column datatype='real' name='Shipping Cost' ordinal='4' />
            <column datatype='integer' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Ship Mode' ordinal='7' />
            <column datatype='string' name='Customer Segment' ordinal='8' />
            <column datatype='string' name='Product Category' ordinal='9' />
            <column datatype='string' name='Product Sub-Category' ordinal='10' />
            <column datatype='string' name='Product Container' ordinal='11' />
            <column datatype='string' name='Product Name' ordinal='12' />
            <column datatype='real' name='Product Base Margin' ordinal='13' />
            <column datatype='string' name='Region' ordinal='14' />
            <column datatype='string' name='State or Province' ordinal='15' />
            <column datatype='string' name='City' ordinal='16' />
            <column datatype='integer' name='Postal Code' ordinal='17' />
            <column datatype='date' name='Order Date' ordinal='18' />
            <column datatype='date' name='Ship Date' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
            <column datatype='integer' name='Quantity ordered new' ordinal='21' />
            <column datatype='real' name='Sales' ordinal='22' />
            <column datatype='integer' name='Order ID' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.18275nl1ku0sc91522m1g1s7zqsf' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X9427:no:A1:X9427:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order Priority' ordinal='1' />
            <column datatype='real' name='Discount' ordinal='2' />
            <column datatype='real' name='Unit Price' ordinal='3' />
            <column datatype='real' name='Shipping Cost' ordinal='4' />
            <column datatype='integer' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Ship Mode' ordinal='7' />
            <column datatype='string' name='Customer Segment' ordinal='8' />
            <column datatype='string' name='Product Category' ordinal='9' />
            <column datatype='string' name='Product Sub-Category' ordinal='10' />
            <column datatype='string' name='Product Container' ordinal='11' />
            <column datatype='string' name='Product Name' ordinal='12' />
            <column datatype='real' name='Product Base Margin' ordinal='13' />
            <column datatype='string' name='Region' ordinal='14' />
            <column datatype='string' name='State or Province' ordinal='15' />
            <column datatype='string' name='City' ordinal='16' />
            <column datatype='integer' name='Postal Code' ordinal='17' />
            <column datatype='date' name='Order Date' ordinal='18' />
            <column datatype='date' name='Ship Date' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
            <column datatype='integer' name='Quantity ordered new' ordinal='21' />
            <column datatype='real' name='Sales' ordinal='22' />
            <column datatype='integer' name='Order ID' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X9427:no:A1:X9427:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit Price]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Unit Price</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Segment</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Category</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Sub-Category</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Container</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Container]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Container</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Base Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Product Base Margin]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Base Margin</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State or Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State or Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State or Province</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>18</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>19</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity ordered new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity ordered new]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity ordered new</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' name='[Customer ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]' role='measure' type='quantitative' />
      <column-instance column='[City Set]' derivation='InOut' name='[io:City Set:nk]' pivot='key' type='nominal' />
      <group caption='City Set' name='[City Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[City]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/dell/AppData/Local/Temp/TableauTemp/#TableauTemp_1wivvc919j23bg1efl7b411apyag.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/14/2024 07:03:07 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9426</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Priority</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order Priority]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Priority</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unit Price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Unit Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unit Price</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>941</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shipping Cost</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Shipping Cost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shipping Cost</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>793</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2378</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2378</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Segment</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Category</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Sub-Category</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Container</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Container]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Container</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1509</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Base Margin</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Product Base Margin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Base Margin</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State or Province</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State or Province]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State or Province</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1671</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1956</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1708</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1716</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6447</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity ordered new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity ordered new]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity ordered new</remote-alias>
              <ordinal>21</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>110</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>22</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5734</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>23</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4015</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_03FF9C27AE61402F96A0DF4E59DEA8D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:City Set:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Azerbaijan&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_03FF9C27AE61402F96A0DF4E59DEA8D9'>
            <properties context=''>
              <relation connection='excel-direct.18275nl1ku0sc91522m1g1s7zqsf' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:X9427:no:A1:X9427:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order Priority' ordinal='1' />
                  <column datatype='real' name='Discount' ordinal='2' />
                  <column datatype='real' name='Unit Price' ordinal='3' />
                  <column datatype='real' name='Shipping Cost' ordinal='4' />
                  <column datatype='integer' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Ship Mode' ordinal='7' />
                  <column datatype='string' name='Customer Segment' ordinal='8' />
                  <column datatype='string' name='Product Category' ordinal='9' />
                  <column datatype='string' name='Product Sub-Category' ordinal='10' />
                  <column datatype='string' name='Product Container' ordinal='11' />
                  <column datatype='string' name='Product Name' ordinal='12' />
                  <column datatype='real' name='Product Base Margin' ordinal='13' />
                  <column datatype='string' name='Region' ordinal='14' />
                  <column datatype='string' name='State or Province' ordinal='15' />
                  <column datatype='string' name='City' ordinal='16' />
                  <column datatype='integer' name='Postal Code' ordinal='17' />
                  <column datatype='date' name='Order Date' ordinal='18' />
                  <column datatype='date' name='Ship Date' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                  <column datatype='integer' name='Quantity ordered new' ordinal='21' />
                  <column datatype='real' name='Sales' ordinal='22' />
                  <column datatype='integer' name='Order ID' ordinal='23' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Tourist satisfaction results (1)' inline='true' name='federated.1vihksn1b5e2pi1dfevof00sgva9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tourist satisfaction results (1)' name='excel-direct.0es0eix0504a9d16dh05c1m8mbz4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/dell/Desktop/Tableau/week5/Tourist satisfaction results (1).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Survey results].[SURVEY_Participant_ID]' />
              <expression op='[Survey Participants].[SURVEY_Participant_ID]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Survey results].[QUESTION_ID]' />
                <expression op='[Questions].[Question_Id]' />
              </expression>
            </clause>
            <relation connection='excel-direct.0es0eix0504a9d16dh05c1m8mbz4' name='Survey results' table='[&apos;Survey results$&apos;]' type='table'>
              <columns gridOrigin='A1:C5433:no:A1:C5433:0' header='yes' outcome='2'>
                <column datatype='integer' name='SURVEY_Participant_ID' ordinal='0' />
                <column datatype='integer' name='QUESTION_ID' ordinal='1' />
                <column datatype='integer' name='RATING' ordinal='2' />
              </columns>
            </relation>
            <relation connection='excel-direct.0es0eix0504a9d16dh05c1m8mbz4' name='Questions' table='[Questions$]' type='table'>
              <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                <column datatype='integer' name='Question_Id' ordinal='0' />
                <column datatype='string' name='Question' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0es0eix0504a9d16dh05c1m8mbz4' name='Survey Participants' table='[&apos;Survey Participants$&apos;]' type='table'>
            <columns gridOrigin='A1:D907:no:A1:D907:0' header='yes' outcome='6'>
              <column datatype='integer' name='SURVEY_Participant_ID' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='string' name='Gender' ordinal='2' />
              <column datatype='date' name='Birth_Date' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Survey results].[SURVEY_Participant_ID]' />
              <expression op='[Survey Participants].[SURVEY_Participant_ID]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Survey results].[QUESTION_ID]' />
                <expression op='[Questions].[Question_Id]' />
              </expression>
            </clause>
            <relation connection='excel-direct.0es0eix0504a9d16dh05c1m8mbz4' name='Survey results' table='[&apos;Survey results$&apos;]' type='table'>
              <columns gridOrigin='A1:C5433:no:A1:C5433:0' header='yes' outcome='2'>
                <column datatype='integer' name='SURVEY_Participant_ID' ordinal='0' />
                <column datatype='integer' name='QUESTION_ID' ordinal='1' />
                <column datatype='integer' name='RATING' ordinal='2' />
              </columns>
            </relation>
            <relation connection='excel-direct.0es0eix0504a9d16dh05c1m8mbz4' name='Questions' table='[Questions$]' type='table'>
              <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                <column datatype='integer' name='Question_Id' ordinal='0' />
                <column datatype='string' name='Question' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0es0eix0504a9d16dh05c1m8mbz4' name='Survey Participants' table='[&apos;Survey Participants$&apos;]' type='table'>
            <columns gridOrigin='A1:D907:no:A1:D907:0' header='yes' outcome='6'>
              <column datatype='integer' name='SURVEY_Participant_ID' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='string' name='Gender' ordinal='2' />
              <column datatype='date' name='Birth_Date' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Birth_Date]' value='[Survey Participants].[Birth_Date]' />
          <map key='[Country]' value='[Survey Participants].[Country]' />
          <map key='[Gender]' value='[Survey Participants].[Gender]' />
          <map key='[QUESTION_ID]' value='[Survey results].[QUESTION_ID]' />
          <map key='[Question]' value='[Questions].[Question]' />
          <map key='[Question_Id]' value='[Questions].[Question_Id]' />
          <map key='[RATING]' value='[Survey results].[RATING]' />
          <map key='[SURVEY_Participant_ID (Survey Participants)]' value='[Survey Participants].[SURVEY_Participant_ID]' />
          <map key='[SURVEY_Participant_ID]' value='[Survey results].[SURVEY_Participant_ID]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Survey results]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C5433:no:A1:C5433:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Questions]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Survey Participants]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D907:no:A1:D907:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SURVEY_Participant_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SURVEY_Participant_ID]</local-name>
            <parent-name>[Survey results]</parent-name>
            <remote-alias>SURVEY_Participant_ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Survey results_01F394B169F6469F96C6D274FEB8F2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QUESTION_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[QUESTION_ID]</local-name>
            <parent-name>[Survey results]</parent-name>
            <remote-alias>QUESTION_ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Survey results_01F394B169F6469F96C6D274FEB8F2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RATING</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RATING]</local-name>
            <parent-name>[Survey results]</parent-name>
            <remote-alias>RATING</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Survey results_01F394B169F6469F96C6D274FEB8F2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Question_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Question_Id]</local-name>
            <parent-name>[Questions]</parent-name>
            <remote-alias>Question_Id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Survey results_01F394B169F6469F96C6D274FEB8F2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Question</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Question]</local-name>
            <parent-name>[Questions]</parent-name>
            <remote-alias>Question</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Survey results_01F394B169F6469F96C6D274FEB8F2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SURVEY_Participant_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SURVEY_Participant_ID (Survey Participants)]</local-name>
            <parent-name>[Survey Participants]</parent-name>
            <remote-alias>SURVEY_Participant_ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Survey results_01F394B169F6469F96C6D274FEB8F2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Survey Participants]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Survey results_01F394B169F6469F96C6D274FEB8F2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[Survey Participants]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Survey results_01F394B169F6469F96C6D274FEB8F2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birth_Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Birth_Date]</local-name>
            <parent-name>[Survey Participants]</parent-name>
            <remote-alias>Birth_Date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Survey results_01F394B169F6469F96C6D274FEB8F2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Calculation_361413899103088641]' peg='0' size='5' />
      </column>
      <column caption='Birth Date' datatype='date' name='[Birth_Date]' role='dimension' type='ordinal' />
      <column caption='Survey_Distinct' datatype='integer' name='[Calculation_361413899069267968]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([SURVEY_Participant_ID])' />
      </column>
      <column caption='Age' datatype='integer' name='[Calculation_361413899103088641]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='//YEAR(NOW()) - YEAR([Birth Date])//&#13;&#10;&#13;&#10;//DATEDIFF(&apos;year&apos;, [Birth Date], NOW())//&#13;&#10;&#13;&#10;DATEDIFF(&apos;year&apos;, [Birth_Date], TODAY())' />
      </column>
      <column caption='IsNull' datatype='boolean' name='[Calculation_361413899124981763]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='ISNULL([RATING])' />
      </column>
      <column caption='Rating_with_words' datatype='string' name='[Calculation_361413899231850500]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [RATING]&#13;&#10;WHEN 1 THEN &apos;Very Dissatisfied&apos;&#13;&#10;WHEN 2 THEN &apos;Dissatisfied&apos;&#13;&#10;WHEN 3 THEN &apos;Neutral&apos;&#13;&#10;WHEN 4 THEN &apos;Satisfied&apos;&#13;&#10;WHEN 5 THEN &apos;Very Satisfied&apos;&#13;&#10;END' />
      </column>
      <column caption='Happy or Sad' datatype='string' name='[Calculation_361413899233570821]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [RATING] &gt; 3 OR  [RATING] = 4 THEN &apos;Happy&apos; &#13;&#10;ELSE &apos;Sad&apos; &#13;&#10;END' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column caption='Question Id' datatype='integer' name='[QUESTION_ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Question]' role='dimension' type='nominal' />
      <column caption='Question Id1' datatype='integer' name='[Question_Id]' role='dimension' type='ordinal' />
      <column caption='Rating' datatype='integer' name='[RATING]' role='measure' type='quantitative' />
      <column caption='SURVEY Participant ID (Survey Participants)' datatype='integer' name='[SURVEY_Participant_ID (Survey Participants)]' role='dimension' type='ordinal' />
      <column caption='SURVEY Participant ID' datatype='integer' name='[SURVEY_Participant_ID]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Survey results' datatype='table' name='[__tableau_internal_object_id__].[Survey results_01F394B169F6469F96C6D274FEB8F2F1]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_361413899233570821]' derivation='None' name='[none:Calculation_361413899233570821:nk]' pivot='key' type='nominal' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[Question]' derivation='None' name='[none:Question:nk]' pivot='key' type='nominal' />
      <column-instance column='[RATING]' derivation='None' name='[none:RATING:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Question,Rating)' hidden='true' name='[Action (Question,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Question]' />
          <groupfilter function='level-members' level='[none:RATING:ok]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/dell/AppData/Local/Temp/TableauTemp/#TableauTemp_0p1f4qa10zmrrg186w34w1exkmu8.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/14/2024 08:37:13 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Birth_Date]' value='[Extract].[Birth_Date]' />
            <map key='[Country]' value='[Extract].[Country]' />
            <map key='[Gender]' value='[Extract].[Gender]' />
            <map key='[QUESTION_ID]' value='[Extract].[QUESTION_ID]' />
            <map key='[Question]' value='[Extract].[Question]' />
            <map key='[Question_Id]' value='[Extract].[Question_Id1]' />
            <map key='[RATING]' value='[Extract].[RATING]' />
            <map key='[SURVEY_Participant_ID (Survey Participants)]' value='[Extract].[SURVEY_Participant_ID]' />
            <map key='[SURVEY_Participant_ID]' value='[Extract].[SURVEY_Participant_ID1]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>SURVEY_Participant_ID1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SURVEY_Participant_ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SURVEY_Participant_ID1</remote-alias>
              <ordinal>0</ordinal>
              <family>Survey results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1116</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Survey results_01F394B169F6469F96C6D274FEB8F2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>QUESTION_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[QUESTION_ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>QUESTION_ID</remote-alias>
              <ordinal>1</ordinal>
              <family>Survey results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Survey results_01F394B169F6469F96C6D274FEB8F2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RATING</remote-name>
              <remote-type>20</remote-type>
              <local-name>[RATING]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RATING</remote-alias>
              <ordinal>2</ordinal>
              <family>Survey results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Survey results_01F394B169F6469F96C6D274FEB8F2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Question_Id1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Question_Id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Question_Id1</remote-alias>
              <ordinal>3</ordinal>
              <family>Questions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Survey results_01F394B169F6469F96C6D274FEB8F2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Question</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Question]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Question</remote-alias>
              <ordinal>4</ordinal>
              <family>Questions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Survey results_01F394B169F6469F96C6D274FEB8F2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SURVEY_Participant_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SURVEY_Participant_ID (Survey Participants)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SURVEY_Participant_ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Survey Participants</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1116</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Survey results_01F394B169F6469F96C6D274FEB8F2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>6</ordinal>
              <family>Survey Participants</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Survey results_01F394B169F6469F96C6D274FEB8F2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gender</remote-alias>
              <ordinal>7</ordinal>
              <family>Survey Participants</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Survey results_01F394B169F6469F96C6D274FEB8F2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Birth_Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Birth_Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Birth_Date</remote-alias>
              <ordinal>8</ordinal>
              <family>Survey Participants</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1034</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Survey results_01F394B169F6469F96C6D274FEB8F2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Question:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Accesibility of local transport services&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;The tourism awareness of local people&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Shopping opportunities&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pricess on accomodation&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Variety of cultural and historical sites&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Availability of existing sport facilities and health centers&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Gender:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Calculation_361413899233570821:nk]' palette='Emoji' type='shape'>
            <map to='Emoji/Sad Face Emoji.png'>
              <bucket>&quot;Sad&quot;</bucket>
            </map>
            <map to='Emoji/Smiling Emoji with Eyes Opened.png'>
              <bucket>&quot;Happy&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Azerbaijan&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Survey results' id='Survey results_01F394B169F6469F96C6D274FEB8F2F1'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Survey results].[SURVEY_Participant_ID]' />
                    <expression op='[Survey Participants].[SURVEY_Participant_ID]' />
                  </expression>
                </clause>
                <relation join='left' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[Survey results].[QUESTION_ID]' />
                      <expression op='[Questions].[Question_Id]' />
                    </expression>
                  </clause>
                  <relation connection='excel-direct.0es0eix0504a9d16dh05c1m8mbz4' name='Survey results' table='[&apos;Survey results$&apos;]' type='table'>
                    <columns gridOrigin='A1:C5433:no:A1:C5433:0' header='yes' outcome='2'>
                      <column datatype='integer' name='SURVEY_Participant_ID' ordinal='0' />
                      <column datatype='integer' name='QUESTION_ID' ordinal='1' />
                      <column datatype='integer' name='RATING' ordinal='2' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.0es0eix0504a9d16dh05c1m8mbz4' name='Questions' table='[Questions$]' type='table'>
                    <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                      <column datatype='integer' name='Question_Id' ordinal='0' />
                      <column datatype='string' name='Question' ordinal='1' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='excel-direct.0es0eix0504a9d16dh05c1m8mbz4' name='Survey Participants' table='[&apos;Survey Participants$&apos;]' type='table'>
                  <columns gridOrigin='A1:D907:no:A1:D907:0' header='yes' outcome='6'>
                    <column datatype='integer' name='SURVEY_Participant_ID' ordinal='0' />
                    <column datatype='string' name='Country' ordinal='1' />
                    <column datatype='string' name='Gender' ordinal='2' />
                    <column datatype='date' name='Birth_Date' ordinal='3' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1_783256A8CEDA44EDA04D437F94B278D8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='3) Compare rating results by questions. It would be great if you use graph for Likertscaled data._1' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='3) Compare rating results by questions. It would be great if you use graph for Likertscaled data._1,4) Show demographics of survey participants._3,5) Create a map of countries by average rating._2,7) Why some surveys are invalid? Which questions caused it?_1' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='1) Show number of surveys.'>
      <layout-options>
        <title>
          <formatted-text>
            <run>1) Show number of surveys.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tourist satisfaction results (1)' name='federated.1vihksn1b5e2pi1dfevof00sgva9' />
          </datasources>
          <datasource-dependencies datasource='federated.1vihksn1b5e2pi1dfevof00sgva9'>
            <column caption='Survey_Distinct' datatype='integer' name='[Calculation_361413899069267968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([SURVEY_Participant_ID])' />
            </column>
            <column caption='IsNull' datatype='boolean' name='[Calculation_361413899124981763]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='ISNULL([RATING])' />
            </column>
            <column caption='Rating' datatype='integer' name='[RATING]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Survey results' datatype='integer' name='[__tableau_internal_object_id__].[Survey results_01F394B169F6469F96C6D274FEB8F2F1]' role='measure' type='quantitative' />
            <column caption='SURVEY Participant ID' datatype='integer' name='[SURVEY_Participant_ID]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.true...column caption='Survey results' datatype='table' name='[__tableau_internal_object_id__].[Survey results_01F394B169F6469F96C6D274FEB8F2F1]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Survey results_01F394B169F6469F96C6D274FEB8F2F1]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Survey results_01F394B169F6469F96C6D274FEB8F2F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_361413899124981763]' derivation='None' name='[none:Calculation_361413899124981763:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_361413899069267968]' derivation='User' name='[usr:Calculation_361413899069267968:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899124981763:nk]'>
            <groupfilter function='member' level='[none:Calculation_361413899124981763:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899124981763:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[__tableau_internal_object_id__].[cnt:Survey results_01F394B169F6469F96C6D274FEB8F2F1:qk]' />
              <text column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[usr:Calculation_361413899069267968:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontalignment='0' fontcolor='#787878' fontsize='10'>Count of Survey results:&#9;</run>
                <run bold='true' fontalignment='0' fontcolor='#333333' fontsize='10'><![CDATA[<[federated.1vihksn1b5e2pi1dfevof00sgva9].[__tableau_internal_object_id__].[cnt:Survey results_01F394B169F6469F96C6D274FEB8F2F1:qk]>]]></run>
                <run fontalignment='0'>Æ&#10;</run>
                <run fontalignment='0' fontcolor='#787878' fontsize='10'>Survey_Distinct:&#9;</run>
                <run bold='true' fontalignment='0' fontcolor='#333333' fontsize='10'><![CDATA[<[federated.1vihksn1b5e2pi1dfevof00sgva9].[usr:Calculation_361413899069267968:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8FF34F3B-8E8D-4212-B20A-02B7B13C1B18}' />
    </worksheet>
    <worksheet name='2) Show average rating.'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2) Show average rating.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tourist satisfaction results (1)' name='federated.1vihksn1b5e2pi1dfevof00sgva9' />
          </datasources>
          <datasource-dependencies datasource='federated.1vihksn1b5e2pi1dfevof00sgva9'>
            <column caption='Rating' datatype='integer' name='[RATING]' role='measure' type='quantitative' />
            <column-instance column='[RATING]' derivation='Avg' name='[avg:RATING:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1vihksn1b5e2pi1dfevof00sgva9].[avg:RATING:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[avg:RATING:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BA42641C-6A09-4853-B33E-82861C2D4D03}' />
    </worksheet>
    <worksheet name='3) Compare rating results by questions. It would be great if you use graph for Likertscaled data._1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>3) Compare rating results by questions. It would be great if you use graph for Likertscaled data._1</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tourist satisfaction results (1)' name='federated.1vihksn1b5e2pi1dfevof00sgva9' />
          </datasources>
          <datasource-dependencies datasource='federated.1vihksn1b5e2pi1dfevof00sgva9'>
            <column caption='Survey_Distinct' datatype='integer' name='[Calculation_361413899069267968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([SURVEY_Participant_ID])' />
            </column>
            <column datatype='string' name='[Question]' role='dimension' type='nominal' />
            <column caption='Rating' datatype='integer' name='[RATING]' role='measure' type='quantitative' />
            <column caption='SURVEY Participant ID' datatype='integer' name='[SURVEY_Participant_ID]' role='dimension' type='ordinal' />
            <column-instance column='[Question]' derivation='None' name='[none:Question:nk]' pivot='key' type='nominal' />
            <column-instance column='[RATING]' derivation='None' name='[none:RATING:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_361413899069267968]' derivation='User' name='[usr:Calculation_361413899069267968:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:RATING:ok]' />
              <text column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:RATING:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Question:nk]</rows>
        <cols>[federated.1vihksn1b5e2pi1dfevof00sgva9].[usr:Calculation_361413899069267968:qk]</cols>
      </table>
      <simple-id uuid='{0E8BCAD5-EE47-47A1-8392-27A6D032DA3B}' />
    </worksheet>
    <worksheet name='3) Compare rating results by questions. It would be great if you use graph for Likertscaled data_2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tourist satisfaction results (1)' name='federated.1vihksn1b5e2pi1dfevof00sgva9' />
          </datasources>
          <datasource-dependencies datasource='federated.1vihksn1b5e2pi1dfevof00sgva9'>
            <column caption='Survey_Distinct' datatype='integer' name='[Calculation_361413899069267968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([SURVEY_Participant_ID])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Question]' role='dimension' type='nominal' />
            <column caption='Rating' datatype='integer' name='[RATING]' role='measure' type='quantitative' />
            <column caption='SURVEY Participant ID' datatype='integer' name='[SURVEY_Participant_ID]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Question]' derivation='None' name='[none:Question:nk]' pivot='key' type='nominal' />
            <column-instance column='[RATING]' derivation='None' name='[none:RATING:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_361413899069267968]' derivation='User' name='[usr:Calculation_361413899069267968:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:RATING:ok]' />
              <text column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:RATING:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Question:nk]</rows>
        <cols>([federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Country:nk] * [federated.1vihksn1b5e2pi1dfevof00sgva9].[usr:Calculation_361413899069267968:qk])</cols>
      </table>
      <simple-id uuid='{91243651-C1FB-4668-A33A-C0C1CCB2F92C}' />
    </worksheet>
    <worksheet name='4) Show demographics of survey participants._1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tourist satisfaction results (1)' name='federated.1vihksn1b5e2pi1dfevof00sgva9' />
          </datasources>
          <datasource-dependencies datasource='federated.1vihksn1b5e2pi1dfevof00sgva9'>
            <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[Calculation_361413899103088641]' peg='0' size='5' />
            </column>
            <column caption='Birth Date' datatype='date' name='[Birth_Date]' role='dimension' type='ordinal' />
            <column caption='Survey_Distinct' datatype='integer' name='[Calculation_361413899069267968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([SURVEY_Participant_ID])' />
            </column>
            <column caption='Age' datatype='integer' name='[Calculation_361413899103088641]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//YEAR(NOW()) - YEAR([Birth Date])//&#13;&#10;&#13;&#10;//DATEDIFF(&apos;year&apos;, [Birth Date], NOW())//&#13;&#10;&#13;&#10;DATEDIFF(&apos;year&apos;, [Birth_Date], TODAY())' />
            </column>
            <column caption='SURVEY Participant ID' datatype='integer' name='[SURVEY_Participant_ID]' role='dimension' type='ordinal' />
            <column-instance column='[Age (bin)]' derivation='None' name='[none:Age (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_361413899069267968]' derivation='User' name='[usr:Calculation_361413899069267968:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.1vihksn1b5e2pi1dfevof00sgva9].[usr:Calculation_361413899069267968:qk]</rows>
        <cols>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Age (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1vihksn1b5e2pi1dfevof00sgva9].[Age (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{9229FB49-5DAA-4FE9-B1BF-60CACC36C545}' />
    </worksheet>
    <worksheet name='4) Show demographics of survey participants._2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tourist satisfaction results (1)' name='federated.1vihksn1b5e2pi1dfevof00sgva9' />
          </datasources>
          <datasource-dependencies datasource='federated.1vihksn1b5e2pi1dfevof00sgva9'>
            <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[Calculation_361413899103088641]' peg='0' size='5' />
            </column>
            <column caption='Birth Date' datatype='date' name='[Birth_Date]' role='dimension' type='ordinal' />
            <column caption='Survey_Distinct' datatype='integer' name='[Calculation_361413899069267968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([SURVEY_Participant_ID])' />
            </column>
            <column caption='Age' datatype='integer' name='[Calculation_361413899103088641]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//YEAR(NOW()) - YEAR([Birth Date])//&#13;&#10;&#13;&#10;//DATEDIFF(&apos;year&apos;, [Birth Date], NOW())//&#13;&#10;&#13;&#10;DATEDIFF(&apos;year&apos;, [Birth_Date], TODAY())' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column caption='SURVEY Participant ID' datatype='integer' name='[SURVEY_Participant_ID]' role='dimension' type='ordinal' />
            <column-instance column='[Age (bin)]' derivation='None' name='[none:Age (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_361413899069267968]' derivation='User' name='[usr:Calculation_361413899069267968:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Gender:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vihksn1b5e2pi1dfevof00sgva9].[usr:Calculation_361413899069267968:qk]</rows>
        <cols>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Age (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1vihksn1b5e2pi1dfevof00sgva9].[Age (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{12A62470-94AA-4DA5-AE58-D2A98F9B28D9}' />
    </worksheet>
    <worksheet name='4) Show demographics of survey participants._3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>4) Show demographics of survey participants._3</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tourist satisfaction results (1)' name='federated.1vihksn1b5e2pi1dfevof00sgva9' />
          </datasources>
          <datasource-dependencies datasource='federated.1vihksn1b5e2pi1dfevof00sgva9'>
            <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[Calculation_361413899103088641]' peg='0' size='5' />
            </column>
            <column caption='Birth Date' datatype='date' name='[Birth_Date]' role='dimension' type='ordinal' />
            <column caption='Survey_Distinct' datatype='integer' name='[Calculation_361413899069267968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([SURVEY_Participant_ID])' />
            </column>
            <column caption='Age' datatype='integer' name='[Calculation_361413899103088641]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//YEAR(NOW()) - YEAR([Birth Date])//&#13;&#10;&#13;&#10;//DATEDIFF(&apos;year&apos;, [Birth Date], NOW())//&#13;&#10;&#13;&#10;DATEDIFF(&apos;year&apos;, [Birth_Date], TODAY())' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column caption='SURVEY Participant ID' datatype='integer' name='[SURVEY_Participant_ID]' role='dimension' type='ordinal' />
            <column-instance column='[Age (bin)]' derivation='None' name='[none:Age (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_361413899069267968]' derivation='User' name='[usr:Calculation_361413899069267968:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Gender:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vihksn1b5e2pi1dfevof00sgva9].[usr:Calculation_361413899069267968:qk]</rows>
        <cols>([federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Country:nk] * [federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Age (bin):qk])</cols>
        <show-full-range>
          <column>[federated.1vihksn1b5e2pi1dfevof00sgva9].[Age (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{625BF7BD-B3FB-4349-8643-42FBBC539480}' />
    </worksheet>
    <worksheet name='5) Create a map of countries by average rating._1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tourist satisfaction results (1)' name='federated.1vihksn1b5e2pi1dfevof00sgva9' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vihksn1b5e2pi1dfevof00sgva9'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[RATING]' role='measure' type='quantitative' />
            <column-instance column='[RATING]' derivation='Avg' name='[avg:RATING:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vihksn1b5e2pi1dfevof00sgva9].[Longitude (generated)]' field-type='quantitative' max='18965769.537771028' min='2809359.9168978916' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vihksn1b5e2pi1dfevof00sgva9].[Latitude (generated)]' field-type='quantitative' max='8257947.9648334282' min='1136482.174324357' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1vihksn1b5e2pi1dfevof00sgva9].[avg:RATING:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[avg:RATING:qk]' />
              <lod column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vihksn1b5e2pi1dfevof00sgva9].[Latitude (generated)]</rows>
        <cols>[federated.1vihksn1b5e2pi1dfevof00sgva9].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1BDBCAB0-A9B4-4C9E-870D-48A76F47E4D3}' />
    </worksheet>
    <worksheet name='5) Create a map of countries by average rating._2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>5) Create a map of countries by average rating._2</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tourist satisfaction results (1)' name='federated.1vihksn1b5e2pi1dfevof00sgva9' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vihksn1b5e2pi1dfevof00sgva9'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[RATING]' role='measure' type='quantitative' />
            <column-instance column='[RATING]' derivation='Avg' name='[avg:RATING:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1vihksn1b5e2pi1dfevof00sgva9].[avg:RATING:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[avg:RATING:qk]' />
              <size column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[avg:RATING:qk]' />
              <text column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[avg:RATING:qk]' />
              <text column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{27D2ECD5-95F5-4743-A987-39E4B8D98AAC}' />
    </worksheet>
    <worksheet name='6) Add one tourist picture with the mood (happy or sad) according to the surveyresults.'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{33C4F303-9899-4349-A0BA-76F45F31C139}' />
    </worksheet>
    <worksheet name='7) Why some surveys are invalid? Which questions caused it?_1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>7) Why some surveys are invalid? Which questions caused it?_1</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tourist satisfaction results (1)' name='federated.1vihksn1b5e2pi1dfevof00sgva9' />
          </datasources>
          <datasource-dependencies datasource='federated.1vihksn1b5e2pi1dfevof00sgva9'>
            <column caption='Survey_Distinct' datatype='integer' name='[Calculation_361413899069267968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([SURVEY_Participant_ID])' />
            </column>
            <column caption='IsNull' datatype='boolean' name='[Calculation_361413899124981763]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='ISNULL([RATING])' />
            </column>
            <column datatype='string' name='[Question]' role='dimension' type='nominal' />
            <column caption='Rating' datatype='integer' name='[RATING]' role='measure' type='quantitative' />
            <column caption='SURVEY Participant ID' datatype='integer' name='[SURVEY_Participant_ID]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_361413899124981763]' derivation='None' name='[none:Calculation_361413899124981763:nk]' pivot='key' type='nominal' />
            <column-instance column='[Question]' derivation='None' name='[none:Question:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_361413899069267968]' derivation='User' name='[usr:Calculation_361413899069267968:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899124981763:nk]'>
            <groupfilter function='member' level='[none:Calculation_361413899124981763:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899124981763:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1vihksn1b5e2pi1dfevof00sgva9].[usr:Calculation_361413899069267968:qk]</rows>
        <cols>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Question:nk]</cols>
      </table>
      <simple-id uuid='{1537D908-89C8-469B-B126-8342DA39BD39}' />
    </worksheet>
    <worksheet name='7) Why some surveys are invalid? Which questions caused it?_2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tourist satisfaction results (1)' name='federated.1vihksn1b5e2pi1dfevof00sgva9' />
          </datasources>
          <datasource-dependencies datasource='federated.1vihksn1b5e2pi1dfevof00sgva9'>
            <column caption='IsNull' datatype='boolean' name='[Calculation_361413899124981763]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='ISNULL([RATING])' />
            </column>
            <column datatype='string' name='[Question]' role='dimension' type='nominal' />
            <column caption='Rating' datatype='integer' name='[RATING]' role='measure' type='quantitative' />
            <column caption='SURVEY Participant ID (Survey Participants)' datatype='integer' name='[SURVEY_Participant_ID (Survey Participants)]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_361413899124981763]' derivation='None' name='[none:Calculation_361413899124981763:nk]' pivot='key' type='nominal' />
            <column-instance column='[Question]' derivation='None' name='[none:Question:nk]' pivot='key' type='nominal' />
            <column-instance column='[SURVEY_Participant_ID (Survey Participants)]' derivation='None' name='[none:SURVEY_Participant_ID (Survey Participants):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899124981763:nk]'>
            <groupfilter function='member' level='[none:Calculation_361413899124981763:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899124981763:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:SURVEY_Participant_ID (Survey Participants):ok]</rows>
        <cols>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Question:nk]</cols>
      </table>
      <simple-id uuid='{6DAA7BBD-424F-45BD-B374-46FA82BF9324}' />
    </worksheet>
    <worksheet name='Sales and Profit difference task'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (sample-superstore-subset-excel)' name='federated.1reb8q41q7a2p718p1ttw1nj3jwv' />
          </datasources>
          <datasource-dependencies datasource='federated.1reb8q41q7a2p718p1ttw1nj3jwv'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City Set]' derivation='InOut' name='[io:City Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1reb8q41q7a2p718p1ttw1nj3jwv].[none:City:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York City&quot;</bucket>
              <bucket>&quot;Los Angeles&quot;</bucket>
              <bucket>&quot;Seattle&quot;</bucket>
              <bucket>&quot;Chicago&quot;</bucket>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;Miami&quot;</bucket>
              <bucket>&quot;Philadelphia&quot;</bucket>
              <bucket>&quot;Boston&quot;</bucket>
              <bucket>&quot;Detroit&quot;</bucket>
              <bucket>&quot;Houston&quot;</bucket>
              <bucket>&quot;Dallas&quot;</bucket>
              <bucket>&quot;Atlanta&quot;</bucket>
              <bucket>&quot;Charlotte&quot;</bucket>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;San Diego&quot;</bucket>
              <bucket>&quot;Danville&quot;</bucket>
              <bucket>&quot;Madison&quot;</bucket>
              <bucket>&quot;Roseville&quot;</bucket>
              <bucket>&quot;Watertown&quot;</bucket>
              <bucket>&quot;Centereach&quot;</bucket>
              <bucket>&quot;Fayetteville&quot;</bucket>
              <bucket>&quot;Portland&quot;</bucket>
              <bucket>&quot;Mechanicsville&quot;</bucket>
              <bucket>&quot;Richmond&quot;</bucket>
              <bucket>&quot;Newark&quot;</bucket>
              <bucket>&quot;Kent&quot;</bucket>
              <bucket>&quot;Hays&quot;</bucket>
              <bucket>&quot;Gresham&quot;</bucket>
              <bucket>&quot;Homewood&quot;</bucket>
              <bucket>&quot;Margate&quot;</bucket>
              <bucket>&quot;Gainesville&quot;</bucket>
              <bucket>&quot;Auburn&quot;</bucket>
              <bucket>&quot;Columbus&quot;</bucket>
              <bucket>&quot;Rose Hill&quot;</bucket>
              <bucket>&quot;Urbandale&quot;</bucket>
              <bucket>&quot;Greenville&quot;</bucket>
              <bucket>&quot;Mehlville&quot;</bucket>
              <bucket>&quot;Apex&quot;</bucket>
              <bucket>&quot;Atascadero&quot;</bucket>
              <bucket>&quot;Yuma&quot;</bucket>
              <bucket>&quot;Marion&quot;</bucket>
              <bucket>&quot;Mundelein&quot;</bucket>
              <bucket>&quot;Sanford&quot;</bucket>
              <bucket>&quot;Jackson&quot;</bucket>
              <bucket>&quot;Burlington&quot;</bucket>
              <bucket>&quot;Elgin&quot;</bucket>
              <bucket>&quot;Warren&quot;</bucket>
              <bucket>&quot;Rochester&quot;</bucket>
              <bucket>&quot;West Linn&quot;</bucket>
              <bucket>&quot;Florence&quot;</bucket>
              <bucket>&quot;Vancouver&quot;</bucket>
              <bucket>&quot;Liberal&quot;</bucket>
              <bucket>&quot;Bangor&quot;</bucket>
              <bucket>&quot;Franklin&quot;</bucket>
              <bucket>&quot;Corsicana&quot;</bucket>
              <bucket>&quot;Twentynine Palms&quot;</bucket>
              <bucket>&quot;Concord&quot;</bucket>
              <bucket>&quot;Redmond&quot;</bucket>
              <bucket>&quot;Slidell&quot;</bucket>
              <bucket>&quot;Durango&quot;</bucket>
              <bucket>&quot;Cincinnati&quot;</bucket>
              <bucket>&quot;Kingman&quot;</bucket>
              <bucket>&quot;Boise&quot;</bucket>
              <bucket>&quot;Thornton&quot;</bucket>
              <bucket>&quot;Stillwater&quot;</bucket>
              <bucket>&quot;Peoria&quot;</bucket>
              <bucket>&quot;Inver Grove Heights&quot;</bucket>
              <bucket>&quot;Salinas&quot;</bucket>
              <bucket>&quot;Searcy&quot;</bucket>
              <bucket>&quot;Lakewood&quot;</bucket>
              <bucket>&quot;Bozeman&quot;</bucket>
              <bucket>&quot;Harrison&quot;</bucket>
              <bucket>&quot;Spanaway&quot;</bucket>
              <bucket>&quot;Oshkosh&quot;</bucket>
              <bucket>&quot;Springfield&quot;</bucket>
              <bucket>&quot;Franklin Square&quot;</bucket>
              <bucket>&quot;Gary&quot;</bucket>
              <bucket>&quot;Elk Grove Village&quot;</bucket>
              <bucket>&quot;Foster City&quot;</bucket>
              <bucket>&quot;Saco&quot;</bucket>
              <bucket>&quot;Cleveland&quot;</bucket>
              <bucket>&quot;Hudson&quot;</bucket>
              <bucket>&quot;Menlo Park&quot;</bucket>
              <bucket>&quot;Santa Clara&quot;</bucket>
              <bucket>&quot;Sharon&quot;</bucket>
              <bucket>&quot;Oregon City&quot;</bucket>
              <bucket>&quot;Bellevue&quot;</bucket>
              <bucket>&quot;New City&quot;</bucket>
              <bucket>&quot;Vernon Hills&quot;</bucket>
              <bucket>&quot;South Hadley&quot;</bucket>
              <bucket>&quot;Mount Vernon&quot;</bucket>
              <bucket>&quot;Morgantown&quot;</bucket>
              <bucket>&quot;Sun Prairie&quot;</bucket>
              <bucket>&quot;Lafayette&quot;</bucket>
              <bucket>&quot;Hicksville&quot;</bucket>
              <bucket>&quot;Tyler&quot;</bucket>
              <bucket>&quot;Woodbury&quot;</bucket>
              <bucket>&quot;Steubenville&quot;</bucket>
              <bucket>&quot;Woodburn&quot;</bucket>
              <bucket>&quot;Baton Rouge&quot;</bucket>
              <bucket>&quot;Des Moines&quot;</bucket>
              <bucket>&quot;Lake Jackson&quot;</bucket>
              <bucket>&quot;Vincennes&quot;</bucket>
              <bucket>&quot;Louisville&quot;</bucket>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
              <bucket>&quot;Nampa&quot;</bucket>
              <bucket>&quot;Plum&quot;</bucket>
              <bucket>&quot;Schaumburg&quot;</bucket>
              <bucket>&quot;Plant City&quot;</bucket>
              <bucket>&quot;Carpentersville&quot;</bucket>
              <bucket>&quot;Wauwatosa&quot;</bucket>
              <bucket>&quot;Dodge City&quot;</bucket>
              <bucket>&quot;Decatur&quot;</bucket>
              <bucket>&quot;Peachtree City&quot;</bucket>
              <bucket>&quot;Elmhurst&quot;</bucket>
              <bucket>&quot;Glendale Heights&quot;</bucket>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
              <bucket>&quot;Bothell&quot;</bucket>
              <bucket>&quot;Rapid City&quot;</bucket>
              <bucket>&quot;Kenner&quot;</bucket>
              <bucket>&quot;Bullhead City&quot;</bucket>
              <bucket>&quot;Farragut&quot;</bucket>
              <bucket>&quot;Crystal Lake&quot;</bucket>
              <bucket>&quot;Long Beach&quot;</bucket>
              <bucket>&quot;Temecula&quot;</bucket>
              <bucket>&quot;Niagara Falls&quot;</bucket>
              <bucket>&quot;Rockford&quot;</bucket>
              <bucket>&quot;Texarkana&quot;</bucket>
              <bucket>&quot;Elmira&quot;</bucket>
              <bucket>&quot;Roswell&quot;</bucket>
              <bucket>&quot;Murfreesboro&quot;</bucket>
              <bucket>&quot;Farmington&quot;</bucket>
              <bucket>&quot;Jeffersonville&quot;</bucket>
              <bucket>&quot;Fort Wayne&quot;</bucket>
              <bucket>&quot;Yucaipa&quot;</bucket>
              <bucket>&quot;Olathe&quot;</bucket>
              <bucket>&quot;Jefferson City&quot;</bucket>
              <bucket>&quot;Goldsboro&quot;</bucket>
              <bucket>&quot;Moscow&quot;</bucket>
              <bucket>&quot;Eagle&quot;</bucket>
              <bucket>&quot;Saint Louis&quot;</bucket>
              <bucket>&quot;Mankato&quot;</bucket>
              <bucket>&quot;San Clemente&quot;</bucket>
              <bucket>&quot;La Grange&quot;</bucket>
              <bucket>&quot;Austintown&quot;</bucket>
              <bucket>&quot;Albuquerque&quot;</bucket>
              <bucket>&quot;Galesburg&quot;</bucket>
              <bucket>&quot;Wilmington&quot;</bucket>
              <bucket>&quot;Dunedin&quot;</bucket>
              <bucket>&quot;Tonawanda&quot;</bucket>
              <bucket>&quot;Fairborn&quot;</bucket>
              <bucket>&quot;Racine&quot;</bucket>
              <bucket>&quot;Southgate&quot;</bucket>
              <bucket>&quot;Maple Shade&quot;</bucket>
              <bucket>&quot;Reston&quot;</bucket>
              <bucket>&quot;Brooklyn Center&quot;</bucket>
              <bucket>&quot;Longmont&quot;</bucket>
              <bucket>&quot;Carbondale&quot;</bucket>
              <bucket>&quot;Shoreview&quot;</bucket>
              <bucket>&quot;Country Club Hills&quot;</bucket>
              <bucket>&quot;Shaker Heights&quot;</bucket>
              <bucket>&quot;West Mifflin&quot;</bucket>
              <bucket>&quot;Medford&quot;</bucket>
              <bucket>&quot;Twin Falls&quot;</bucket>
              <bucket>&quot;Perry Hall&quot;</bucket>
              <bucket>&quot;Raytown&quot;</bucket>
              <bucket>&quot;Atlantic City&quot;</bucket>
              <bucket>&quot;Alamogordo&quot;</bucket>
              <bucket>&quot;Owosso&quot;</bucket>
              <bucket>&quot;Carrollton&quot;</bucket>
              <bucket>&quot;Adrian&quot;</bucket>
              <bucket>&quot;Wheeling&quot;</bucket>
              <bucket>&quot;Waxahachie&quot;</bucket>
              <bucket>&quot;Edmonds&quot;</bucket>
              <bucket>&quot;Saint Paul&quot;</bucket>
              <bucket>&quot;Taylors&quot;</bucket>
              <bucket>&quot;Birmingham&quot;</bucket>
              <bucket>&quot;Dundalk&quot;</bucket>
              <bucket>&quot;Orlando&quot;</bucket>
              <bucket>&quot;Lodi&quot;</bucket>
              <bucket>&quot;Cheektowaga&quot;</bucket>
              <bucket>&quot;Palm Coast&quot;</bucket>
              <bucket>&quot;Coconut Creek&quot;</bucket>
              <bucket>&quot;Tinley Park&quot;</bucket>
              <bucket>&quot;Tooele&quot;</bucket>
              <bucket>&quot;Rome&quot;</bucket>
              <bucket>&quot;Pontiac&quot;</bucket>
              <bucket>&quot;Scottsdale&quot;</bucket>
              <bucket>&quot;Chico&quot;</bucket>
              <bucket>&quot;Fresno&quot;</bucket>
              <bucket>&quot;Hacienda Heights&quot;</bucket>
              <bucket>&quot;Bennington&quot;</bucket>
              <bucket>&quot;Wenatchee&quot;</bucket>
              <bucket>&quot;Lincoln Park&quot;</bucket>
              <bucket>&quot;Post Falls&quot;</bucket>
              <bucket>&quot;Essex Junction&quot;</bucket>
              <bucket>&quot;Savannah&quot;</bucket>
              <bucket>&quot;East Los Angeles&quot;</bucket>
              <bucket>&quot;Laguna Hills&quot;</bucket>
              <bucket>&quot;West Lafayette&quot;</bucket>
              <bucket>&quot;Brentwood&quot;</bucket>
              <bucket>&quot;Lynnwood&quot;</bucket>
              <bucket>&quot;Lewiston&quot;</bucket>
              <bucket>&quot;Westbrook&quot;</bucket>
              <bucket>&quot;Charleston&quot;</bucket>
              <bucket>&quot;Troutdale&quot;</bucket>
              <bucket>&quot;Arlington&quot;</bucket>
              <bucket>&quot;Caldwell&quot;</bucket>
              <bucket>&quot;Mount Lebanon&quot;</bucket>
              <bucket>&quot;Hesperia&quot;</bucket>
              <bucket>&quot;Hinesville&quot;</bucket>
              <bucket>&quot;Cranford&quot;</bucket>
              <bucket>&quot;Gilroy&quot;</bucket>
              <bucket>&quot;Mobile&quot;</bucket>
              <bucket>&quot;Santa Fe&quot;</bucket>
              <bucket>&quot;Burke&quot;</bucket>
              <bucket>&quot;Wilkes Barre&quot;</bucket>
              <bucket>&quot;Huntington&quot;</bucket>
              <bucket>&quot;Murray&quot;</bucket>
              <bucket>&quot;Hilliard&quot;</bucket>
              <bucket>&quot;Freeport&quot;</bucket>
              <bucket>&quot;Granite City&quot;</bucket>
              <bucket>&quot;Berkeley&quot;</bucket>
              <bucket>&quot;Seymour&quot;</bucket>
              <bucket>&quot;Petersburg&quot;</bucket>
              <bucket>&quot;Las Vegas&quot;</bucket>
              <bucket>&quot;La Vista&quot;</bucket>
              <bucket>&quot;Kissimmee&quot;</bucket>
              <bucket>&quot;Garden City&quot;</bucket>
              <bucket>&quot;Smyrna&quot;</bucket>
              <bucket>&quot;Lacey&quot;</bucket>
              <bucket>&quot;Davis&quot;</bucket>
              <bucket>&quot;Burnsville&quot;</bucket>
              <bucket>&quot;Carol Stream&quot;</bucket>
              <bucket>&quot;Woodstock&quot;</bucket>
              <bucket>&quot;Southbridge&quot;</bucket>
              <bucket>&quot;Saint Charles&quot;</bucket>
              <bucket>&quot;Fort Bragg&quot;</bucket>
              <bucket>&quot;Pasadena&quot;</bucket>
              <bucket>&quot;Seguin&quot;</bucket>
              <bucket>&quot;Mason City&quot;</bucket>
              <bucket>&quot;West Hollywood&quot;</bucket>
              <bucket>&quot;Bay City&quot;</bucket>
              <bucket>&quot;Plainfield&quot;</bucket>
              <bucket>&quot;Fruit Cove&quot;</bucket>
              <bucket>&quot;Winter Park&quot;</bucket>
              <bucket>&quot;Mishawaka&quot;</bucket>
              <bucket>&quot;Pleasure Ridge Park&quot;</bucket>
              <bucket>&quot;Newnan&quot;</bucket>
              <bucket>&quot;Webster Groves&quot;</bucket>
              <bucket>&quot;Lima&quot;</bucket>
              <bucket>&quot;Mesquite&quot;</bucket>
              <bucket>&quot;Hampton&quot;</bucket>
              <bucket>&quot;Apple Valley&quot;</bucket>
              <bucket>&quot;North Miami Beach&quot;</bucket>
              <bucket>&quot;Olney&quot;</bucket>
              <bucket>&quot;Grants Pass&quot;</bucket>
              <bucket>&quot;Altamonte Springs&quot;</bucket>
              <bucket>&quot;Hammond&quot;</bucket>
              <bucket>&quot;San Carlos&quot;</bucket>
              <bucket>&quot;Bowling Green&quot;</bucket>
              <bucket>&quot;Weslaco&quot;</bucket>
              <bucket>&quot;Laredo&quot;</bucket>
              <bucket>&quot;Longview&quot;</bucket>
              <bucket>&quot;Camp Springs&quot;</bucket>
              <bucket>&quot;Gallatin&quot;</bucket>
              <bucket>&quot;Deer Park&quot;</bucket>
              <bucket>&quot;Derry&quot;</bucket>
              <bucket>&quot;Harrisburg&quot;</bucket>
              <bucket>&quot;Norman&quot;</bucket>
              <bucket>&quot;Brookings&quot;</bucket>
              <bucket>&quot;Prior Lake&quot;</bucket>
              <bucket>&quot;Hermitage&quot;</bucket>
              <bucket>&quot;Pflugerville&quot;</bucket>
              <bucket>&quot;Shawnee&quot;</bucket>
              <bucket>&quot;Oro Valley&quot;</bucket>
              <bucket>&quot;Calumet City&quot;</bucket>
              <bucket>&quot;Barrington&quot;</bucket>
              <bucket>&quot;Walker&quot;</bucket>
              <bucket>&quot;Glen Burnie&quot;</bucket>
              <bucket>&quot;Dayton&quot;</bucket>
              <bucket>&quot;Port Chester&quot;</bucket>
              <bucket>&quot;La Quinta&quot;</bucket>
              <bucket>&quot;San Juan&quot;</bucket>
              <bucket>&quot;Westerville&quot;</bucket>
              <bucket>&quot;Framingham&quot;</bucket>
              <bucket>&quot;San Gabriel&quot;</bucket>
              <bucket>&quot;Rocky Mount&quot;</bucket>
              <bucket>&quot;Clinton&quot;</bucket>
              <bucket>&quot;Salem&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Severna Park&quot;</bucket>
              <bucket>&quot;Newton&quot;</bucket>
              <bucket>&quot;Oswego&quot;</bucket>
              <bucket>&quot;Pacifica&quot;</bucket>
              <bucket>&quot;Eden&quot;</bucket>
              <bucket>&quot;North Charleston&quot;</bucket>
              <bucket>&quot;Vacaville&quot;</bucket>
              <bucket>&quot;Kirkwood&quot;</bucket>
              <bucket>&quot;Mandan&quot;</bucket>
              <bucket>&quot;Livingston&quot;</bucket>
              <bucket>&quot;Massillon&quot;</bucket>
              <bucket>&quot;Downers Grove&quot;</bucket>
              <bucket>&quot;Billings&quot;</bucket>
              <bucket>&quot;Lehi&quot;</bucket>
              <bucket>&quot;Madison Heights&quot;</bucket>
              <bucket>&quot;New Rochelle&quot;</bucket>
              <bucket>&quot;Sherwood&quot;</bucket>
              <bucket>&quot;Casas Adobes&quot;</bucket>
              <bucket>&quot;Arvada&quot;</bucket>
              <bucket>&quot;Portsmouth&quot;</bucket>
              <bucket>&quot;Troy&quot;</bucket>
              <bucket>&quot;Redding&quot;</bucket>
              <bucket>&quot;Columbia&quot;</bucket>
              <bucket>&quot;Pueblo West&quot;</bucket>
              <bucket>&quot;Wheat Ridge&quot;</bucket>
              <bucket>&quot;Levittown&quot;</bucket>
              <bucket>&quot;Xenia&quot;</bucket>
              <bucket>&quot;Hobbs&quot;</bucket>
              <bucket>&quot;College Park&quot;</bucket>
              <bucket>&quot;Salt Lake City&quot;</bucket>
              <bucket>&quot;Wilmette&quot;</bucket>
              <bucket>&quot;South Portland&quot;</bucket>
              <bucket>&quot;Cedar Hill&quot;</bucket>
              <bucket>&quot;Gillette&quot;</bucket>
              <bucket>&quot;Waldorf&quot;</bucket>
              <bucket>&quot;Ontario&quot;</bucket>
              <bucket>&quot;Sarasota&quot;</bucket>
              <bucket>&quot;Hopkins&quot;</bucket>
              <bucket>&quot;Tacoma&quot;</bucket>
              <bucket>&quot;Belvidere&quot;</bucket>
              <bucket>&quot;Carlsbad&quot;</bucket>
              <bucket>&quot;Omaha&quot;</bucket>
              <bucket>&quot;Pine Hills&quot;</bucket>
              <bucket>&quot;Land O Lakes&quot;</bucket>
              <bucket>&quot;Grove City&quot;</bucket>
              <bucket>&quot;Edmond&quot;</bucket>
              <bucket>&quot;Gladstone&quot;</bucket>
              <bucket>&quot;Coral Springs&quot;</bucket>
              <bucket>&quot;Daytona Beach&quot;</bucket>
              <bucket>&quot;Appleton&quot;</bucket>
              <bucket>&quot;Henderson&quot;</bucket>
              <bucket>&quot;Sioux City&quot;</bucket>
              <bucket>&quot;Keller&quot;</bucket>
              <bucket>&quot;Fairfield&quot;</bucket>
              <bucket>&quot;Napa&quot;</bucket>
              <bucket>&quot;Casper&quot;</bucket>
              <bucket>&quot;Glen Cove&quot;</bucket>
              <bucket>&quot;Quincy&quot;</bucket>
              <bucket>&quot;Skokie&quot;</bucket>
              <bucket>&quot;Mauldin&quot;</bucket>
              <bucket>&quot;Middle River&quot;</bucket>
              <bucket>&quot;Athens&quot;</bucket>
              <bucket>&quot;Hurst&quot;</bucket>
              <bucket>&quot;Delray Beach&quot;</bucket>
              <bucket>&quot;Strongsville&quot;</bucket>
              <bucket>&quot;Midland&quot;</bucket>
              <bucket>&quot;Bountiful&quot;</bucket>
              <bucket>&quot;Oak Ridge&quot;</bucket>
              <bucket>&quot;Talladega&quot;</bucket>
              <bucket>&quot;Morristown&quot;</bucket>
              <bucket>&quot;Sterling Heights&quot;</bucket>
              <bucket>&quot;Dalton&quot;</bucket>
              <bucket>&quot;Albemarle&quot;</bucket>
              <bucket>&quot;Oakland&quot;</bucket>
              <bucket>&quot;West Bend&quot;</bucket>
              <bucket>&quot;Kankakee&quot;</bucket>
              <bucket>&quot;Modesto&quot;</bucket>
              <bucket>&quot;Loveland&quot;</bucket>
              <bucket>&quot;Jamestown&quot;</bucket>
              <bucket>&quot;Statesboro&quot;</bucket>
              <bucket>&quot;Riviera Beach&quot;</bucket>
              <bucket>&quot;Dover&quot;</bucket>
              <bucket>&quot;Gahanna&quot;</bucket>
              <bucket>&quot;Romeoville&quot;</bucket>
              <bucket>&quot;Kokomo&quot;</bucket>
              <bucket>&quot;Alexandria&quot;</bucket>
              <bucket>&quot;Minnetonka Mills&quot;</bucket>
              <bucket>&quot;Michigan City&quot;</bucket>
              <bucket>&quot;Olive Branch&quot;</bucket>
              <bucket>&quot;Grand Junction&quot;</bucket>
              <bucket>&quot;New Berlin&quot;</bucket>
              <bucket>&quot;Milwaukee&quot;</bucket>
              <bucket>&quot;Kansas City&quot;</bucket>
              <bucket>&quot;Oceanside&quot;</bucket>
              <bucket>&quot;Anaheim&quot;</bucket>
              <bucket>&quot;Livonia&quot;</bucket>
              <bucket>&quot;South Boston&quot;</bucket>
              <bucket>&quot;Winter Haven&quot;</bucket>
              <bucket>&quot;Everett&quot;</bucket>
              <bucket>&quot;Bellingham&quot;</bucket>
              <bucket>&quot;Belle Glade&quot;</bucket>
              <bucket>&quot;Hilton Head Island&quot;</bucket>
              <bucket>&quot;Bedford&quot;</bucket>
              <bucket>&quot;Fountain&quot;</bucket>
              <bucket>&quot;Aberdeen&quot;</bucket>
              <bucket>&quot;Valparaiso&quot;</bucket>
              <bucket>&quot;Albany&quot;</bucket>
              <bucket>&quot;Fort Collins&quot;</bucket>
              <bucket>&quot;Paducah&quot;</bucket>
              <bucket>&quot;Spanish Fork&quot;</bucket>
              <bucket>&quot;Chula Vista&quot;</bucket>
              <bucket>&quot;Ponte Vedra Beach&quot;</bucket>
              <bucket>&quot;Garfield Heights&quot;</bucket>
              <bucket>&quot;Waterloo&quot;</bucket>
              <bucket>&quot;Mission Viejo&quot;</bucket>
              <bucket>&quot;Franklin Park&quot;</bucket>
              <bucket>&quot;Holland&quot;</bucket>
              <bucket>&quot;Plainview&quot;</bucket>
              <bucket>&quot;Reading&quot;</bucket>
              <bucket>&quot;Provo&quot;</bucket>
              <bucket>&quot;Chesapeake&quot;</bucket>
              <bucket>&quot;Royal Palm Beach&quot;</bucket>
              <bucket>&quot;Bloomington&quot;</bucket>
              <bucket>&quot;Potomac&quot;</bucket>
              <bucket>&quot;Stockton&quot;</bucket>
              <bucket>&quot;Alton&quot;</bucket>
              <bucket>&quot;West Chicago&quot;</bucket>
              <bucket>&quot;Gurnee&quot;</bucket>
              <bucket>&quot;Pittsburgh&quot;</bucket>
              <bucket>&quot;Pekin&quot;</bucket>
              <bucket>&quot;Papillion&quot;</bucket>
              <bucket>&quot;Menomonee Falls&quot;</bucket>
              <bucket>&quot;Anacortes&quot;</bucket>
              <bucket>&quot;Russellville&quot;</bucket>
              <bucket>&quot;Oak Park&quot;</bucket>
              <bucket>&quot;Mansfield&quot;</bucket>
              <bucket>&quot;Rogers&quot;</bucket>
              <bucket>&quot;Kentwood&quot;</bucket>
              <bucket>&quot;Lancaster&quot;</bucket>
              <bucket>&quot;Gorham&quot;</bucket>
              <bucket>&quot;Paris&quot;</bucket>
              <bucket>&quot;Indianapolis&quot;</bucket>
              <bucket>&quot;Carmel&quot;</bucket>
              <bucket>&quot;West Allis&quot;</bucket>
              <bucket>&quot;Kenmore&quot;</bucket>
              <bucket>&quot;Eagle Pass&quot;</bucket>
              <bucket>&quot;Cleveland Heights&quot;</bucket>
              <bucket>&quot;Burleson&quot;</bucket>
              <bucket>&quot;Burton&quot;</bucket>
              <bucket>&quot;Holbrook&quot;</bucket>
              <bucket>&quot;Hackensack&quot;</bucket>
              <bucket>&quot;Los Gatos&quot;</bucket>
              <bucket>&quot;Tucson&quot;</bucket>
              <bucket>&quot;Opelika&quot;</bucket>
              <bucket>&quot;Lansing&quot;</bucket>
              <bucket>&quot;Noblesville&quot;</bucket>
              <bucket>&quot;Hialeah&quot;</bucket>
              <bucket>&quot;Westlake&quot;</bucket>
              <bucket>&quot;Aurora&quot;</bucket>
              <bucket>&quot;Wichita&quot;</bucket>
              <bucket>&quot;Willow Grove&quot;</bucket>
              <bucket>&quot;Tysons Corner&quot;</bucket>
              <bucket>&quot;East Massapequa&quot;</bucket>
              <bucket>&quot;Covington&quot;</bucket>
              <bucket>&quot;Rio Rancho&quot;</bucket>
              <bucket>&quot;Portage&quot;</bucket>
              <bucket>&quot;Sulphur Springs&quot;</bucket>
              <bucket>&quot;Manhattan&quot;</bucket>
              <bucket>&quot;North Platte&quot;</bucket>
              <bucket>&quot;Granite Bay&quot;</bucket>
              <bucket>&quot;Northbrook&quot;</bucket>
              <bucket>&quot;Kingsville&quot;</bucket>
              <bucket>&quot;East Saint Louis&quot;</bucket>
              <bucket>&quot;Montgomery&quot;</bucket>
              <bucket>&quot;Munster&quot;</bucket>
              <bucket>&quot;Hutchinson&quot;</bucket>
              <bucket>&quot;Moreno Valley&quot;</bucket>
              <bucket>&quot;Forest Park&quot;</bucket>
              <bucket>&quot;East Meadow&quot;</bucket>
              <bucket>&quot;East Hartford&quot;</bucket>
              <bucket>&quot;Merrillville&quot;</bucket>
              <bucket>&quot;Carol City&quot;</bucket>
              <bucket>&quot;Dublin&quot;</bucket>
              <bucket>&quot;Thomasville&quot;</bucket>
              <bucket>&quot;Canton&quot;</bucket>
              <bucket>&quot;South Burlington&quot;</bucket>
              <bucket>&quot;Manteca&quot;</bucket>
              <bucket>&quot;Muncie&quot;</bucket>
              <bucket>&quot;Vallejo&quot;</bucket>
              <bucket>&quot;Port Arthur&quot;</bucket>
              <bucket>&quot;Benton&quot;</bucket>
              <bucket>&quot;Blaine&quot;</bucket>
              <bucket>&quot;Yonkers&quot;</bucket>
              <bucket>&quot;Schererville&quot;</bucket>
              <bucket>&quot;Tempe&quot;</bucket>
              <bucket>&quot;Elizabeth&quot;</bucket>
              <bucket>&quot;Cumberland&quot;</bucket>
              <bucket>&quot;Wilson&quot;</bucket>
              <bucket>&quot;Normal&quot;</bucket>
              <bucket>&quot;Waco&quot;</bucket>
              <bucket>&quot;Shirley&quot;</bucket>
              <bucket>&quot;Huntington Beach&quot;</bucket>
              <bucket>&quot;North Port&quot;</bucket>
              <bucket>&quot;Kirkland&quot;</bucket>
              <bucket>&quot;Baldwin&quot;</bucket>
              <bucket>&quot;Mooresville&quot;</bucket>
              <bucket>&quot;Coachella&quot;</bucket>
              <bucket>&quot;Ottumwa&quot;</bucket>
              <bucket>&quot;Spring Hill&quot;</bucket>
              <bucket>&quot;Upper Saint Clair&quot;</bucket>
              <bucket>&quot;Ossining&quot;</bucket>
              <bucket>&quot;Glen Ellyn&quot;</bucket>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
              <bucket>&quot;North Ridgeville&quot;</bucket>
              <bucket>&quot;Palm Springs&quot;</bucket>
              <bucket>&quot;Jacksonville&quot;</bucket>
              <bucket>&quot;Overland Park&quot;</bucket>
              <bucket>&quot;Keizer&quot;</bucket>
              <bucket>&quot;Grand Prairie&quot;</bucket>
              <bucket>&quot;Delaware&quot;</bucket>
              <bucket>&quot;North Tonawanda&quot;</bucket>
              <bucket>&quot;Manhattan Beach&quot;</bucket>
              <bucket>&quot;Owensboro&quot;</bucket>
              <bucket>&quot;Savage&quot;</bucket>
              <bucket>&quot;Fort Pierce&quot;</bucket>
              <bucket>&quot;Creve Coeur&quot;</bucket>
              <bucket>&quot;Waterville&quot;</bucket>
              <bucket>&quot;Owasso&quot;</bucket>
              <bucket>&quot;Palm Bay&quot;</bucket>
              <bucket>&quot;Cudahy&quot;</bucket>
              <bucket>&quot;Odenton&quot;</bucket>
              <bucket>&quot;Dix Hills&quot;</bucket>
              <bucket>&quot;Tucker&quot;</bucket>
              <bucket>&quot;Ozark&quot;</bucket>
              <bucket>&quot;Radnor&quot;</bucket>
              <bucket>&quot;Drexel Hill&quot;</bucket>
              <bucket>&quot;Laramie&quot;</bucket>
              <bucket>&quot;Hempstead&quot;</bucket>
              <bucket>&quot;New Bern&quot;</bucket>
              <bucket>&quot;Hickory&quot;</bucket>
              <bucket>&quot;Trenton&quot;</bucket>
              <bucket>&quot;San Jose&quot;</bucket>
              <bucket>&quot;Kennewick&quot;</bucket>
              <bucket>&quot;Elk Plain&quot;</bucket>
              <bucket>&quot;Montclair&quot;</bucket>
              <bucket>&quot;Enterprise&quot;</bucket>
              <bucket>&quot;Schenectady&quot;</bucket>
              <bucket>&quot;Ann Arbor&quot;</bucket>
              <bucket>&quot;Annapolis&quot;</bucket>
              <bucket>&quot;Chandler&quot;</bucket>
              <bucket>&quot;Nashville&quot;</bucket>
              <bucket>&quot;Knoxville&quot;</bucket>
              <bucket>&quot;Helena&quot;</bucket>
              <bucket>&quot;Idaho Falls&quot;</bucket>
              <bucket>&quot;Holladay&quot;</bucket>
              <bucket>&quot;Parkville&quot;</bucket>
              <bucket>&quot;Marshalltown&quot;</bucket>
              <bucket>&quot;North Arlington&quot;</bucket>
              <bucket>&quot;Jonesboro&quot;</bucket>
              <bucket>&quot;Mineral Wells&quot;</bucket>
              <bucket>&quot;Glendale&quot;</bucket>
              <bucket>&quot;Mustang&quot;</bucket>
              <bucket>&quot;West Memphis&quot;</bucket>
              <bucket>&quot;Abilene&quot;</bucket>
              <bucket>&quot;Lincoln&quot;</bucket>
              <bucket>&quot;Lakeville&quot;</bucket>
              <bucket>&quot;Coeur D Alene&quot;</bucket>
              <bucket>&quot;Costa Mesa&quot;</bucket>
              <bucket>&quot;Cottage Grove&quot;</bucket>
              <bucket>&quot;Huber Heights&quot;</bucket>
              <bucket>&quot;Oak Creek&quot;</bucket>
              <bucket>&quot;Sault Sainte Marie&quot;</bucket>
              <bucket>&quot;Gaithersburg&quot;</bucket>
              <bucket>&quot;Pottstown&quot;</bucket>
              <bucket>&quot;Des Plaines&quot;</bucket>
              <bucket>&quot;Los Banos&quot;</bucket>
              <bucket>&quot;Blacksburg&quot;</bucket>
              <bucket>&quot;Layton&quot;</bucket>
              <bucket>&quot;Highlands Ranch&quot;</bucket>
              <bucket>&quot;Federal Way&quot;</bucket>
              <bucket>&quot;Flint&quot;</bucket>
              <bucket>&quot;Irving&quot;</bucket>
              <bucket>&quot;Palm Beach Gardens&quot;</bucket>
              <bucket>&quot;Toledo&quot;</bucket>
              <bucket>&quot;Bakersfield&quot;</bucket>
              <bucket>&quot;Pullman&quot;</bucket>
              <bucket>&quot;Grand Forks&quot;</bucket>
              <bucket>&quot;Akron&quot;</bucket>
              <bucket>&quot;Bristol&quot;</bucket>
              <bucket>&quot;Conway&quot;</bucket>
              <bucket>&quot;Oakville&quot;</bucket>
              <bucket>&quot;Marrero&quot;</bucket>
              <bucket>&quot;Miramar&quot;</bucket>
              <bucket>&quot;Cedar Park&quot;</bucket>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
              <bucket>&quot;West Babylon&quot;</bucket>
              <bucket>&quot;Meriden&quot;</bucket>
              <bucket>&quot;Utica&quot;</bucket>
              <bucket>&quot;San Ramon&quot;</bucket>
              <bucket>&quot;Texas City&quot;</bucket>
              <bucket>&quot;Beverly Hills&quot;</bucket>
              <bucket>&quot;Huntsville&quot;</bucket>
              <bucket>&quot;Southfield&quot;</bucket>
              <bucket>&quot;Monroe&quot;</bucket>
              <bucket>&quot;Frankfort&quot;</bucket>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
              <bucket>&quot;New Albany&quot;</bucket>
              <bucket>&quot;Redwood City&quot;</bucket>
              <bucket>&quot;Highland&quot;</bucket>
              <bucket>&quot;Saint Louis Park&quot;</bucket>
              <bucket>&quot;Marietta&quot;</bucket>
              <bucket>&quot;Hoover&quot;</bucket>
              <bucket>&quot;Mason&quot;</bucket>
              <bucket>&quot;Cliffside Park&quot;</bucket>
              <bucket>&quot;Douglasville&quot;</bucket>
              <bucket>&quot;Baytown&quot;</bucket>
              <bucket>&quot;Greensboro&quot;</bucket>
              <bucket>&quot;Aspen Hill&quot;</bucket>
              <bucket>&quot;White Plains&quot;</bucket>
              <bucket>&quot;Santa Monica&quot;</bucket>
              <bucket>&quot;Meridian&quot;</bucket>
              <bucket>&quot;Bartlesville&quot;</bucket>
              <bucket>&quot;Charlottesville&quot;</bucket>
              <bucket>&quot;Red Wing&quot;</bucket>
              <bucket>&quot;Easton&quot;</bucket>
              <bucket>&quot;Laconia&quot;</bucket>
              <bucket>&quot;San Antonio&quot;</bucket>
              <bucket>&quot;Rosenberg&quot;</bucket>
              <bucket>&quot;Gilbert&quot;</bucket>
              <bucket>&quot;North Las Vegas&quot;</bucket>
              <bucket>&quot;Plymouth&quot;</bucket>
              <bucket>&quot;Spokane&quot;</bucket>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
              <bucket>&quot;Virginia Beach&quot;</bucket>
              <bucket>&quot;Bismarck&quot;</bucket>
              <bucket>&quot;Deland&quot;</bucket>
              <bucket>&quot;Janesville&quot;</bucket>
              <bucket>&quot;North Royalton&quot;</bucket>
              <bucket>&quot;East Cleveland&quot;</bucket>
              <bucket>&quot;Ponca City&quot;</bucket>
              <bucket>&quot;Green Bay&quot;</bucket>
              <bucket>&quot;East Chicago&quot;</bucket>
              <bucket>&quot;Apopka&quot;</bucket>
              <bucket>&quot;Puyallup&quot;</bucket>
              <bucket>&quot;Haltom City&quot;</bucket>
              <bucket>&quot;Leawood&quot;</bucket>
              <bucket>&quot;Eden Prairie&quot;</bucket>
              <bucket>&quot;San Mateo&quot;</bucket>
              <bucket>&quot;Sun City&quot;</bucket>
              <bucket>&quot;University City&quot;</bucket>
              <bucket>&quot;Oklahoma City&quot;</bucket>
              <bucket>&quot;Orange&quot;</bucket>
              <bucket>&quot;Reisterstown&quot;</bucket>
              <bucket>&quot;Hagerstown&quot;</bucket>
              <bucket>&quot;Norwich&quot;</bucket>
              <bucket>&quot;New Orleans&quot;</bucket>
              <bucket>&quot;Las Cruces&quot;</bucket>
              <bucket>&quot;Fort Thomas&quot;</bucket>
              <bucket>&quot;Odessa&quot;</bucket>
              <bucket>&quot;Fairfax&quot;</bucket>
              <bucket>&quot;Groton&quot;</bucket>
              <bucket>&quot;Pittsburg&quot;</bucket>
              <bucket>&quot;Willingboro&quot;</bucket>
              <bucket>&quot;Colorado Springs&quot;</bucket>
              <bucket>&quot;Shelton&quot;</bucket>
              <bucket>&quot;Ferguson&quot;</bucket>
              <bucket>&quot;Homestead&quot;</bucket>
              <bucket>&quot;Anderson&quot;</bucket>
              <bucket>&quot;Norfolk&quot;</bucket>
              <bucket>&quot;Warner Robins&quot;</bucket>
              <bucket>&quot;Syracuse&quot;</bucket>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
              <bucket>&quot;West Islip&quot;</bucket>
              <bucket>&quot;Tulsa&quot;</bucket>
              <bucket>&quot;Glenview&quot;</bucket>
              <bucket>&quot;Colonial Heights&quot;</bucket>
              <bucket>&quot;Allentown&quot;</bucket>
              <bucket>&quot;Citrus Heights&quot;</bucket>
              <bucket>&quot;Draper&quot;</bucket>
              <bucket>&quot;El Dorado Hills&quot;</bucket>
              <bucket>&quot;Saratoga&quot;</bucket>
              <bucket>&quot;Commack&quot;</bucket>
              <bucket>&quot;Prescott&quot;</bucket>
              <bucket>&quot;Hot Springs&quot;</bucket>
              <bucket>&quot;Buffalo&quot;</bucket>
              <bucket>&quot;Tigard&quot;</bucket>
              <bucket>&quot;Eastpointe&quot;</bucket>
              <bucket>&quot;Naperville&quot;</bucket>
              <bucket>&quot;Oxford&quot;</bucket>
              <bucket>&quot;Horn Lake&quot;</bucket>
              <bucket>&quot;Baltimore&quot;</bucket>
              <bucket>&quot;Euless&quot;</bucket>
              <bucket>&quot;Brooklyn Park&quot;</bucket>
              <bucket>&quot;Harlingen&quot;</bucket>
              <bucket>&quot;Toms River&quot;</bucket>
              <bucket>&quot;Rochester Hills&quot;</bucket>
              <bucket>&quot;Parker&quot;</bucket>
              <bucket>&quot;Richfield&quot;</bucket>
              <bucket>&quot;Yakima&quot;</bucket>
              <bucket>&quot;Westfield&quot;</bucket>
              <bucket>&quot;Bossier City&quot;</bucket>
              <bucket>&quot;Brunswick&quot;</bucket>
              <bucket>&quot;Panama City&quot;</bucket>
              <bucket>&quot;Muskego&quot;</bucket>
              <bucket>&quot;Rocklin&quot;</bucket>
              <bucket>&quot;Shakopee&quot;</bucket>
              <bucket>&quot;Lemon Grove&quot;</bucket>
              <bucket>&quot;South Lake Tahoe&quot;</bucket>
              <bucket>&quot;Altoona&quot;</bucket>
              <bucket>&quot;Kearney&quot;</bucket>
              <bucket>&quot;Mesa&quot;</bucket>
              <bucket>&quot;Redlands&quot;</bucket>
              <bucket>&quot;Laurel&quot;</bucket>
              <bucket>&quot;Colchester&quot;</bucket>
              <bucket>&quot;Issaquah&quot;</bucket>
              <bucket>&quot;Willoughby&quot;</bucket>
              <bucket>&quot;South Windsor&quot;</bucket>
              <bucket>&quot;Aloha&quot;</bucket>
              <bucket>&quot;Watauga&quot;</bucket>
              <bucket>&quot;Vestavia Hills&quot;</bucket>
              <bucket>&quot;Commerce City&quot;</bucket>
              <bucket>&quot;Belleville&quot;</bucket>
              <bucket>&quot;Lino Lakes&quot;</bucket>
              <bucket>&quot;Owatonna&quot;</bucket>
              <bucket>&quot;Northglenn&quot;</bucket>
              <bucket>&quot;Emporia&quot;</bucket>
              <bucket>&quot;Castle Rock&quot;</bucket>
              <bucket>&quot;Hazleton&quot;</bucket>
              <bucket>&quot;Rowlett&quot;</bucket>
              <bucket>&quot;Rexburg&quot;</bucket>
              <bucket>&quot;Chattanooga&quot;</bucket>
              <bucket>&quot;Santa Ana&quot;</bucket>
              <bucket>&quot;Pikesville&quot;</bucket>
              <bucket>&quot;Boardman&quot;</bucket>
              <bucket>&quot;Reno&quot;</bucket>
              <bucket>&quot;Dracut&quot;</bucket>
              <bucket>&quot;Goodyear&quot;</bucket>
              <bucket>&quot;West Des Moines&quot;</bucket>
              <bucket>&quot;Greer&quot;</bucket>
              <bucket>&quot;Bettendorf&quot;</bucket>
              <bucket>&quot;Lynchburg&quot;</bucket>
              <bucket>&quot;Batavia&quot;</bucket>
              <bucket>&quot;Scarsdale&quot;</bucket>
              <bucket>&quot;Eugene&quot;</bucket>
              <bucket>&quot;Royal Oak&quot;</bucket>
              <bucket>&quot;Lubbock&quot;</bucket>
              <bucket>&quot;Rutland&quot;</bucket>
              <bucket>&quot;Lake Oswego&quot;</bucket>
              <bucket>&quot;Rye&quot;</bucket>
              <bucket>&quot;New Castle&quot;</bucket>
              <bucket>&quot;Coral Gables&quot;</bucket>
              <bucket>&quot;Oviedo&quot;</bucket>
              <bucket>&quot;Roy&quot;</bucket>
              <bucket>&quot;Prattville&quot;</bucket>
              <bucket>&quot;Metairie&quot;</bucket>
              <bucket>&quot;Fort Dodge&quot;</bucket>
              <bucket>&quot;Santa Rosa&quot;</bucket>
              <bucket>&quot;Shrewsbury&quot;</bucket>
              <bucket>&quot;Kennesaw&quot;</bucket>
              <bucket>&quot;Mcminnville&quot;</bucket>
              <bucket>&quot;Tallahassee&quot;</bucket>
              <bucket>&quot;Spring&quot;</bucket>
              <bucket>&quot;Randallstown&quot;</bucket>
              <bucket>&quot;Medina&quot;</bucket>
              <bucket>&quot;Pharr&quot;</bucket>
              <bucket>&quot;Cranston&quot;</bucket>
              <bucket>&quot;Minot&quot;</bucket>
              <bucket>&quot;Maryville&quot;</bucket>
              <bucket>&quot;Oak Lawn&quot;</bucket>
              <bucket>&quot;Conroe&quot;</bucket>
              <bucket>&quot;Oakton&quot;</bucket>
              <bucket>&quot;Minnetonka&quot;</bucket>
              <bucket>&quot;Fridley&quot;</bucket>
              <bucket>&quot;Maplewood&quot;</bucket>
              <bucket>&quot;San Bernardino&quot;</bucket>
              <bucket>&quot;Lewisville&quot;</bucket>
              <bucket>&quot;Surprise&quot;</bucket>
              <bucket>&quot;Mountain View&quot;</bucket>
              <bucket>&quot;Eureka&quot;</bucket>
              <bucket>&quot;Gulfport&quot;</bucket>
              <bucket>&quot;Amarillo&quot;</bucket>
              <bucket>&quot;Owings Mills&quot;</bucket>
              <bucket>&quot;Goleta&quot;</bucket>
              <bucket>&quot;Waynesboro&quot;</bucket>
              <bucket>&quot;Leander&quot;</bucket>
              <bucket>&quot;Biddeford&quot;</bucket>
              <bucket>&quot;Merritt Island&quot;</bucket>
              <bucket>&quot;Greensburg&quot;</bucket>
              <bucket>&quot;Santa Cruz&quot;</bucket>
              <bucket>&quot;Farmington Hills&quot;</bucket>
              <bucket>&quot;West Valley City&quot;</bucket>
              <bucket>&quot;Friendswood&quot;</bucket>
              <bucket>&quot;Rock Island&quot;</bucket>
              <bucket>&quot;Enid&quot;</bucket>
              <bucket>&quot;Overland&quot;</bucket>
              <bucket>&quot;Upper Arlington&quot;</bucket>
              <bucket>&quot;Kendall&quot;</bucket>
              <bucket>&quot;Augusta&quot;</bucket>
              <bucket>&quot;Broomfield&quot;</bucket>
              <bucket>&quot;Lake Worth&quot;</bucket>
              <bucket>&quot;Herndon&quot;</bucket>
              <bucket>&quot;Salisbury&quot;</bucket>
              <bucket>&quot;Broken Arrow&quot;</bucket>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
              <bucket>&quot;Port Charlotte&quot;</bucket>
              <bucket>&quot;Kearns&quot;</bucket>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
              <bucket>&quot;Ormond Beach&quot;</bucket>
              <bucket>&quot;Oakdale&quot;</bucket>
              <bucket>&quot;Santa Maria&quot;</bucket>
              <bucket>&quot;Raleigh&quot;</bucket>
              <bucket>&quot;Valley Stream&quot;</bucket>
              <bucket>&quot;Englewood&quot;</bucket>
              <bucket>&quot;Rock Hill&quot;</bucket>
              <bucket>&quot;Flower Mound&quot;</bucket>
              <bucket>&quot;East Haven&quot;</bucket>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
              <bucket>&quot;Germantown&quot;</bucket>
              <bucket>&quot;Dubuque&quot;</bucket>
              <bucket>&quot;Silver Spring&quot;</bucket>
              <bucket>&quot;Clarksville&quot;</bucket>
              <bucket>&quot;Lufkin&quot;</bucket>
              <bucket>&quot;Joplin&quot;</bucket>
              <bucket>&quot;Wellesley&quot;</bucket>
              <bucket>&quot;Parkersburg&quot;</bucket>
              <bucket>&quot;Southbury&quot;</bucket>
              <bucket>&quot;Pearl&quot;</bucket>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
              <bucket>&quot;Taylor&quot;</bucket>
              <bucket>&quot;Newport News&quot;</bucket>
              <bucket>&quot;Old Bridge&quot;</bucket>
              <bucket>&quot;Clovis&quot;</bucket>
              <bucket>&quot;Killeen&quot;</bucket>
              <bucket>&quot;Scranton&quot;</bucket>
              <bucket>&quot;Annandale&quot;</bucket>
              <bucket>&quot;Pine Bluff&quot;</bucket>
              <bucket>&quot;Whitehall&quot;</bucket>
              <bucket>&quot;South Orange&quot;</bucket>
              <bucket>&quot;Titusville&quot;</bucket>
              <bucket>&quot;Chester&quot;</bucket>
              <bucket>&quot;Hollywood&quot;</bucket>
              <bucket>&quot;Murrieta&quot;</bucket>
              <bucket>&quot;Battle Creek&quot;</bucket>
              <bucket>&quot;Austin&quot;</bucket>
              <bucket>&quot;Marblehead&quot;</bucket>
              <bucket>&quot;Coos Bay&quot;</bucket>
              <bucket>&quot;King of Prussia&quot;</bucket>
              <bucket>&quot;Asheboro&quot;</bucket>
              <bucket>&quot;Sunnyvale&quot;</bucket>
              <bucket>&quot;Laurinburg&quot;</bucket>
              <bucket>&quot;Highland Park&quot;</bucket>
              <bucket>&quot;Richland&quot;</bucket>
              <bucket>&quot;Bridgeton&quot;</bucket>
              <bucket>&quot;Farmers Branch&quot;</bucket>
              <bucket>&quot;La Porte&quot;</bucket>
              <bucket>&quot;Visalia&quot;</bucket>
              <bucket>&quot;Bend&quot;</bucket>
              <bucket>&quot;The Woodlands&quot;</bucket>
              <bucket>&quot;Wooster&quot;</bucket>
              <bucket>&quot;Chapel Hill&quot;</bucket>
              <bucket>&quot;Cohoes&quot;</bucket>
              <bucket>&quot;Ames&quot;</bucket>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
              <bucket>&quot;Myrtle Beach&quot;</bucket>
              <bucket>&quot;Euclid&quot;</bucket>
              <bucket>&quot;Durham&quot;</bucket>
              <bucket>&quot;Springville&quot;</bucket>
              <bucket>&quot;Jupiter&quot;</bucket>
              <bucket>&quot;Houma&quot;</bucket>
              <bucket>&quot;Catonsville&quot;</bucket>
              <bucket>&quot;Missouri City&quot;</bucket>
              <bucket>&quot;Coon Rapids&quot;</bucket>
              <bucket>&quot;Norwalk&quot;</bucket>
              <bucket>&quot;Maryland Heights&quot;</bucket>
              <bucket>&quot;Palatine&quot;</bucket>
              <bucket>&quot;Orland Park&quot;</bucket>
              <bucket>&quot;Santa Barbara&quot;</bucket>
              <bucket>&quot;Little Rock&quot;</bucket>
              <bucket>&quot;Gastonia&quot;</bucket>
              <bucket>&quot;Harrisonburg&quot;</bucket>
              <bucket>&quot;Weymouth&quot;</bucket>
              <bucket>&quot;Attleboro&quot;</bucket>
              <bucket>&quot;Passaic&quot;</bucket>
              <bucket>&quot;Morgan Hill&quot;</bucket>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
              <bucket>&quot;Clarksburg&quot;</bucket>
              <bucket>&quot;Superior&quot;</bucket>
              <bucket>&quot;North Andover&quot;</bucket>
              <bucket>&quot;Fort Myers&quot;</bucket>
              <bucket>&quot;Manchester&quot;</bucket>
              <bucket>&quot;Cleburne&quot;</bucket>
              <bucket>&quot;Westminster&quot;</bucket>
              <bucket>&quot;Penn Hills&quot;</bucket>
              <bucket>&quot;Cloverleaf&quot;</bucket>
              <bucket>&quot;Iowa City&quot;</bucket>
              <bucket>&quot;Lehigh Acres&quot;</bucket>
              <bucket>&quot;Van Buren&quot;</bucket>
              <bucket>&quot;La Mesa&quot;</bucket>
              <bucket>&quot;Woodland&quot;</bucket>
              <bucket>&quot;Pico Rivera&quot;</bucket>
              <bucket>&quot;Wentzville&quot;</bucket>
              <bucket>&quot;Memphis&quot;</bucket>
              <bucket>&quot;Immokalee&quot;</bucket>
              <bucket>&quot;Prescott Valley&quot;</bucket>
              <bucket>&quot;Fairmont&quot;</bucket>
              <bucket>&quot;Joliet&quot;</bucket>
              <bucket>&quot;Urbana&quot;</bucket>
              <bucket>&quot;Harker Heights&quot;</bucket>
              <bucket>&quot;Oxnard&quot;</bucket>
              <bucket>&quot;Saginaw&quot;</bucket>
              <bucket>&quot;Asheville&quot;</bucket>
              <bucket>&quot;Riverside&quot;</bucket>
              <bucket>&quot;Waterbury&quot;</bucket>
              <bucket>&quot;Redford&quot;</bucket>
              <bucket>&quot;Camden&quot;</bucket>
              <bucket>&quot;Allen Park&quot;</bucket>
              <bucket>&quot;Pueblo&quot;</bucket>
              <bucket>&quot;Lake In The Hills&quot;</bucket>
              <bucket>&quot;Midwest City&quot;</bucket>
              <bucket>&quot;Clearfield&quot;</bucket>
              <bucket>&quot;Muscatine&quot;</bucket>
              <bucket>&quot;Beavercreek&quot;</bucket>
              <bucket>&quot;Beaverton&quot;</bucket>
              <bucket>&quot;Smithfield&quot;</bucket>
              <bucket>&quot;Greeneville&quot;</bucket>
              <bucket>&quot;Cottage Lake&quot;</bucket>
              <bucket>&quot;Ithaca&quot;</bucket>
              <bucket>&quot;Collinsville&quot;</bucket>
              <bucket>&quot;Walla Walla&quot;</bucket>
              <bucket>&quot;Summerville&quot;</bucket>
              <bucket>&quot;Phenix City&quot;</bucket>
              <bucket>&quot;High Point&quot;</bucket>
              <bucket>&quot;Fitchburg&quot;</bucket>
              <bucket>&quot;Brownsville&quot;</bucket>
              <bucket>&quot;Nicholasville&quot;</bucket>
              <bucket>&quot;Kettering&quot;</bucket>
              <bucket>&quot;The Colony&quot;</bucket>
              <bucket>&quot;Parkland&quot;</bucket>
              <bucket>&quot;Camarillo&quot;</bucket>
              <bucket>&quot;Streamwood&quot;</bucket>
              <bucket>&quot;Martinez&quot;</bucket>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
              <bucket>&quot;Corpus Christi&quot;</bucket>
              <bucket>&quot;Depew&quot;</bucket>
              <bucket>&quot;Saint Cloud&quot;</bucket>
              <bucket>&quot;Inkster&quot;</bucket>
              <bucket>&quot;Merrimack&quot;</bucket>
              <bucket>&quot;Mint Hill&quot;</bucket>
              <bucket>&quot;Eau Claire&quot;</bucket>
              <bucket>&quot;Secaucus&quot;</bucket>
              <bucket>&quot;Corvallis&quot;</bucket>
              <bucket>&quot;Wichita Falls&quot;</bucket>
              <bucket>&quot;Port Huron&quot;</bucket>
              <bucket>&quot;Belmont&quot;</bucket>
              <bucket>&quot;Pendleton&quot;</bucket>
              <bucket>&quot;North Little Rock&quot;</bucket>
              <bucket>&quot;Beckley&quot;</bucket>
              <bucket>&quot;Duncanville&quot;</bucket>
              <bucket>&quot;Pomona&quot;</bucket>
              <bucket>&quot;Revere&quot;</bucket>
              <bucket>&quot;Edison&quot;</bucket>
              <bucket>&quot;Indian Trail&quot;</bucket>
              <bucket>&quot;West Scarborough&quot;</bucket>
              <bucket>&quot;Oak Forest&quot;</bucket>
              <bucket>&quot;American Fork&quot;</bucket>
              <bucket>&quot;Bella Vista&quot;</bucket>
              <bucket>&quot;Deerfield Beach&quot;</bucket>
              <bucket>&quot;Hazelwood&quot;</bucket>
              <bucket>&quot;Rock Springs&quot;</bucket>
              <bucket>&quot;Monroeville&quot;</bucket>
              <bucket>&quot;Marysville&quot;</bucket>
              <bucket>&quot;Lake Charles&quot;</bucket>
              <bucket>&quot;Findlay&quot;</bucket>
              <bucket>&quot;Leavenworth&quot;</bucket>
              <bucket>&quot;Park Ridge&quot;</bucket>
              <bucket>&quot;Lawndale&quot;</bucket>
              <bucket>&quot;Naugatuck&quot;</bucket>
              <bucket>&quot;Garner&quot;</bucket>
              <bucket>&quot;Grand Island&quot;</bucket>
              <bucket>&quot;Manitowoc&quot;</bucket>
              <bucket>&quot;Moline&quot;</bucket>
              <bucket>&quot;Burbank&quot;</bucket>
              <bucket>&quot;Mount Prospect&quot;</bucket>
              <bucket>&quot;Dumont&quot;</bucket>
              <bucket>&quot;North Olmsted&quot;</bucket>
              <bucket>&quot;East Point&quot;</bucket>
              <bucket>&quot;Wylie&quot;</bucket>
              <bucket>&quot;Lakeland&quot;</bucket>
              <bucket>&quot;Grand Rapids&quot;</bucket>
              <bucket>&quot;Georgetown&quot;</bucket>
              <bucket>&quot;Ellicott City&quot;</bucket>
              <bucket>&quot;Perth Amboy&quot;</bucket>
              <bucket>&quot;Claremont&quot;</bucket>
              <bucket>&quot;Weatherford&quot;</bucket>
              <bucket>&quot;Muskegon&quot;</bucket>
              <bucket>&quot;Westerly&quot;</bucket>
              <bucket>&quot;Coppell&quot;</bucket>
              <bucket>&quot;Stow&quot;</bucket>
              <bucket>&quot;Sandusky&quot;</bucket>
              <bucket>&quot;Hopkinsville&quot;</bucket>
              <bucket>&quot;Burien&quot;</bucket>
              <bucket>&quot;Dale City&quot;</bucket>
              <bucket>&quot;La Crosse&quot;</bucket>
              <bucket>&quot;Moorhead&quot;</bucket>
              <bucket>&quot;Fremont&quot;</bucket>
              <bucket>&quot;Poinciana&quot;</bucket>
              <bucket>&quot;Wilkinsburg&quot;</bucket>
              <bucket>&quot;Central Islip&quot;</bucket>
              <bucket>&quot;Brandon&quot;</bucket>
              <bucket>&quot;Allen&quot;</bucket>
              <bucket>&quot;Teaneck&quot;</bucket>
              <bucket>&quot;Magna&quot;</bucket>
              <bucket>&quot;Hanover&quot;</bucket>
              <bucket>&quot;Carson City&quot;</bucket>
              <bucket>&quot;Denton&quot;</bucket>
              <bucket>&quot;Butte&quot;</bucket>
              <bucket>&quot;Sudbury&quot;</bucket>
              <bucket>&quot;Gadsden&quot;</bucket>
              <bucket>&quot;Sandy Springs&quot;</bucket>
              <bucket>&quot;Moore&quot;</bucket>
              <bucket>&quot;Daly City&quot;</bucket>
              <bucket>&quot;Boulder&quot;</bucket>
              <bucket>&quot;Oakland Park&quot;</bucket>
              <bucket>&quot;Winchester&quot;</bucket>
              <bucket>&quot;North Pembroke&quot;</bucket>
              <bucket>&quot;Ocoee&quot;</bucket>
              <bucket>&quot;Pocatello&quot;</bucket>
              <bucket>&quot;Hawthorne&quot;</bucket>
              <bucket>&quot;Maple Grove&quot;</bucket>
              <bucket>&quot;Waukesha&quot;</bucket>
              <bucket>&quot;Cary&quot;</bucket>
              <bucket>&quot;New Iberia&quot;</bucket>
              <bucket>&quot;East Lansing&quot;</bucket>
              <bucket>&quot;Bloomfield&quot;</bucket>
              <bucket>&quot;Melrose Park&quot;</bucket>
              <bucket>&quot;Wausau&quot;</bucket>
              <bucket>&quot;Hopatcong&quot;</bucket>
              <bucket>&quot;Coralville&quot;</bucket>
              <bucket>&quot;Coram&quot;</bucket>
              <bucket>&quot;Coventry&quot;</bucket>
              <bucket>&quot;Tupelo&quot;</bucket>
              <bucket>&quot;Lawrence&quot;</bucket>
              <bucket>&quot;Denver&quot;</bucket>
              <bucket>&quot;Edgewood&quot;</bucket>
              <bucket>&quot;Kalamazoo&quot;</bucket>
              <bucket>&quot;Redondo Beach&quot;</bucket>
              <bucket>&quot;Macon&quot;</bucket>
              <bucket>&quot;Dunwoody&quot;</bucket>
              <bucket>&quot;McKeesport&quot;</bucket>
              <bucket>&quot;Topeka&quot;</bucket>
              <bucket>&quot;Sherman&quot;</bucket>
              <bucket>&quot;Saint Peters&quot;</bucket>
              <bucket>&quot;Bethesda&quot;</bucket>
              <bucket>&quot;Glassboro&quot;</bucket>
              <bucket>&quot;Independence&quot;</bucket>
              <bucket>&quot;New Milford&quot;</bucket>
              <bucket>&quot;Plano&quot;</bucket>
              <bucket>&quot;Elmwood Park&quot;</bucket>
              <bucket>&quot;Dearborn&quot;</bucket>
              <bucket>&quot;Prairie Village&quot;</bucket>
              <bucket>&quot;Eagan&quot;</bucket>
              <bucket>&quot;Greenfield&quot;</bucket>
              <bucket>&quot;Fair Lawn&quot;</bucket>
              <bucket>&quot;West Jordan&quot;</bucket>
              <bucket>&quot;Westland&quot;</bucket>
              <bucket>&quot;Paragould&quot;</bucket>
              <bucket>&quot;Goffstown&quot;</bucket>
              <bucket>&quot;Kaysville&quot;</bucket>
              <bucket>&quot;El Mirage&quot;</bucket>
              <bucket>&quot;Encinitas&quot;</bucket>
              <bucket>&quot;Whittier&quot;</bucket>
              <bucket>&quot;Crown Point&quot;</bucket>
              <bucket>&quot;Iselin&quot;</bucket>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
              <bucket>&quot;Sioux Falls&quot;</bucket>
              <bucket>&quot;Roosevelt&quot;</bucket>
              <bucket>&quot;Hamilton&quot;</bucket>
              <bucket>&quot;Great Falls&quot;</bucket>
              <bucket>&quot;Shreveport&quot;</bucket>
              <bucket>&quot;Biloxi&quot;</bucket>
              <bucket>&quot;Lindenhurst&quot;</bucket>
              <bucket>&quot;Bessemer&quot;</bucket>
              <bucket>&quot;Plantation&quot;</bucket>
              <bucket>&quot;Tampa&quot;</bucket>
              <bucket>&quot;Bryan&quot;</bucket>
              <bucket>&quot;Reynoldsburg&quot;</bucket>
              <bucket>&quot;Bethlehem&quot;</bucket>
              <bucket>&quot;Selma&quot;</bucket>
              <bucket>&quot;Woodmere&quot;</bucket>
              <bucket>&quot;Rotterdam&quot;</bucket>
              <bucket>&quot;Altus&quot;</bucket>
              <bucket>&quot;Tewksbury&quot;</bucket>
              <bucket>&quot;Marshfield&quot;</bucket>
              <bucket>&quot;Rockland&quot;</bucket>
              <bucket>&quot;Middletown&quot;</bucket>
              <bucket>&quot;Boynton Beach&quot;</bucket>
              <bucket>&quot;Southaven&quot;</bucket>
              <bucket>&quot;Escondido&quot;</bucket>
              <bucket>&quot;Klamath Falls&quot;</bucket>
              <bucket>&quot;Round Rock&quot;</bucket>
              <bucket>&quot;Seminole&quot;</bucket>
              <bucket>&quot;Bethel Park&quot;</bucket>
              <bucket>&quot;Evans&quot;</bucket>
              <bucket>&quot;York&quot;</bucket>
              <bucket>&quot;Calexico&quot;</bucket>
              <bucket>&quot;Pasco&quot;</bucket>
              <bucket>&quot;Lorain&quot;</bucket>
              <bucket>&quot;Lunenburg&quot;</bucket>
              <bucket>&quot;North Miami&quot;</bucket>
              <bucket>&quot;Terrytown&quot;</bucket>
              <bucket>&quot;East Orange&quot;</bucket>
              <bucket>&quot;Torrance&quot;</bucket>
              <bucket>&quot;Northport&quot;</bucket>
              <bucket>&quot;Bolingbrook&quot;</bucket>
              <bucket>&quot;Stoneham&quot;</bucket>
              <bucket>&quot;La Vergne&quot;</bucket>
              <bucket>&quot;Kingsport&quot;</bucket>
              <bucket>&quot;Elyria&quot;</bucket>
              <bucket>&quot;Norristown&quot;</bucket>
              <bucket>&quot;Midvale&quot;</bucket>
              <bucket>&quot;Palo Alto&quot;</bucket>
              <bucket>&quot;Ogden&quot;</bucket>
              <bucket>&quot;Youngstown&quot;</bucket>
              <bucket>&quot;Hendersonville&quot;</bucket>
              <bucket>&quot;Vicksburg&quot;</bucket>
              <bucket>&quot;Grafton&quot;</bucket>
              <bucket>&quot;Sparks&quot;</bucket>
              <bucket>&quot;Saint Joseph&quot;</bucket>
              <bucket>&quot;Minneapolis&quot;</bucket>
              <bucket>&quot;Hobart&quot;</bucket>
              <bucket>&quot;Renton&quot;</bucket>
              <bucket>&quot;Lake Forest&quot;</bucket>
              <bucket>&quot;Long Branch&quot;</bucket>
              <bucket>&quot;Elkhart&quot;</bucket>
              <bucket>&quot;Bryant&quot;</bucket>
              <bucket>&quot;Hoffman Estates&quot;</bucket>
              <bucket>&quot;Millville&quot;</bucket>
              <bucket>&quot;Warwick&quot;</bucket>
              <bucket>&quot;Taunton&quot;</bucket>
              <bucket>&quot;Erie&quot;</bucket>
              <bucket>&quot;Bremerton&quot;</bucket>
              <bucket>&quot;Walpole&quot;</bucket>
              <bucket>&quot;Fort Worth&quot;</bucket>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
              <bucket>&quot;Frisco&quot;</bucket>
              <bucket>&quot;Council Bluffs&quot;</bucket>
              <bucket>&quot;Highland Village&quot;</bucket>
              <bucket>&quot;Terre Haute&quot;</bucket>
              <bucket>&quot;Montebello&quot;</bucket>
              <bucket>&quot;Hamden&quot;</bucket>
              <bucket>&quot;Lindenwold&quot;</bucket>
              <bucket>&quot;Los Altos&quot;</bucket>
              <bucket>&quot;Nashua&quot;</bucket>
              <bucket>&quot;East Brunswick&quot;</bucket>
              <bucket>&quot;Lenexa&quot;</bucket>
              <bucket>&quot;Westborough&quot;</bucket>
              <bucket>&quot;Seatac&quot;</bucket>
              <bucket>&quot;Granger&quot;</bucket>
              <bucket>&quot;Kenosha&quot;</bucket>
              <bucket>&quot;North Plainfield&quot;</bucket>
              <bucket>&quot;Wayne&quot;</bucket>
              <bucket>&quot;Essex&quot;</bucket>
              <bucket>&quot;State College&quot;</bucket>
              <bucket>&quot;Cheyenne&quot;</bucket>
              <bucket>&quot;Chicopee&quot;</bucket>
              <bucket>&quot;Pensacola&quot;</bucket>
              <bucket>&quot;College Station&quot;</bucket>
              <bucket>&quot;El Centro&quot;</bucket>
              <bucket>&quot;Roselle&quot;</bucket>
              <bucket>&quot;Riverview&quot;</bucket>
              <bucket>&quot;Deltona&quot;</bucket>
              <bucket>&quot;Jersey City&quot;</bucket>
              <bucket>&quot;Spartanburg&quot;</bucket>
              <bucket>&quot;Novi&quot;</bucket>
              <bucket>&quot;Grapevine&quot;</bucket>
              <bucket>&quot;Beaumont&quot;</bucket>
              <bucket>&quot;Melbourne&quot;</bucket>
              <bucket>&quot;Mcallen&quot;</bucket>
              <bucket>&quot;Bridgeport&quot;</bucket>
              <bucket>&quot;Arlington Heights&quot;</bucket>
              <bucket>&quot;Paradise&quot;</bucket>
              <bucket>&quot;Wake Forest&quot;</bucket>
              <bucket>&quot;Littleton&quot;</bucket>
              <bucket>&quot;Irvington&quot;</bucket>
              <bucket>&quot;Asbury Park&quot;</bucket>
              <bucket>&quot;Pepperell&quot;</bucket>
              <bucket>&quot;Kannapolis&quot;</bucket>
              <bucket>&quot;Winter Springs&quot;</bucket>
              <bucket>&quot;New Brunswick&quot;</bucket>
              <bucket>&quot;Neenah&quot;</bucket>
              <bucket>&quot;Greenwood&quot;</bucket>
              <bucket>&quot;Lyndhurst&quot;</bucket>
              <bucket>&quot;El Paso&quot;</bucket>
              <bucket>&quot;Avondale&quot;</bucket>
              <bucket>&quot;Dennis&quot;</bucket>
              <bucket>&quot;San Marcos&quot;</bucket>
              <bucket>&quot;Holyoke&quot;</bucket>
              <bucket>&quot;Danbury&quot;</bucket>
              <bucket>&quot;Pahrump&quot;</bucket>
              <bucket>&quot;Olympia&quot;</bucket>
              <bucket>&quot;Binghamton&quot;</bucket>
              <bucket>&quot;Smithtown&quot;</bucket>
              <bucket>&quot;Hingham&quot;</bucket>
              <bucket>&quot;Milford&quot;</bucket>
              <bucket>&quot;Brooklyn&quot;</bucket>
              <bucket>&quot;Collierville&quot;</bucket>
              <bucket>&quot;Tualatin&quot;</bucket>
              <bucket>&quot;Clayton&quot;</bucket>
              <bucket>&quot;West Seneca&quot;</bucket>
              <bucket>&quot;Fort Smith&quot;</bucket>
              <bucket>&quot;North Babylon&quot;</bucket>
              <bucket>&quot;League City&quot;</bucket>
              <bucket>&quot;Lexington&quot;</bucket>
              <bucket>&quot;Tracy&quot;</bucket>
              <bucket>&quot;Bentonville&quot;</bucket>
              <bucket>&quot;Phoenix&quot;</bucket>
              <bucket>&quot;Townsend&quot;</bucket>
              <bucket>&quot;East Providence&quot;</bucket>
              <bucket>&quot;South Bend&quot;</bucket>
              <bucket>&quot;Paramus&quot;</bucket>
              <bucket>&quot;Duxbury&quot;</bucket>
              <bucket>&quot;El Cajon&quot;</bucket>
              <bucket>&quot;Woodridge&quot;</bucket>
              <bucket>&quot;Channelview&quot;</bucket>
              <bucket>&quot;North Kingstown&quot;</bucket>
              <bucket>&quot;Lawton&quot;</bucket>
              <bucket>&quot;Colonia&quot;</bucket>
              <bucket>&quot;Ewing&quot;</bucket>
              <bucket>&quot;Fort Lee&quot;</bucket>
              <bucket>&quot;Sacramento&quot;</bucket>
              <bucket>&quot;Aiken&quot;</bucket>
              <bucket>&quot;Addison&quot;</bucket>
              <bucket>&quot;Petaluma&quot;</bucket>
              <bucket>&quot;Hopkinton&quot;</bucket>
              <bucket>&quot;Somerville&quot;</bucket>
              <bucket>&quot;Torrington&quot;</bucket>
              <bucket>&quot;Cheshire&quot;</bucket>
              <bucket>&quot;Florissant&quot;</bucket>
              <bucket>&quot;Boca Raton&quot;</bucket>
              <bucket>&quot;Yuba City&quot;</bucket>
              <bucket>&quot;Lombard&quot;</bucket>
              <bucket>&quot;Stevens Point&quot;</bucket>
              <bucket>&quot;Bartlett&quot;</bucket>
              <bucket>&quot;Berea&quot;</bucket>
              <bucket>&quot;West Springfield&quot;</bucket>
              <bucket>&quot;Orem&quot;</bucket>
              <bucket>&quot;Cornelius&quot;</bucket>
              <bucket>&quot;Pompano Beach&quot;</bucket>
              <bucket>&quot;Evanston&quot;</bucket>
              <bucket>&quot;Sugar Land&quot;</bucket>
              <bucket>&quot;Bergenfield&quot;</bucket>
              <bucket>&quot;Tamarac&quot;</bucket>
              <bucket>&quot;Braintree&quot;</bucket>
              <bucket>&quot;Waukegan&quot;</bucket>
              <bucket>&quot;Ocean City&quot;</bucket>
              <bucket>&quot;Winter Garden&quot;</bucket>
              <bucket>&quot;Fords&quot;</bucket>
              <bucket>&quot;Derby&quot;</bucket>
              <bucket>&quot;Central Falls&quot;</bucket>
              <bucket>&quot;Sierra Vista&quot;</bucket>
              <bucket>&quot;Gardner&quot;</bucket>
              <bucket>&quot;Ankeny&quot;</bucket>
              <bucket>&quot;Hanover Park&quot;</bucket>
              <bucket>&quot;Victoria&quot;</bucket>
              <bucket>&quot;Casselberry&quot;</bucket>
              <bucket>&quot;Sunrise&quot;</bucket>
              <bucket>&quot;Bradenton&quot;</bucket>
              <bucket>&quot;Summit&quot;</bucket>
              <bucket>&quot;Port Orange&quot;</bucket>
              <bucket>&quot;Fargo&quot;</bucket>
              <bucket>&quot;Muskogee&quot;</bucket>
              <bucket>&quot;Bowie&quot;</bucket>
              <bucket>&quot;Logan&quot;</bucket>
              <bucket>&quot;Kalispell&quot;</bucket>
              <bucket>&quot;Garfield&quot;</bucket>
              <bucket>&quot;Hattiesburg&quot;</bucket>
              <bucket>&quot;Providence&quot;</bucket>
              <bucket>&quot;Cabot&quot;</bucket>
              <bucket>&quot;Sandwich&quot;</bucket>
              <bucket>&quot;Davie&quot;</bucket>
              <bucket>&quot;Duluth&quot;</bucket>
              <bucket>&quot;Inglewood&quot;</bucket>
              <bucket>&quot;Chambersburg&quot;</bucket>
              <bucket>&quot;Stamford&quot;</bucket>
              <bucket>&quot;Clifton&quot;</bucket>
              <bucket>&quot;Champaign&quot;</bucket>
              <bucket>&quot;Shelby&quot;</bucket>
              <bucket>&quot;Brookfield&quot;</bucket>
              <bucket>&quot;Hillsboro&quot;</bucket>
              <bucket>&quot;Suffolk&quot;</bucket>
              <bucket>&quot;Leominster&quot;</bucket>
              <bucket>&quot;Dickinson&quot;</bucket>
              <bucket>&quot;Richardson&quot;</bucket>
              <bucket>&quot;Swansea&quot;</bucket>
              <bucket>&quot;Ansonia&quot;</bucket>
              <bucket>&quot;Cedar Falls&quot;</bucket>
              <bucket>&quot;Darien&quot;</bucket>
              <bucket>&quot;New London&quot;</bucket>
              <bucket>&quot;Sheboygan&quot;</bucket>
              <bucket>&quot;Bethpage&quot;</bucket>
              <bucket>&quot;Nutley&quot;</bucket>
              <bucket>&quot;Pleasantville&quot;</bucket>
              <bucket>&quot;Ashland&quot;</bucket>
              <bucket>&quot;Palisades Park&quot;</bucket>
              <bucket>&quot;Mentor&quot;</bucket>
              <bucket>&quot;North Haven&quot;</bucket>
              <bucket>&quot;Amesbury&quot;</bucket>
              <bucket>&quot;Crofton&quot;</bucket>
              <bucket>&quot;Wallingford&quot;</bucket>
              <bucket>&quot;Edina&quot;</bucket>
              <bucket>&quot;Greenwich&quot;</bucket>
              <bucket>&quot;Johnson City&quot;</bucket>
              <bucket>&quot;Northampton&quot;</bucket>
              <bucket>&quot;Hemet&quot;</bucket>
              <bucket>&quot;Fall River&quot;</bucket>
              <bucket>&quot;Missoula&quot;</bucket>
              <bucket>&quot;Norwood&quot;</bucket>
              <bucket>&quot;Flagstaff&quot;</bucket>
              <bucket>&quot;Paterson&quot;</bucket>
              <bucket>&quot;Cherry Hill&quot;</bucket>
              <bucket>&quot;Keene&quot;</bucket>
              <bucket>&quot;Pennsauken&quot;</bucket>
              <bucket>&quot;Londonderry&quot;</bucket>
              <bucket>&quot;Foxborough&quot;</bucket>
              <bucket>&quot;West Palm Beach&quot;</bucket>
              <bucket>&quot;Saint Clair Shores&quot;</bucket>
              <bucket>&quot;Hastings&quot;</bucket>
              <bucket>&quot;Wyoming&quot;</bucket>
              <bucket>&quot;Wheaton&quot;</bucket>
              <bucket>&quot;Longmeadow&quot;</bucket>
              <bucket>&quot;Greeley&quot;</bucket>
              <bucket>&quot;Carteret&quot;</bucket>
              <bucket>&quot;Westford&quot;</bucket>
              <bucket>&quot;Parma&quot;</bucket>
              <bucket>&quot;Lees Summit&quot;</bucket>
              <bucket>&quot;Brookline&quot;</bucket>
              <bucket>&quot;Woodbridge&quot;</bucket>
              <bucket>&quot;Guilford&quot;</bucket>
              <bucket>&quot;Hoboken&quot;</bucket>
              <bucket>&quot;Stratford&quot;</bucket>
              <bucket>&quot;Needham&quot;</bucket>
              <bucket>&quot;Beverly&quot;</bucket>
              <bucket>&quot;Billerica&quot;</bucket>
              <bucket>&quot;Bourne&quot;</bucket>
              <bucket>&quot;Bayonne&quot;</bucket>
              <bucket>&quot;Worcester&quot;</bucket>
              <bucket>&quot;New Smyrna Beach&quot;</bucket>
              <bucket>&quot;Ridgewood&quot;</bucket>
              <bucket>&quot;Killingly Center&quot;</bucket>
              <bucket>&quot;Cambridge&quot;</bucket>
              <bucket>&quot;Haverhill&quot;</bucket>
              <bucket>&quot;New Bedford&quot;</bucket>
              <bucket>&quot;Hartford&quot;</bucket>
              <bucket>&quot;Union&quot;</bucket>
              <bucket>&quot;Woburn&quot;</bucket>
              <bucket>&quot;Saugus&quot;</bucket>
              <bucket>&quot;Andover&quot;</bucket>
              <bucket>&quot;Ipswich&quot;</bucket>
              <bucket>&quot;Union City&quot;</bucket>
              <bucket>&quot;Danvers&quot;</bucket>
              <bucket>&quot;Palm Harbor&quot;</bucket>
              <bucket>&quot;Hillside&quot;</bucket>
              <bucket>&quot;Norton&quot;</bucket>
              <bucket>&quot;Palmer&quot;</bucket>
              <bucket>&quot;Newington&quot;</bucket>
              <bucket>&quot;North Bergen&quot;</bucket>
              <bucket>&quot;Parsippany&quot;</bucket>
              <bucket>&quot;Marlborough&quot;</bucket>
              <bucket>&quot;Woonsocket&quot;</bucket>
              <bucket>&quot;Dedham&quot;</bucket>
              <bucket>&quot;Ludlow&quot;</bucket>
              <bucket>&quot;Gloucester&quot;</bucket>
              <bucket>&quot;San Angelo&quot;</bucket>
              <bucket>&quot;New Britain&quot;</bucket>
              <bucket>&quot;Edinburg&quot;</bucket>
              <bucket>&quot;Garland&quot;</bucket>
              <bucket>&quot;Somerset&quot;</bucket>
              <bucket>&quot;Bridgewater&quot;</bucket>
              <bucket>&quot;Abington&quot;</bucket>
              <bucket>&quot;Avenel&quot;</bucket>
              <bucket>&quot;Scotch Plains&quot;</bucket>
              <bucket>&quot;Agawam&quot;</bucket>
              <bucket>&quot;Waltham&quot;</bucket>
              <bucket>&quot;Wilbraham&quot;</bucket>
              <bucket>&quot;Davenport&quot;</bucket>
              <bucket>&quot;Hanson&quot;</bucket>
              <bucket>&quot;South Vineland&quot;</bucket>
              <bucket>&quot;Fairhaven&quot;</bucket>
              <bucket>&quot;East Longmeadow&quot;</bucket>
              <bucket>&quot;Pawtucket&quot;</bucket>
              <bucket>&quot;Wyckoff&quot;</bucket>
              <bucket>&quot;Yarmouth&quot;</bucket>
              <bucket>&quot;West Orange&quot;</bucket>
              <bucket>&quot;Phillipsburg&quot;</bucket>
              <bucket>&quot;Roanoke&quot;</bucket>
              <bucket>&quot;Holden&quot;</bucket>
              <bucket>&quot;West Milford&quot;</bucket>
              <bucket>&quot;Lowell&quot;</bucket>
              <bucket>&quot;Sayreville&quot;</bucket>
              <bucket>&quot;Newport&quot;</bucket>
              <bucket>&quot;Kingston&quot;</bucket>
              <bucket>&quot;Malden&quot;</bucket>
              <bucket>&quot;Lynn&quot;</bucket>
              <bucket>&quot;Belchertown&quot;</bucket>
              <bucket>&quot;Antioch&quot;</bucket>
              <bucket>&quot;New Haven&quot;</bucket>
              <bucket>&quot;Rahway&quot;</bucket>
              <bucket>&quot;South Plainfield&quot;</bucket>
              <bucket>&quot;Winthrop&quot;</bucket>
              <bucket>&quot;Branford&quot;</bucket>
              <bucket>&quot;Easthampton&quot;</bucket>
              <bucket>&quot;Glastonbury&quot;</bucket>
              <bucket>&quot;Pearland&quot;</bucket>
              <bucket>&quot;Stoughton&quot;</bucket>
              <bucket>&quot;Wakefield&quot;</bucket>
              <bucket>&quot;Webster&quot;</bucket>
              <bucket>&quot;Natick&quot;</bucket>
              <bucket>&quot;Acton&quot;</bucket>
              <bucket>&quot;Springdale&quot;</bucket>
              <bucket>&quot;Trumbull&quot;</bucket>
              <bucket>&quot;Rockville&quot;</bucket>
              <bucket>&quot;Linden&quot;</bucket>
              <bucket>&quot;Tinton Falls&quot;</bucket>
              <bucket>&quot;Vineland&quot;</bucket>
              <bucket>&quot;Tiverton&quot;</bucket>
              <bucket>&quot;Willimantic&quot;</bucket>
              <bucket>&quot;Falmouth&quot;</bucket>
              <bucket>&quot;Newburyport&quot;</bucket>
              <bucket>&quot;Scituate&quot;</bucket>
              <bucket>&quot;Waterford&quot;</bucket>
              <bucket>&quot;Milton&quot;</bucket>
              <bucket>&quot;Rutherford&quot;</bucket>
              <bucket>&quot;Kearny&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1reb8q41q7a2p718p1ttw1nj3jwv].[io:City Set:nk]' />
              <text column='[federated.1reb8q41q7a2p718p1ttw1nj3jwv].[sum:Profit:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>Gelir &lt;</run>
                <run>[federated.1reb8q41q7a2p718p1ttw1nj3jwv].[sum:Profit:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1reb8q41q7a2p718p1ttw1nj3jwv].[none:City:nk]</rows>
        <cols>[federated.1reb8q41q7a2p718p1ttw1nj3jwv].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{B8158B67-9EED-4300-9E55-1F988A5DD9BA}' />
    </worksheet>
    <worksheet name='emoji'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tourist satisfaction results (1)' name='federated.1vihksn1b5e2pi1dfevof00sgva9' />
          </datasources>
          <datasource-dependencies datasource='federated.1vihksn1b5e2pi1dfevof00sgva9'>
            <column caption='Survey_Distinct' datatype='integer' name='[Calculation_361413899069267968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([SURVEY_Participant_ID])' />
            </column>
            <column caption='Rating_with_words' datatype='string' name='[Calculation_361413899231850500]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [RATING]&#13;&#10;WHEN 1 THEN &apos;Very Dissatisfied&apos;&#13;&#10;WHEN 2 THEN &apos;Dissatisfied&apos;&#13;&#10;WHEN 3 THEN &apos;Neutral&apos;&#13;&#10;WHEN 4 THEN &apos;Satisfied&apos;&#13;&#10;WHEN 5 THEN &apos;Very Satisfied&apos;&#13;&#10;END' />
            </column>
            <column caption='Happy or Sad' datatype='string' name='[Calculation_361413899233570821]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [RATING] &gt; 3 OR  [RATING] = 4 THEN &apos;Happy&apos; &#13;&#10;ELSE &apos;Sad&apos; &#13;&#10;END' />
            </column>
            <column datatype='string' name='[Question]' role='dimension' type='nominal' />
            <column caption='Rating' datatype='integer' name='[RATING]' role='measure' type='quantitative' />
            <column caption='SURVEY Participant ID' datatype='integer' name='[SURVEY_Participant_ID]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_361413899231850500]' derivation='None' name='[none:Calculation_361413899231850500:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_361413899233570821]' derivation='None' name='[none:Calculation_361413899233570821:nk]' pivot='key' type='nominal' />
            <column-instance column='[Question]' derivation='None' name='[none:Question:nk]' pivot='key' type='nominal' />
            <column-instance column='[RATING]' derivation='None' name='[none:RATING:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_361413899069267968]' derivation='User' name='[usr:Calculation_361413899069267968:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[Action (Question,Rating)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_783256A8CEDA44EDA04D437F94B278D8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Question]' />
              <groupfilter function='level-members' level='[none:RATING:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vihksn1b5e2pi1dfevof00sgva9].[Action (Question,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <shape column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899233570821:nk]' />
              <text column='[federated.1vihksn1b5e2pi1dfevof00sgva9].[usr:Calculation_361413899069267968:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='circle' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Question:nk]</rows>
        <cols>([federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899231850500:nk] / [federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899233570821:nk])</cols>
      </table>
      <simple-id uuid='{DFF16BE5-C208-4CE1-953D-67656AD6C33D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Turist Satisfaction Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Tourist satisfaction results (1)' name='federated.1vihksn1b5e2pi1dfevof00sgva9' />
      </datasources>
      <datasource-dependencies datasource='federated.1vihksn1b5e2pi1dfevof00sgva9'>
        <column caption='IsNull' datatype='boolean' name='[Calculation_361413899124981763]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='ISNULL([RATING])' />
        </column>
        <column-instance column='[Calculation_361413899124981763]' derivation='None' name='[none:Calculation_361413899124981763:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97102' id='18' param='vert' type-v2='layout-flow' w='98590' x='705' y='1449'>
            <zone fixed-size='24' h='5797' id='19' is-fixed='true' type-v2='title' w='98590' x='705' y='1449'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='91305' id='9' param='horz' type-v2='layout-flow' w='98590' x='705' y='7246'>
              <zone h='91305' id='7' type-v2='layout-basic' w='84493' x='705' y='7246'>
                <zone h='50355' id='6' name='3) Compare rating results by questions. It would be great if you use graph for Likertscaled data._1' w='44141' x='705' y='7246'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='40950' id='11' name='5) Create a map of countries by average rating._2' w='24934' x='39912' y='57601'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='50355' id='13' name='4) Show demographics of survey participants._3' w='40352' x='44846' y='7246'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='40950' id='15' name='7) Why some surveys are invalid? Which questions caused it?_1' w='20352' x='64846' y='57601'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='40950' id='34' name='emoji' w='39207' x='705' y='57601'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='91305' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='14097' x='85198' y='7246'>
                <zone h='26449' id='10' name='3) Compare rating results by questions. It would be great if you use graph for Likertscaled data._1' pane-specification-id='0' param='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:RATING:ok]' type-v2='color' w='14097' x='85198' y='7246'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='11775' id='12' name='5) Create a map of countries by average rating._2' pane-specification-id='0' param='[federated.1vihksn1b5e2pi1dfevof00sgva9].[avg:RATING:qk]' type-v2='color' w='14097' x='85198' y='33695'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='11956' id='14' name='4) Show demographics of survey participants._3' pane-specification-id='0' param='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Gender:nk]' type-v2='color' w='14097' x='85198' y='45470'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='16123' id='16' name='7) Why some surveys are invalid? Which questions caused it?_1' param='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899124981763:nk]' type-v2='filter' w='14097' x='85198' y='57426'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='11956' id='35' name='emoji' pane-specification-id='0' param='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899233570821:nk]' type-v2='shape' w='14097' x='85198' y='73549'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>Turist Satisfaction Dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='55' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97102' id='54' param='vert' type-v2='layout-flow' w='98590' x='705' y='1449'>
                <zone fixed-size='24' h='5797' id='19' type-v2='title' w='98590' x='705' y='1449'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50355' id='6' is-fixed='true' name='3) Compare rating results by questions. It would be great if you use graph for Likertscaled data._1' w='44141' x='705' y='7246'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='26449' id='10' name='3) Compare rating results by questions. It would be great if you use graph for Likertscaled data._1' pane-specification-id='0' param='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:RATING:ok]' type-v2='color' w='14097' x='85198' y='7246'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50355' id='13' is-fixed='true' name='4) Show demographics of survey participants._3' w='40352' x='44846' y='7246'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11956' id='14' name='4) Show demographics of survey participants._3' pane-specification-id='0' param='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Gender:nk]' type-v2='color' w='14097' x='85198' y='45470'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40950' id='34' is-fixed='true' name='emoji' w='39207' x='705' y='57601'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11956' id='35' name='emoji' pane-specification-id='0' param='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899233570821:nk]' type-v2='shape' w='14097' x='85198' y='73549'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40950' id='11' is-fixed='true' name='5) Create a map of countries by average rating._2' w='24934' x='39912' y='57601'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11775' id='12' name='5) Create a map of countries by average rating._2' pane-specification-id='0' param='[federated.1vihksn1b5e2pi1dfevof00sgva9].[avg:RATING:qk]' type-v2='color' w='14097' x='85198' y='33695'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16123' id='16' mode='checkdropdown' name='7) Why some surveys are invalid? Which questions caused it?_1' param='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899124981763:nk]' type-v2='filter' w='14097' x='85198' y='57426'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40950' id='15' is-fixed='true' name='7) Why some surveys are invalid? Which questions caused it?_1' w='20352' x='64846' y='57601'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{39416AE0-74E7-49FA-8595-F08EA283DF9A}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Sales and Profit difference task'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1reb8q41q7a2p718p1ttw1nj3jwv].[io:City Set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1reb8q41q7a2p718p1ttw1nj3jwv].[City Set]</field>
            <field>[federated.1reb8q41q7a2p718p1ttw1nj3jwv].[io:City Set:nk]</field>
            <field>[federated.1reb8q41q7a2p718p1ttw1nj3jwv].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DF21384F-B0A3-4A5D-9828-2C795A5B3BA7}' />
    </window>
    <window class='worksheet' name='1) Show number of surveys.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899124981763:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B48D3FE1-D19E-4895-9DA0-103BDF0583C1}' />
    </window>
    <window class='worksheet' name='2) Show average rating.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EC310180-92FE-46D0-972C-6E715163BC0C}' />
    </window>
    <window class='worksheet' name='3) Compare rating results by questions. It would be great if you use graph for Likertscaled data._1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:RATING:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[avg:RATING:qk]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Question:nk]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:RATING:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9C50F727-6466-4593-8171-82DB6417F7D2}' />
    </window>
    <window class='worksheet' name='3) Compare rating results by questions. It would be great if you use graph for Likertscaled data_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:RATING:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[avg:RATING:qk]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Country:nk]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Question:nk]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:RATING:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{E538B19A-5E8C-4C14-B68E-561FCA505C1A}' />
    </window>
    <window class='worksheet' name='4) Show demographics of survey participants._1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Age (bin):ok]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Age (bin):qk]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899103088641:ok]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Country:nk]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{78770046-FDC5-4D90-9D2C-4E51C10844D6}' />
    </window>
    <window class='worksheet' name='4) Show demographics of survey participants._2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Age (bin):ok]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Age (bin):qk]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899103088641:ok]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Country:nk]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{CFF77941-D40E-40A5-9832-D576A858D833}' />
    </window>
    <window class='worksheet' name='4) Show demographics of survey participants._3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Age (bin):ok]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Age (bin):qk]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899103088641:ok]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Country:nk]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{0DB1679B-ED8B-4C1A-9333-C789E5A92217}' />
    </window>
    <window class='worksheet' name='5) Create a map of countries by average rating._1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3E8F9D62-F640-4D58-A8F6-636E9DFF9BB9}' />
    </window>
    <window class='worksheet' name='5) Create a map of countries by average rating._2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vihksn1b5e2pi1dfevof00sgva9].[avg:RATING:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[avg:RATING:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{2AB09A5C-EC6D-4F23-ABCE-3D8C725DD5BB}' />
    </window>
    <window class='worksheet' name='6) Add one tourist picture with the mood (happy or sad) according to the surveyresults.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:RATING:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B286811F-F9DA-4A18-ADF9-0E908EF0C6DD}' />
    </window>
    <window class='worksheet' name='7) Why some surveys are invalid? Which questions caused it?_1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899124981763:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899124981763:nk]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Question:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{97CEC946-1726-442A-9E5A-502F050B7448}' />
    </window>
    <window class='worksheet' name='7) Why some surveys are invalid? Which questions caused it?_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899124981763:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899124981763:nk]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:SURVEY_Participant_ID (Survey Participants):ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{3D52E794-A27A-4AB1-ABD9-B670E01E5FD2}' />
    </window>
    <window class='worksheet' name='emoji'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899233570821:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899231850500:nk]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Calculation_361413899233570821:nk]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Question:nk]</field>
            <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:RATING:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{36FF52E0-6261-4A6C-863E-5BC47F993B18}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='3) Compare rating results by questions. It would be great if you use graph for Likertscaled data._1'>
          <highlight>
            <color-one-way>
              <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:RATING:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='4) Show demographics of survey participants._3'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1vihksn1b5e2pi1dfevof00sgva9].[none:Gender:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='5) Create a map of countries by average rating._2' />
        <viewpoint name='7) Why some surveys are invalid? Which questions caused it?_1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='emoji'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6558C24A-1741-4E40-A102-B9794340E073}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='40' name='1) Show number of surveys.' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='24' name='2) Show average rating.' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAABcklEQVRYhWP8////f4YRDJgG2gEDDUYDYKAdMNBgNAAG2gEDDUYDYKAdMNBgNAAG2gED
      DUYDYKAdMNBgNAAG2gEUg4dLGeItTRiiFz7EoeAPw7vzCxlKQhwZLE1MGCwdQxjqtj1n+AOV
      HeIB8Ilh26RdDPap7riVPF3J0DTvB4N/91aGw2fOMBxcWcEgvLSJYeNbiPSQDoBP+zoZNmvX
      M8SpsOBWJB7O0DM5ncFWkYuBhYGBgU3MhMHXWYjhyxeI9NANgD9nGWYulWLIjVNiwON9BgYW
      FhT5P8+3Mcy5pMXgIA/hD9EA+MNwbeZCBq7idAYtvL5HBr8YHm+uY0ibzsCQ2xPNAPU/A+NQ
      HBE61mzJkLfxN6aEei7D2qXxcM9BwB+Gs/0lDBe9uxiS1Ngw9fwfDuBg3f+oBQ+wy71Z87+k
      /eT/3zi0DtEsgB88XBiNqBZvXmM4siaLwcLEhMEECdcfgkgPySxATTAsUwApYMQHAABGLlaD
      xlUn7wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='3) Compare rating results by questions. It would be great if you use graph for Likertscaled data._1' width='192'>
      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
      VikwadQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='3) Compare rating results by questions. It would be great if you use graph for Likertscaled data_2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='4) Show demographics of survey participants._1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='4) Show demographics of survey participants._2' width='192'>
      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
      IPxNzgIJX/t/mPLdkymRAHEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='4) Show demographics of survey participants._3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='5) Create a map of countries by average rating._1' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='5) Create a map of countries by average rating._2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAG1ElEQVR4nO3c22+bdx3H8c/jQ+zYzmFuEidLq6ZpmzREXUXoyg6lN0gbIIGQJu1mF/wH
      /CfcIHHBPzBukMZuJqYJcUMl2KRCSJsuXduFLkmT5mA7duKzHy44dLBIuCL2Un3er8ufZecb
      6Xnr+f2eWAnCMAwFmIp83QMAXycCgDUCgDUCgLXYUYutVlvbhXKvZwF67sgAtvIlvfnTX/R6
      FqDn2ALBGgHAGgHAWscBRGNxvZDue/rGWFzjI0MaTsWlSFQTI0N6cWRA8aArcwJdceQh+KsC
      LXx7QTcGCvrZb1ckSXOz05oajOiFTEy/u1fSj2czurtdVilfUqPVxYmBY9RRAJlTY8o2dvSw
      +HTtzp0VrWVP6eVzAxoaTKhak0r5okpc/HiOdBTAW28sSPsFXZpI6k9Lj7RRbig7ntPCSEw3
      F/+mZiSu/aGUpi9d0JXSLS3utrs9N3AsOgrg3V9/pEgyrR9cHtVeJK3Zsbrmr31Dw61DjWQH
      tLRV08sXx5SMh3qvzMWP50dw1NehN3aK/CEMFngMCmsEAGsdnQESQ6f0k+9eUrW4r+XHBW0+
      2tJaua5IX0Izoyl9up7v9pxAV3QUwLX5F/Xe+ze13ZJmZqZ1/ZWXFFYLev+TdUWDUKdPT+pb
      szmF+S19tFLW96/PqLq5oQ8X18VTUZxkHW2B+iPSvx7uhJFAD+7e00orrtOJpM7nBjSZG9bi
      rdtqJIbUl+hTMhrRq9+8qFSCHRZOto7uAH9ZK+mtG3Na3T1QLWhre7+mZL3579dbtZr2Kk3V
      6k0NjmbVKu5pp39UCvheBE62jh+D5sZOKR00tFWsqlFvKEj0Kaw1lUxE1AgD1Wp1pZIJVZqh
      zuYG1ahUtb5XVpv/OYETrMPvAklbT3b/c6FSkyTVK093+eV/rj1c2zmG0YDuY5MOawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAa7Gj
      FpPxmF5/abrXswA9d2QA7UhEheFMr2cBeu7IAJrtth5uF3s9C9BznAFgjQBgjQBg7cgzwFGm
      ps7pzWxNv7y1IUmanTqjaxMZNQ5L+v1qSVfnpvRkZVGf5Ls2K3DsOroDxGJJzWcj2qo9XXv4
      xbre/fgzPW4Eqpb39eGDXaW4n+A509El++r8Wa1tFjSYSigZCf7xxlifblyc0Gerj1VshWq2
      w64OCnRDR1ug3WJZY9lh5QaTGkwllGo2dGXunBp72xoeSKsSNDQ5PqizYVXDpbwK9Xa35waO
      RUcBLK+uazkItPggpmJDGo5Jy48ea6z/S28vbuvP3ATwnOn4EKwwVL7SkCTtNSVVC9r60sv5
      g8PjnQzoAY6tsNbRHeD65VnNZRM6KJX0we1VFer/vdeJ6lIupU+3Sl0YEeiejgL4w9I9Ja9M
      6Y+LnyvSn1A8UlO6P6lqtaF0KqlMNKrJoaRWiw31tepKZAaUS0j3dipKR5vabwVKR6T9eqvb
      vw/wTJ55CzR/ZlxDyagWLkxqPD2oH14+o3ggTeRyeuN8Vol0Rm9fndH3rs7p9fF+vTY9psnR
      EZ3OdH7cAHrlmQMIg0DxSFRjAwlJbS19vqH7+Yr2imXF+5OKR6Iq7u7oVzfvaqVwoHVldCPX
      p9V87X9+NtBrHQYQ6v7jPdUk3V7f02tzZ/Vkc0f5alVf7FcltXRnbUsfLD9RWlX9tdjSd86P
      SG1pJ3+onXJJhzwixQkUhGH4lUtzs3igH/38N8fw8VFduzCqpQebqhAATqAub8xb+vj+Znd/
      BPB/4O8AsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsBY7ajHVF9c7r8z1ehag5/4OyASm8UGScScAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='6) Add one tourist picture with the mood (happy or sad) according to the surveyresults.' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='7) Why some surveys are invalid? Which questions caused it?_1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAUUklEQVR4nO3daXAU553H8W/33KdG10ggECBAgEDmBkGMuQnZshPv2qlK7YukapN9sVX7
      Yt9s1b7Ji619vW+3KlX7Ilvl1MabpOJKNl7HFjYEDJhwIyEJdF+jY6QZjeaenu59YYONQWGc
      9Ayy+v+pogrNSP1/WupfP91P9/SjGIZhIIQFKYqiqC+6EUK8SBIAYWkSAGFpEgBhaRIAYWkS
      gGXDIDrSzc9/9hbnb/ShlzI2VyyQyWlg6GTSGfSyt3HlkQAsF/l5fvHOJU6+/ibpu+9ye2KR
      RDKFXsiwmM6RS8YYHhklldNILUSZnJln7n4n//6zTuZjcW7f6iZfzBMZH2VqLoFezDEbiTA6
      OkGmUHzRa7ds2V90A8Sn9MUoxboNVPvctG1Zw8fd3fTrGV5t89M54SV98zdMZyHYso+a2R5s
      rYdos8VZnC8Qj8fpejiIzxbl3oRGdmKIb7xxgv976yrNDQVCL/0VJ/c0v+hVXJakB1gmVH8N
      6vwoC+kcDwcjtKytR9M00ukURT3LxHSWIyfPcuilzbQdPMBofx/hNetYtX4rG1aFAJidW2Dr
      ng621GrMJKFuzWb2tregZQsveO2WLwnAcuGq4/Uzu3nvV29zeTBFU7iWuuIcV/sTNIeb+PZr
      L3P/XjcLmQKphRiNTWtwNW1nXbaXm0Nxtm5uYf+hw4x88numaw6wp6mazRsb8dc10dQQeNFr
      t2wpcivE8pPPplEcbhw22T+Vk6IoSkUD8KiUoiiVKinEkip+L5CmaZUsJ8RzSR8rLE0CICxN
      AiAsTQIgLE0CICxNAiAsTQIgLE0CICxNAiAszTK3QxuGQbGkT5mUTlUUVFVu6/g6s0wAekej
      /MtPzpm6zB+9uofXDreaukxRWXIIJCxNAiAsTQIgLE0CICzNvAAYBpGBbkZmF9Hzi1w+f46+
      8Tnk42ZiOTMtALlklL4HYyykFum5e4+New+xONhNUp7IIZYxU4ZBDV1jZHiCltZNJICi00Ot
      1wMNHuJp8Hi0T8fhi0V0XX/8kchfXuhlKpYyowkABDxOfvDN9me+VyiY/2m0oqaRz+dNX66o
      HFMCoOXiPHgwgK7nSXob2VzrJpkvEI0VWL0R7PbPy9jt9scBuN0/Td/YnBlNAKCuysvfv7b3
      me85HOZf8rDZ7TidTtOXKyrHlK3C4anj1TfeIBObIao5CDtzfHzpPFVrtxKyzKU28XVk6ubp
      qQ6z9rP/nzjdaOaihSgLGQYVliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQ
      liYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYm
      ARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQlmbSFElFBu/fZCCyQEvbHppDOlev3ia0
      ro32TatRzCgiRBmY1AMoNKxv49jhXUyPjnO/5yE7Ol7GmBkkYf7UXEKYxpQeQFFVjNQ0H916
      SNOWXeiLkwTdLhprXSQy4FtikjzdMHsSVWPJSetkkjzxLKYEQC8WMbz1nDxez7U/duNyGsSz
      OSKzOTZsArvt2ZPkqYrZB0fKkpPWySR54llM2ioMJvvvMRrN0NK2i3XVClevXqKmpZ2gzZwK
      QpSDKQFQbXa27j7M1i+8duTEKTMWLURZyTCosDQJgLC0EgNQIB5LYhgGidgCxfK2SYiKKSEA
      GqMPb/DWf/2au/du887//I5k+dslREWUEACdhbl5Eok409NztB87QrD87RKiIkoYBXLS3nGc
      jNHEvoPb6b5xjxxrcZe/bUKUXYnnAHn67nUzPR3h3t0+CuVtkxAVU2IAqjj2yiY+vvgJW44c
      wV/eNglRMSUGIMOVC9eIJxbou3OfTHnbJETFlHgl2MBRs56/ffUUNlVF7n4RK0WJPYCBIxfl
      7bd/zjv/e0l6ALFilNAD5BkbnqNt/0HShSIOVxBH+dslREWUEAADjALjQyNkFAVFTdK8uVlC
      IFaEEg6B7Pi8eUYiBdq2byUzHUE+AiJWihJ6gAJ9t+/Q0zuI05umuqVNhkHFilFCANwc+uZf
      46zupUqdpytZkA+5ixWjxFGgBA/uT3Luehfq0EPi5W2TEBVT0kmwpoVoDsdIhY7j0hJyM5xY
      MUoIQIpbV+8SmUoSGfgIX6iFfaX9oBDLXgnbsZ+9HXtp3rgO1R2krjog5wBixXhuAAqpWX7x
      378g7wqh5xao3niY14/vlBCIFeG5AZjs7SK88wwn920CPcOvf/oOC8d3EqpE64Qos+cGoFjM
      cvndt7l70QMYLETtHK1Aw4SohOcGYMP+s/x4/9nHX6fjESYGZqjdGC5rw4SohOdeB1AU5Yl/
      2cUZhkfnKtE2Icqu5NuhjUcPslVUVFVOgcXKUOJwfprOX/4fRng17Tu2sn+Pp7ytEqJCSuwB
      fBx79RTFqW5+8h//yR9u9cnDscSKUGIPsMA7b/2Khr1H+edvr2bg7gAFQB78LL7uSuwBguzc
      vQ6tYPDw4TA7Du6U5wKJFaHkHuCP9/pAUckoUda9tIPq8rZLiIoo+RxgVa2Hwf6rTPtqn74b
      1Cgy+uA2H7z/PncfTpKJT3Lu/fe51jWE2ZMgCWGmEnuAIg1r9vDDjmbCddVPH/sbEGzYwPH1
      m7hzZ5CeRIb9rxxj4s4NYtoGauTWUbFMlbhp2nHbclz4/W+wB9bz6uvHeGIgVLXhdSr09vSz
      tnULUyO9eB0OakJ2UhkIyiR5YpkquQeYGh9nPr5IlU9/6k5QQy/w8MEw67fuwOe0Ec1niCbT
      jE5laNsMdlUmyRPLU4lbRYasYx3/8I9/8+yN1jAoZOa4fOFD/HVr2f/STm5cuUZ96x78MgeN
      WMZKDICHxbFrXLjuZHUoRMuXnguk2Jzs6jj+xE90HH3yayGWo5L3zxt37MaeXSAeT8rIjlgx
      SuwBNKZGR5hMZVjMR2jf3yYPyBUrQokB8HH6u9/D0PP87ue/xfzxFCFejOcHwDAwSNP5y98y
      mc4RWLUFXwUaJkQlPPccIDs/xs2+OY6d6iAZm0NxemRyYbFiPHdbnhocJKPBpXff4/D3foR9
      tI+FSrRMiAp4bgDCG9bSf+VdurVV7KixYwT9eCvRMiEq4LnnAN66jXz/79aDoqIoOmfOnpIR
      ILFilDQKpNoe3f5mw+2Wj8GIlUPOZ4WlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkA
      hKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISl
      mRMAo8h4fzcXL14nCyRnhvj9e+/xh+s98ih1sayZ1AOo1DW10Bh0ogP9Y7McOXGK1UqCuYI5
      FYQoB3MmzlIU3B4P6mezJ6l2Bw6bjYBPJZMDTZFJ8sTyZE4ADJ1UMsFiMokvkcSl5xiejDAz
      lWN3q0ySJ5Yvk84BdKYnRsjb7UxPTNGyYyf5uSnWt+/CK6fZYhkzZ7eo2mnZupOWL7y0fdce
      UxYtRDnJ/llYmgRAWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFia
      BEBYmgRAWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRA
      WFpZAmAYOtlMhoJWLMfihTCN+Y9MBmYHu7g9FMWw+Th57CB2sx8CLYRJytIDTCYKHD9+nO11
      KrPZclQQwhxl6QEeURQsO0XSzz64S/fwrGnLs6kq//bD4898751LvVzrmTCtFsCPv/8KHpfj
      qddzBY1//ekFU2vtbV3NG0e3PfO9czeGOHdz0NR6//RmB+FqH1CmADQG7Fy8dJGi4ebY9nJU
      WP5GpxfoHjIzAEsfR05GF02tBVAsPnvXpeuG6bVW1fiXfG8mnjK9Xu4LswWVJQANG3fgb0hh
      d3txyPG/WMbKEgBFseEPBB9/bXxpLrBHX7uddrwu85rgddmfqvWIqiim1gJw2JQl67kc5q6b
      3aYuWctpt5m+bmAsWc/sWk6HbclaDptqej2Fz7dBxViqsomKxeLjSfJUVX08R1gl6tpstorV
      quS6VVIlf4+6rgOgquW/ROVwOJSyngQ/8uiXZxjGE5PkldujepWiqmpF/nCVVsnfo67rGIZR
      scBVbuuAiq3Ui6hX6XWrpEqum6IoFe1FK7q7enSIkIlPMzq98GctwzAMYrHYl17VmJ2Zf2Y9
      0JkeG2Ih/fx5gov5BNH4kxcuYrHYU8en0WiUov7ka4qioOTiXL1yhRt3eshqFRgANgr03r7O
      ra6H5HIZYouZspR5slcziAz2cPnyZS5f/oTp+TliiZxptRRFAS3DbDwFQCY+w6LpUzHrDPfc
      Bl7IvUA6EwP9DI6O81VvlJifGGexUGRifPzxa5GJEbKFLAP9Y8+uphUYGBpgfCLyJ5c9OjJE
      ITXDcCT5xOtjY5+Pr+eT80zOxhkeHkTT9KcXsjiBEt5Gox96Bj5vT3ximHihlDX8ambu36FQ
      t46mWjfZRIyx2fhXXILGyPA4X/UssHb1Ouq8OlVrNlHtSDE2k1rye+eH7jP1VS+G2mD04QAF
      A/ofDmN75nGKwezYCKkv7NcMXaent/f5y89OE0kHgAofAgHohRxxW5B17gzRZIGZrotMLGi0
      7mhn5O51iv4GWpuCdHX1obnD7GlWudo7w5aXDuBKzFAbqmd6qIuxsREaN+3BkZrAX1e/ZL18
      MoK/fjOZhTiLMxrDaT/r1WkmHM3Md33EZNLBy8ePMx2JUB8MAzpD965yu3+cVa0deLPznO/8
      PVmligPbVzOf/dOHA6rNhg0VJRPnfOcDdG8ta/QswXADlz44R8pew/aWBrru3iNLFYcPNPGH
      i/dZ09pOLVN0D82zbe/LbFkTYqLvBrcGZlE91ZxodfOr61GCaoa9R7/F6qCd0JrVXL90jVTT
      ZvZuCjF67Y9MdGVYves0jF8jslDA17CJOmOcwRmNgt3PiZdCfHhlFMWmcOjYQaYmo/hzk3w0
      uIC7qLHv4G7u3rhJITnLhld+QFv4y2uo4HR78Xk9FHx+nPYMA3evMt6bY8OOIyTHbjERXWTz
      vuO0NXm5c/0a0WCUA62r6e3po6Ap7DrSzvSgwcaGIlO6h63NjU9WUD0EvUWSqSQZw4k9F+WD
      9y+RdAQ4eaiVy5f78K5qoj6boC7k59rly8RTKtu2N3Pt2k1iaQ0vOlvbW+jpnmDnzlamH97i
      Rv8MDk+QtYEkfQ/Sn/69/oxt+C+SiY3Qc6+X2/cHGIuMkNbrOX36FHWuNLUbDnDiG/uIRYZR
      PFXUeBy46lYRDvlJLSYf76nC67dz5tghCtnUcy81j9zvoq+/l4GBHpLuBopzEzyYybMulCOv
      +/BoWaLJ1OeL0TXiyTy1NX5mJmbQ3dUcO3WGzbVqSV3x4P3bjC3obNu0lkB4A8cO7cauQj4f
      x1e/ndNHO0hFx9AdAWqr3KiuWprCIbR0kmDtKmpDfhYTCUAnNq9x5MwZ1vpVMkWdnYdOcXjf
      FvTcp32n6qnjzNlvscaXYGQyRfO2PXzrVAdKvkja8HDmzEl8mQSGv44jJ06xIWAnZ3PQfuAo
      HdvWk8p+thHY3Bw8epr925uYnUnStu9lXt7ZUnIPvfGlDk6cOkgxOsfEbIyaujpsRhFFddG+
      axeHXj6CoaVp2/sKp/esYmQ2i2EYaIU8+jP/fgqrq30M9NzFs3oThcQ8ur+aQiZBKp2jdv12
      juzeAsDC/CQLaZW6Oh/BcCu7du3m0O7trKpx0H3zPtVr16AqBrPRPEfPnKG53kl4zUb2HDj6
      6bqXuI6mWYxrnP3um3znO2dxF+2EQznOdZ4jVqyhEO3i/JUbNKzdiFrMUlRs6PkcuXwBp9OJ
      2+fDblNJzgxx7uPbhBsb8PgC2FQVf8BLJj5FJJ4mMjpK/rMjlEJgHW++9k3OHjtELp0lHFJQ
      /WHsigNVKeIO1eBz2fH7A6h2Nz6vE5fThoaTuuoAVfY8nR90MqtUU+d34XE58fv9KOiMjI6Q
      jM0wG//s2NvuZW/HN9i/cxsum52qqgCqAq5AAL+7FltuhHMXPyHUuA6HUkBDRSnmyeTyqA4H
      xUKWbC6Py+UCbKxaW80n5zqJKX783iBeB9gdbpyfXV1MxyY5/2EnDybz1NYH8LqcoDrxuu00
      VDnp7DyPGl6FkpjhwoedpD01uLU8t658RFckQTgYwh/wYnd7cargcHmprw/Sd/MyV+4M8acG
      tJweHy67+rieqjoJ1tawvrGeTDaP3f5pT+nye7h9+SIufy1DXVe40Jtk+5pGUtEubvaNYXc8
      fbsFgK9xDfFolpZGD6rTg6LlCdXW4XS6qa7yoSjgCfipC6+lJmgnVwC7XUVfnOLqvUHqG8PM
      xnM0VnkAheb1tVw518lcxkUwGMDr/rR9FbkOIF6s6YlhguH1eByQTUwS1+porHE+83vzyTk+
      uXaTvBqg4+UOfBU/SDZDkcF7t9BqWtjcVMNSY0qKoigSAGFZiqIoK++qjRBfgQTga2BmKsIS
      N2f+RYqaZtrt6sVCvixt/LKFyCTxXAFNe/51nUciI6MsNX7xtTzCW64MLU90PobdHSAUcJNc
      iJEzHNQEPczPzeP0h3AaORLpAtU11Wi5FKlUBofLTT5XoKq6GiOfZCGZJ1Rbg03PE4slGB2f
      pDq8CtuXD2YNnYXYHJrqpiboYTGxSLagU11Tg5ZdJJnK4g1W43XA/HwMuydIwKOSzebJ5go8
      7LrH2h07qfE4cXrcFDI5HB536XtFXSObK5DOFSjGZ3A1bcBYjKEpTqoDLhYSKTRDwanqGHYP
      VQHvksfjT/0udY3YfAzF5cNtV/F4nGQzBRZnZii63dzt6mbbtnaCQTeqzUWxkMPpUMnmNPJF
      A4eRJ5ktUl1bw8zEJFXrmnnWWc//A4akqbtXqniCAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='7) Why some surveys are invalid? Which questions caused it?_2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales and Profit difference task' width='192'>
      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
      BEAwtL8At7YO/BQ/WN4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='emoji' width='192'>
      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
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='Emoji/Sad Face Emoji.png'>
        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
        o0aNjvj/AaL2nEmFvfVfAAAAAElFTkSuQmCC
      </shape>
      <shape name='Emoji/Smiling Emoji with Eyes Opened.png'>
        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
      </shape>
    </shapes>
  </external>
</workbook>
